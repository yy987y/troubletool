/* eslint-disable */
/*! NeRTC 4.5.1|BUILD v4.5.1-0-ga31965a production */
! function(e, t) {
    "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.NERTC = t() : e.NERTC = t()
}(window, (function() {
    return function(e) {
        var t = {};

        function r(i) {
            if (t[i]) return t[i].exports;
            var n = t[i] = {
                i: i,
                l: !1,
                exports: {}
            };
            return e[i].call(n.exports, n, n.exports, r), n.l = !0, n.exports
        }
        return r.m = e, r.c = t, r.d = function(e, t, i) {
            r.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: i
            })
        }, r.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }, r.t = function(e, t) {
            if (1 & t && (e = r(e)), 8 & t) return e;
            if (4 & t && "object" == typeof e && e && e.__esModule) return e;
            var i = Object.create(null);
            if (r.r(i), Object.defineProperty(i, "default", {
                    enumerable: !0,
                    value: e
                }), 2 & t && "string" != typeof e)
                for (var n in e) r.d(i, n, function(t) {
                    return e[t]
                }.bind(null, n));
            return i
        }, r.n = function(e) {
            var t = e && e.__esModule ? function() {
                return e.default
            } : function() {
                return e
            };
            return r.d(t, "a", t), t
        }, r.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        }, r.p = "", r(r.s = 128)
    }([function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        t.default = {
            INVALID_PARAMETER: 41e3,
            NOT_SUPPORT: 41001,
            NO_SERVER_ADDRESS: 41002,
            SOCKET_ERROR: 41003,
            NO_SIGNALLING: 41004,
            NO_STATS: 41005,
            NO_MEDIASERVER: 41006,
            NO_MEETINGS: 41007,
            NO_LOCALSTREAM: 41008,
            INVALID_OPERATION: 41009,
            REPEAT_JOIN: 41010,
            USER_NOT_IN_CHANNEL: 41011,
            NOT_SUPPORTED_YET: 41012,
            UNKNOWN_TYPE: 41013,
            NOT_ALLOWED: 41014,
            STATE_ERROR: 41015,
            NO_FILE: 41016,
            DECODE_FAILED: 41017,
            ADD_TASK_FAILED: 41018,
            DELETE_TASK_FAILED: 41019,
            UPDATE_TASKS_FAILED: 41020,
            RECORD_API_ERROR: 41021,
            NO_RECORDER_FOUND: 41022,
            NOT_DEFINED: 41023,
            NOT_AVALIABLE: 41024,
            NO_MEDIAHELPER: 41025,
            NO_PLAY: 41026,
            NO_RECORD: 41027,
            NOT_FOUND: 41028,
            APPDATA_ERROR: 41029,
            AUTO_PLAY_NOT_ALLOWED: 41030,
            UNKNOWN: 99999
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        const n = i(r(0));
        class o extends Error {
            constructor(e) {
                let t = e.url ? e.url : "https://dev.yunxin.163.com/docs/interface/NERTC_SDK/Latest/Web/api/index.html#errorCode";
                super(e.message + ` <${function(e){for(let t in n.default)if(n.default[t]===e)return t;return"UNKNOWN"}(e.code)} ${e.code.toString()}> ` + t), this.code_ = e.code, this.message_ = e.message, this.extraCode_ = e.extraCode
            }
            getCode() {
                return this.code_
            }
            getExtraCode() {
                return this.extraCode_
            }
        }
        t.default = o
    }, function(e, t, r) {
        "use strict";
        var i, n, o = e.exports = r(8),
            s = r(120);
        o.codegen = r(233), o.fetch = r(234), o.path = r(235), o.fs = o.inquire("fs"), o.toArray = function(e) {
            if (e) {
                for (var t = Object.keys(e), r = new Array(t.length), i = 0; i < t.length;) r[i] = e[t[i++]];
                return r
            }
            return []
        }, o.toObject = function(e) {
            for (var t = {}, r = 0; r < e.length;) {
                var i = e[r++],
                    n = e[r++];
                void 0 !== n && (t[i] = n)
            }
            return t
        };
        var a = /\\/g,
            d = /"/g;
        o.isReserved = function(e) {
            return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(e)
        }, o.safeProp = function(e) {
            return !/^[$\w_]+$/.test(e) || o.isReserved(e) ? '["' + e.replace(a, "\\\\").replace(d, '\\"') + '"]' : "." + e
        }, o.ucFirst = function(e) {
            return e.charAt(0).toUpperCase() + e.substring(1)
        };
        var c = /_([a-z])/g;
        o.camelCase = function(e) {
            return e.substring(0, 1) + e.substring(1).replace(c, (function(e, t) {
                return t.toUpperCase()
            }))
        }, o.compareFieldsById = function(e, t) {
            return e.id - t.id
        }, o.decorateType = function(e, t) {
            if (e.$type) return t && e.$type.name !== t && (o.decorateRoot.remove(e.$type), e.$type.name = t, o.decorateRoot.add(e.$type)), e.$type;
            i || (i = r(71));
            var n = new i(t || e.name);
            return o.decorateRoot.add(n), n.ctor = e, Object.defineProperty(e, "$type", {
                value: n,
                enumerable: !1
            }), Object.defineProperty(e.prototype, "$type", {
                value: n,
                enumerable: !1
            }), n
        };
        var u = 0;
        o.decorateEnum = function(e) {
            if (e.$type) return e.$type;
            n || (n = r(6));
            var t = new n("Enum" + u++, e);
            return o.decorateRoot.add(t), Object.defineProperty(e, "$type", {
                value: t,
                enumerable: !1
            }), t
        }, o.setProperty = function(e, t, r) {
            if ("object" != typeof e) throw TypeError("dst must be an object");
            if (!t) throw TypeError("path must be specified");
            return function e(t, r, i) {
                var n = r.shift();
                if (r.length > 0) t[n] = e(t[n] || {}, r, i);
                else {
                    var o = t[n];
                    o && (i = [].concat(o).concat(i)), t[n] = i
                }
                return t
            }(e, t = t.split("."), r)
        }, Object.defineProperty(o, "decorateRoot", {
            get: function() {
                return s.decorated || (s.decorated = new(r(76)))
            }
        })
    }, function(e, t, r) {
        "use strict";
        var i = Object.prototype.hasOwnProperty,
            n = "~";

        function o() {}

        function s(e, t, r) {
            this.fn = e, this.context = t, this.once = r || !1
        }

        function a() {
            this._events = new o, this._eventsCount = 0
        }
        Object.create && (o.prototype = Object.create(null), (new o).__proto__ || (n = !1)), a.prototype.eventNames = function() {
            var e, t, r = [];
            if (0 === this._eventsCount) return r;
            for (t in e = this._events) i.call(e, t) && r.push(n ? t.slice(1) : t);
            return Object.getOwnPropertySymbols ? r.concat(Object.getOwnPropertySymbols(e)) : r
        }, a.prototype.listeners = function(e, t) {
            var r = n ? n + e : e,
                i = this._events[r];
            if (t) return !!i;
            if (!i) return [];
            if (i.fn) return [i.fn];
            for (var o = 0, s = i.length, a = new Array(s); o < s; o++) a[o] = i[o].fn;
            return a
        }, a.prototype.emit = function(e, t, r, i, o, s) {
            var a = n ? n + e : e;
            if (!this._events[a]) return !1;
            var d, c, u = this._events[a],
                l = arguments.length;
            if (u.fn) {
                switch (u.once && this.removeListener(e, u.fn, void 0, !0), l) {
                    case 1:
                        return u.fn.call(u.context), !0;
                    case 2:
                        return u.fn.call(u.context, t), !0;
                    case 3:
                        return u.fn.call(u.context, t, r), !0;
                    case 4:
                        return u.fn.call(u.context, t, r, i), !0;
                    case 5:
                        return u.fn.call(u.context, t, r, i, o), !0;
                    case 6:
                        return u.fn.call(u.context, t, r, i, o, s), !0
                }
                for (c = 1, d = new Array(l - 1); c < l; c++) d[c - 1] = arguments[c];
                u.fn.apply(u.context, d)
            } else {
                var p, f = u.length;
                for (c = 0; c < f; c++) switch (u[c].once && this.removeListener(e, u[c].fn, void 0, !0), l) {
                    case 1:
                        u[c].fn.call(u[c].context);
                        break;
                    case 2:
                        u[c].fn.call(u[c].context, t);
                        break;
                    case 3:
                        u[c].fn.call(u[c].context, t, r);
                        break;
                    case 4:
                        u[c].fn.call(u[c].context, t, r, i);
                        break;
                    default:
                        if (!d)
                            for (p = 1, d = new Array(l - 1); p < l; p++) d[p - 1] = arguments[p];
                        u[c].fn.apply(u[c].context, d)
                }
            }
            return !0
        }, a.prototype.on = function(e, t, r) {
            var i = new s(t, r || this),
                o = n ? n + e : e;
            return this._events[o] ? this._events[o].fn ? this._events[o] = [this._events[o], i] : this._events[o].push(i) : (this._events[o] = i, this._eventsCount++), this
        }, a.prototype.once = function(e, t, r) {
            var i = new s(t, r || this, !0),
                o = n ? n + e : e;
            return this._events[o] ? this._events[o].fn ? this._events[o] = [this._events[o], i] : this._events[o].push(i) : (this._events[o] = i, this._eventsCount++), this
        }, a.prototype.removeListener = function(e, t, r, i) {
            var s = n ? n + e : e;
            if (!this._events[s]) return this;
            if (!t) return 0 == --this._eventsCount ? this._events = new o : delete this._events[s], this;
            var a = this._events[s];
            if (a.fn) a.fn !== t || i && !a.once || r && a.context !== r || (0 == --this._eventsCount ? this._events = new o : delete this._events[s]);
            else {
                for (var d = 0, c = [], u = a.length; d < u; d++)(a[d].fn !== t || i && !a[d].once || r && a[d].context !== r) && c.push(a[d]);
                c.length ? this._events[s] = 1 === c.length ? c[0] : c : 0 == --this._eventsCount ? this._events = new o : delete this._events[s]
            }
            return this
        }, a.prototype.removeAllListeners = function(e) {
            var t;
            return e ? (t = n ? n + e : e, this._events[t] && (0 == --this._eventsCount ? this._events = new o : delete this._events[t])) : (this._events = new o, this._eventsCount = 0), this
        }, a.prototype.off = a.prototype.removeListener, a.prototype.addListener = a.prototype.on, a.prototype.setMaxListeners = function() {
            return this
        }, a.prefixed = n, a.EventEmitter = a, e.exports = a
    }, function(e, t) {
        var r = e.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
        "number" == typeof __g && (__g = r)
    }, function(e, t, r) {
        var i = r(61)("wks"),
            n = r(43),
            o = r(4).Symbol,
            s = "function" == typeof o;
        (e.exports = function(e) {
            return i[e] || (i[e] = s && o[e] || (s ? o : n)("Symbol." + e))
        }).store = i
    }, function(e, t, r) {
        "use strict";
        e.exports = s;
        var i = r(23);
        ((s.prototype = Object.create(i.prototype)).constructor = s).className = "Enum";
        var n = r(34),
            o = r(2);

        function s(e, t, r, n, o) {
            if (i.call(this, e, r), t && "object" != typeof t) throw TypeError("values must be an object");
            if (this.valuesById = {}, this.values = Object.create(this.valuesById), this.comment = n, this.comments = o || {}, this.reserved = void 0, t)
                for (var s = Object.keys(t), a = 0; a < s.length; ++a) "number" == typeof t[s[a]] && (this.valuesById[this.values[s[a]] = t[s[a]]] = s[a])
        }
        s.fromJSON = function(e, t) {
            var r = new s(e, t.values, t.options, t.comment, t.comments);
            return r.reserved = t.reserved, r
        }, s.prototype.toJSON = function(e) {
            var t = !!e && Boolean(e.keepComments);
            return o.toObject(["options", this.options, "values", this.values, "reserved", this.reserved && this.reserved.length ? this.reserved : void 0, "comment", t ? this.comment : void 0, "comments", t ? this.comments : void 0])
        }, s.prototype.add = function(e, t, r) {
            if (!o.isString(e)) throw TypeError("name must be a string");
            if (!o.isInteger(t)) throw TypeError("id must be an integer");
            if (void 0 !== this.values[e]) throw Error("duplicate name '" + e + "' in " + this);
            if (this.isReservedId(t)) throw Error("id " + t + " is reserved in " + this);
            if (this.isReservedName(e)) throw Error("name '" + e + "' is reserved in " + this);
            if (void 0 !== this.valuesById[t]) {
                if (!this.options || !this.options.allow_alias) throw Error("duplicate id " + t + " in " + this);
                this.values[e] = t
            } else this.valuesById[this.values[e] = t] = e;
            return this.comments[e] = r || null, this
        }, s.prototype.remove = function(e) {
            if (!o.isString(e)) throw TypeError("name must be a string");
            var t = this.values[e];
            if (null == t) throw Error("name '" + e + "' does not exist in " + this);
            return delete this.valuesById[t], delete this.values[e], delete this.comments[e], this
        }, s.prototype.isReservedId = function(e) {
            return n.isReservedId(this.reserved, e)
        }, s.prototype.isReservedName = function(e) {
            return n.isReservedName(this.reserved, e)
        }
    }, function(e, t) {
        var r = e.exports = {
            version: "2.6.12"
        };
        "number" == typeof __e && (__e = r)
    }, function(e, t, r) {
        "use strict";
        (function(e) {
            var i = t;

            function n(e, t, r) {
                for (var i = Object.keys(t), n = 0; n < i.length; ++n) void 0 !== e[i[n]] && r || (e[i[n]] = t[i[n]]);
                return e
            }

            function o(e) {
                function t(e, r) {
                    if (!(this instanceof t)) return new t(e, r);
                    Object.defineProperty(this, "message", {
                        get: function() {
                            return e
                        }
                    }), Error.captureStackTrace ? Error.captureStackTrace(this, t) : Object.defineProperty(this, "stack", {
                        value: (new Error).stack || ""
                    }), r && n(this, r)
                }
                return (t.prototype = Object.create(Error.prototype)).constructor = t, Object.defineProperty(t.prototype, "name", {
                    get: function() {
                        return e
                    }
                }), t.prototype.toString = function() {
                    return this.name + ": " + this.message
                }, t
            }
            i.asPromise = r(117), i.base64 = r(224), i.EventEmitter = r(225), i.float = r(226), i.inquire = r(118), i.utf8 = r(227), i.pool = r(228), i.LongBits = r(229), i.isNode = Boolean(void 0 !== e && e && e.process && e.process.versions && e.process.versions.node), i.global = i.isNode && e || "undefined" != typeof window && window || "undefined" != typeof self && self || this, i.emptyArray = Object.freeze ? Object.freeze([]) : [], i.emptyObject = Object.freeze ? Object.freeze({}) : {}, i.isInteger = Number.isInteger || function(e) {
                return "number" == typeof e && isFinite(e) && Math.floor(e) === e
            }, i.isString = function(e) {
                return "string" == typeof e || e instanceof String
            }, i.isObject = function(e) {
                return e && "object" == typeof e
            }, i.isset = i.isSet = function(e, t) {
                var r = e[t];
                return !(null == r || !e.hasOwnProperty(t)) && ("object" != typeof r || (Array.isArray(r) ? r.length : Object.keys(r).length) > 0)
            }, i.Buffer = function() {
                try {
                    var e = i.inquire("buffer").Buffer;
                    return e.prototype.utf8Write ? e : null
                } catch (e) {
                    return null
                }
            }(), i._Buffer_from = null, i._Buffer_allocUnsafe = null, i.newBuffer = function(e) {
                return "number" == typeof e ? i.Buffer ? i._Buffer_allocUnsafe(e) : new i.Array(e) : i.Buffer ? i._Buffer_from(e) : "undefined" == typeof Uint8Array ? e : new Uint8Array(e)
            }, i.Array = "undefined" != typeof Uint8Array ? Uint8Array : Array, i.Long = i.global.dcodeIO && i.global.dcodeIO.Long || i.global.Long || i.inquire("long"), i.key2Re = /^true|false|0|1$/, i.key32Re = /^-?(?:0|[1-9][0-9]*)$/, i.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/, i.longToHash = function(e) {
                return e ? i.LongBits.from(e).toHash() : i.LongBits.zeroHash
            }, i.longFromHash = function(e, t) {
                var r = i.LongBits.fromHash(e);
                return i.Long ? i.Long.fromBits(r.lo, r.hi, t) : r.toNumber(Boolean(t))
            }, i.merge = n, i.lcFirst = function(e) {
                return e.charAt(0).toLowerCase() + e.substring(1)
            }, i.newError = o, i.ProtocolError = o("ProtocolError"), i.oneOfGetter = function(e) {
                for (var t = {}, r = 0; r < e.length; ++r) t[e[r]] = 1;
                return function() {
                    for (var e = Object.keys(this), r = e.length - 1; r > -1; --r)
                        if (1 === t[e[r]] && void 0 !== this[e[r]] && null !== this[e[r]]) return e[r]
                }
            }, i.oneOfSetter = function(e) {
                return function(t) {
                    for (var r = 0; r < e.length; ++r) e[r] !== t && delete this[e[r]]
                }
            }, i.toJSONOptions = {
                longs: String,
                enums: String,
                bytes: String,
                json: !0
            }, i._configure = function() {
                var e = i.Buffer;
                e ? (i._Buffer_from = e.from !== Uint8Array.from && e.from || function(t, r) {
                    return new e(t, r)
                }, i._Buffer_allocUnsafe = e.allocUnsafe || function(t) {
                    return new e(t)
                }) : i._Buffer_from = i._Buffer_allocUnsafe = null
            }
        }).call(this, r(50))
    }, function(e, t, r) {
        var i = r(16);
        e.exports = function(e) {
            if (!i(e)) throw TypeError(e + " is not an object!");
            return e
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Logger = void 0;
        const i = "mediasoup-client";
        t.Logger = {
            debug(e, ...t) {
                const r = e ? `${i}:${e}` : "" + i;
                t = Array.prototype.slice.call(arguments);
                this.formatArgs(t, r), console.debug.apply(console, t), window.logStorage && window.logStorage.log("debug", t)
            },
            warn(e, ...t) {
                const r = e ? `${i}:${e}` : "" + i;
                t = Array.prototype.slice.call(arguments);
                this.formatArgs(t, r), console.warn.apply(console, t), window.logStorage && window.logStorage.log("warn", t)
            },
            error(e, ...t) {
                const r = e ? `${i}:${e}` : "" + i;
                t = Array.prototype.slice.call(arguments);
                this.formatArgs(t, r), console.error.apply(console, t), window.logStorage && window.logStorage.log("error", t)
            },
            formatSingleArg(e) {
                if (e instanceof RTCRtpSender) {
                    const t = e;
                    return `[RTCRtpSender track: ${this.formatSingleArg(t.track)}]`
                }
                if (e instanceof MediaStreamTrack) {
                    const t = e;
                    return `[MediaStreamTrack kind:${t.kind} label:${t.label} readyState:${t.readyState} id: ${t.id} enabled:${t.enabled} muted: ${t.muted}]`
                }
                return e
            },
            formatArgs(e, t) {
                let r = new Date,
                    i = `[WEBRTC LOG ${this.formatTimeUnit(""+(r.getMonth()+1))+"-"+this.formatTimeUnit(""+r.getDate())+" "+this.formatTimeUnit(""+r.getHours())+":"+this.formatTimeUnit(""+r.getMinutes())+":"+this.formatTimeUnit(""+r.getSeconds())+":"+this.formatTimeUnit(""+r.getMilliseconds(),3)} ${t.toUpperCase()}]  `;
                for (let t = e.length - 1; t >= 0; t--) e[t] = this.formatSingleArg(e[t]);
                return e.unshift(i), e
            },
            formatTimeUnit(e, t) {
                t = t || 2;
                for (var r = "" + e; r.length < t;) r = "0" + r;
                return r
            }
        }
    }, function(e, t, r) {
        var i;
        ! function(n) {
            "use strict";
            var o, s = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
                a = Math.ceil,
                d = Math.floor,
                c = "[BigNumber Error] ",
                u = c + "Number primitive has more than 15 significant digits: ",
                l = 1e14,
                p = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
                f = 1e9;

            function h(e) {
                var t = 0 | e;
                return e > 0 || e === t ? t : t - 1
            }

            function m(e) {
                for (var t, r, i = 1, n = e.length, o = e[0] + ""; i < n;) {
                    for (r = 14 - (t = e[i++] + "").length; r--; t = "0" + t);
                    o += t
                }
                for (n = o.length; 48 === o.charCodeAt(--n););
                return o.slice(0, n + 1 || 1)
            }

            function g(e, t) {
                var r, i, n = e.c,
                    o = t.c,
                    s = e.s,
                    a = t.s,
                    d = e.e,
                    c = t.e;
                if (!s || !a) return null;
                if (r = n && !n[0], i = o && !o[0], r || i) return r ? i ? 0 : -a : s;
                if (s != a) return s;
                if (r = s < 0, i = d == c, !n || !o) return i ? 0 : !n ^ r ? 1 : -1;
                if (!i) return d > c ^ r ? 1 : -1;
                for (a = (d = n.length) < (c = o.length) ? d : c, s = 0; s < a; s++)
                    if (n[s] != o[s]) return n[s] > o[s] ^ r ? 1 : -1;
                return d == c ? 0 : d > c ^ r ? 1 : -1
            }

            function v(e, t, r, i) {
                if (e < t || e > r || e !== d(e)) throw Error(c + (i || "Argument") + ("number" == typeof e ? e < t || e > r ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(e))
            }

            function y(e) {
                var t = e.c.length - 1;
                return h(e.e / 14) == t && e.c[t] % 2 != 0
            }

            function _(e, t) {
                return (e.length > 1 ? e.charAt(0) + "." + e.slice(1) : e) + (t < 0 ? "e" : "e+") + t
            }

            function S(e, t, r) {
                var i, n;
                if (t < 0) {
                    for (n = r + "."; ++t; n += r);
                    e = n + e
                } else if (++t > (i = e.length)) {
                    for (n = r, t -= i; --t; n += r);
                    e += n
                } else t < i && (e = e.slice(0, t) + "." + e.slice(t));
                return e
            }(o = function e(t) {
                var r, i, n, o, b, R, w, T, E, A = V.prototype = {
                        constructor: V,
                        toString: null,
                        valueOf: null
                    },
                    O = new V(1),
                    I = 20,
                    x = 4,
                    P = -7,
                    k = 21,
                    C = -1e7,
                    D = 1e7,
                    M = !1,
                    N = 1,
                    L = 0,
                    j = {
                        prefix: "",
                        groupSize: 3,
                        secondaryGroupSize: 0,
                        groupSeparator: ",",
                        decimalSeparator: ".",
                        fractionGroupSize: 0,
                        fractionGroupSeparator: " ",
                        suffix: ""
                    },
                    F = "0123456789abcdefghijklmnopqrstuvwxyz";

                function V(e, t) {
                    var r, o, a, c, l, p, f, h, m = this;
                    if (!(m instanceof V)) return new V(e, t);
                    if (null == t) {
                        if (e && !0 === e._isBigNumber) return m.s = e.s, void(!e.c || e.e > D ? m.c = m.e = null : e.e < C ? m.c = [m.e = 0] : (m.e = e.e, m.c = e.c.slice()));
                        if ((p = "number" == typeof e) && 0 * e == 0) {
                            if (m.s = 1 / e < 0 ? (e = -e, -1) : 1, e === ~~e) {
                                for (c = 0, l = e; l >= 10; l /= 10, c++);
                                return void(c > D ? m.c = m.e = null : (m.e = c, m.c = [e]))
                            }
                            h = String(e)
                        } else {
                            if (!s.test(h = String(e))) return n(m, h, p);
                            m.s = 45 == h.charCodeAt(0) ? (h = h.slice(1), -1) : 1
                        }(c = h.indexOf(".")) > -1 && (h = h.replace(".", "")), (l = h.search(/e/i)) > 0 ? (c < 0 && (c = l), c += +h.slice(l + 1), h = h.substring(0, l)) : c < 0 && (c = h.length)
                    } else {
                        if (v(t, 2, F.length, "Base"), 10 == t) return W(m = new V(e), I + m.e + 1, x);
                        if (h = String(e), p = "number" == typeof e) {
                            if (0 * e != 0) return n(m, h, p, t);
                            if (m.s = 1 / e < 0 ? (h = h.slice(1), -1) : 1, V.DEBUG && h.replace(/^0\.0*|\./, "").length > 15) throw Error(u + e)
                        } else m.s = 45 === h.charCodeAt(0) ? (h = h.slice(1), -1) : 1;
                        for (r = F.slice(0, t), c = l = 0, f = h.length; l < f; l++)
                            if (r.indexOf(o = h.charAt(l)) < 0) {
                                if ("." == o) {
                                    if (l > c) {
                                        c = f;
                                        continue
                                    }
                                } else if (!a && (h == h.toUpperCase() && (h = h.toLowerCase()) || h == h.toLowerCase() && (h = h.toUpperCase()))) {
                                    a = !0, l = -1, c = 0;
                                    continue
                                }
                                return n(m, String(e), p, t)
                            } p = !1, (c = (h = i(h, t, 10, m.s)).indexOf(".")) > -1 ? h = h.replace(".", "") : c = h.length
                    }
                    for (l = 0; 48 === h.charCodeAt(l); l++);
                    for (f = h.length; 48 === h.charCodeAt(--f););
                    if (h = h.slice(l, ++f)) {
                        if (f -= l, p && V.DEBUG && f > 15 && (e > 9007199254740991 || e !== d(e))) throw Error(u + m.s * e);
                        if ((c = c - l - 1) > D) m.c = m.e = null;
                        else if (c < C) m.c = [m.e = 0];
                        else {
                            if (m.e = c, m.c = [], l = (c + 1) % 14, c < 0 && (l += 14), l < f) {
                                for (l && m.c.push(+h.slice(0, l)), f -= 14; l < f;) m.c.push(+h.slice(l, l += 14));
                                l = 14 - (h = h.slice(l)).length
                            } else l -= f;
                            for (; l--; h += "0");
                            m.c.push(+h)
                        }
                    } else m.c = [m.e = 0]
                }

                function U(e, t, r, i) {
                    var n, o, s, a, d;
                    if (null == r ? r = x : v(r, 0, 8), !e.c) return e.toString();
                    if (n = e.c[0], s = e.e, null == t) d = m(e.c), d = 1 == i || 2 == i && (s <= P || s >= k) ? _(d, s) : S(d, s, "0");
                    else if (o = (e = W(new V(e), t, r)).e, a = (d = m(e.c)).length, 1 == i || 2 == i && (t <= o || o <= P)) {
                        for (; a < t; d += "0", a++);
                        d = _(d, o)
                    } else if (t -= s, d = S(d, o, "0"), o + 1 > a) {
                        if (--t > 0)
                            for (d += "."; t--; d += "0");
                    } else if ((t += o - a) > 0)
                        for (o + 1 == a && (d += "."); t--; d += "0");
                    return e.s < 0 && n ? "-" + d : d
                }

                function B(e, t) {
                    for (var r, i = 1, n = new V(e[0]); i < e.length; i++) {
                        if (!(r = new V(e[i])).s) {
                            n = r;
                            break
                        }
                        t.call(n, r) && (n = r)
                    }
                    return n
                }

                function H(e, t, r) {
                    for (var i = 1, n = t.length; !t[--n]; t.pop());
                    for (n = t[0]; n >= 10; n /= 10, i++);
                    return (r = i + 14 * r - 1) > D ? e.c = e.e = null : r < C ? e.c = [e.e = 0] : (e.e = r, e.c = t), e
                }

                function W(e, t, r, i) {
                    var n, o, s, c, u, f, h, m = e.c,
                        g = p;
                    if (m) {
                        e: {
                            for (n = 1, c = m[0]; c >= 10; c /= 10, n++);
                            if ((o = t - n) < 0) o += 14,
                            s = t,
                            h = (u = m[f = 0]) / g[n - s - 1] % 10 | 0;
                            else if ((f = a((o + 1) / 14)) >= m.length) {
                                if (!i) break e;
                                for (; m.length <= f; m.push(0));
                                u = h = 0, n = 1, s = (o %= 14) - 14 + 1
                            } else {
                                for (u = c = m[f], n = 1; c >= 10; c /= 10, n++);
                                h = (s = (o %= 14) - 14 + n) < 0 ? 0 : u / g[n - s - 1] % 10 | 0
                            }
                            if (i = i || t < 0 || null != m[f + 1] || (s < 0 ? u : u % g[n - s - 1]), i = r < 4 ? (h || i) && (0 == r || r == (e.s < 0 ? 3 : 2)) : h > 5 || 5 == h && (4 == r || i || 6 == r && (o > 0 ? s > 0 ? u / g[n - s] : 0 : m[f - 1]) % 10 & 1 || r == (e.s < 0 ? 8 : 7)), t < 1 || !m[0]) return m.length = 0,
                            i ? (t -= e.e + 1, m[0] = g[(14 - t % 14) % 14], e.e = -t || 0) : m[0] = e.e = 0,
                            e;
                            if (0 == o ? (m.length = f, c = 1, f--) : (m.length = f + 1, c = g[14 - o], m[f] = s > 0 ? d(u / g[n - s] % g[s]) * c : 0), i)
                                for (;;) {
                                    if (0 == f) {
                                        for (o = 1, s = m[0]; s >= 10; s /= 10, o++);
                                        for (s = m[0] += c, c = 1; s >= 10; s /= 10, c++);
                                        o != c && (e.e++, m[0] == l && (m[0] = 1));
                                        break
                                    }
                                    if (m[f] += c, m[f] != l) break;
                                    m[f--] = 0, c = 1
                                }
                            for (o = m.length; 0 === m[--o]; m.pop());
                        }
                        e.e > D ? e.c = e.e = null : e.e < C && (e.c = [e.e = 0])
                    }
                    return e
                }

                function $(e) {
                    var t, r = e.e;
                    return null === r ? e.toString() : (t = m(e.c), t = r <= P || r >= k ? _(t, r) : S(t, r, "0"), e.s < 0 ? "-" + t : t)
                }
                return V.clone = e, V.ROUND_UP = 0, V.ROUND_DOWN = 1, V.ROUND_CEIL = 2, V.ROUND_FLOOR = 3, V.ROUND_HALF_UP = 4, V.ROUND_HALF_DOWN = 5, V.ROUND_HALF_EVEN = 6, V.ROUND_HALF_CEIL = 7, V.ROUND_HALF_FLOOR = 8, V.EUCLID = 9, V.config = V.set = function(e) {
                    var t, r;
                    if (null != e) {
                        if ("object" != typeof e) throw Error(c + "Object expected: " + e);
                        if (e.hasOwnProperty(t = "DECIMAL_PLACES") && (v(r = e[t], 0, f, t), I = r), e.hasOwnProperty(t = "ROUNDING_MODE") && (v(r = e[t], 0, 8, t), x = r), e.hasOwnProperty(t = "EXPONENTIAL_AT") && ((r = e[t]) && r.pop ? (v(r[0], -f, 0, t), v(r[1], 0, f, t), P = r[0], k = r[1]) : (v(r, -f, f, t), P = -(k = r < 0 ? -r : r))), e.hasOwnProperty(t = "RANGE"))
                            if ((r = e[t]) && r.pop) v(r[0], -f, -1, t), v(r[1], 1, f, t), C = r[0], D = r[1];
                            else {
                                if (v(r, -f, f, t), !r) throw Error(c + t + " cannot be zero: " + r);
                                C = -(D = r < 0 ? -r : r)
                            } if (e.hasOwnProperty(t = "CRYPTO")) {
                            if ((r = e[t]) !== !!r) throw Error(c + t + " not true or false: " + r);
                            if (r) {
                                if ("undefined" == typeof crypto || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw M = !r, Error(c + "crypto unavailable");
                                M = r
                            } else M = r
                        }
                        if (e.hasOwnProperty(t = "MODULO_MODE") && (v(r = e[t], 0, 9, t), N = r), e.hasOwnProperty(t = "POW_PRECISION") && (v(r = e[t], 0, f, t), L = r), e.hasOwnProperty(t = "FORMAT")) {
                            if ("object" != typeof(r = e[t])) throw Error(c + t + " not an object: " + r);
                            j = r
                        }
                        if (e.hasOwnProperty(t = "ALPHABET")) {
                            if ("string" != typeof(r = e[t]) || /^.?$|[+\-.\s]|(.).*\1/.test(r)) throw Error(c + t + " invalid: " + r);
                            F = r
                        }
                    }
                    return {
                        DECIMAL_PLACES: I,
                        ROUNDING_MODE: x,
                        EXPONENTIAL_AT: [P, k],
                        RANGE: [C, D],
                        CRYPTO: M,
                        MODULO_MODE: N,
                        POW_PRECISION: L,
                        FORMAT: j,
                        ALPHABET: F
                    }
                }, V.isBigNumber = function(e) {
                    if (!e || !0 !== e._isBigNumber) return !1;
                    if (!V.DEBUG) return !0;
                    var t, r, i = e.c,
                        n = e.e,
                        o = e.s;
                    e: if ("[object Array]" == {}.toString.call(i)) {
                        if ((1 === o || -1 === o) && n >= -f && n <= f && n === d(n)) {
                            if (0 === i[0]) {
                                if (0 === n && 1 === i.length) return !0;
                                break e
                            }
                            if ((t = (n + 1) % 14) < 1 && (t += 14), String(i[0]).length == t) {
                                for (t = 0; t < i.length; t++)
                                    if ((r = i[t]) < 0 || r >= l || r !== d(r)) break e;
                                if (0 !== r) return !0
                            }
                        }
                    } else if (null === i && null === n && (null === o || 1 === o || -1 === o)) return !0;
                    throw Error(c + "Invalid BigNumber: " + e)
                }, V.maximum = V.max = function() {
                    return B(arguments, A.lt)
                }, V.minimum = V.min = function() {
                    return B(arguments, A.gt)
                }, V.random = (o = 9007199254740992 * Math.random() & 2097151 ? function() {
                    return d(9007199254740992 * Math.random())
                } : function() {
                    return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0)
                }, function(e) {
                    var t, r, i, n, s, u = 0,
                        l = [],
                        h = new V(O);
                    if (null == e ? e = I : v(e, 0, f), n = a(e / 14), M)
                        if (crypto.getRandomValues) {
                            for (t = crypto.getRandomValues(new Uint32Array(n *= 2)); u < n;)(s = 131072 * t[u] + (t[u + 1] >>> 11)) >= 9e15 ? (r = crypto.getRandomValues(new Uint32Array(2)), t[u] = r[0], t[u + 1] = r[1]) : (l.push(s % 1e14), u += 2);
                            u = n / 2
                        } else {
                            if (!crypto.randomBytes) throw M = !1, Error(c + "crypto unavailable");
                            for (t = crypto.randomBytes(n *= 7); u < n;)(s = 281474976710656 * (31 & t[u]) + 1099511627776 * t[u + 1] + 4294967296 * t[u + 2] + 16777216 * t[u + 3] + (t[u + 4] << 16) + (t[u + 5] << 8) + t[u + 6]) >= 9e15 ? crypto.randomBytes(7).copy(t, u) : (l.push(s % 1e14), u += 7);
                            u = n / 7
                        } if (!M)
                        for (; u < n;)(s = o()) < 9e15 && (l[u++] = s % 1e14);
                    for (e %= 14, (n = l[--u]) && e && (s = p[14 - e], l[u] = d(n / s) * s); 0 === l[u]; l.pop(), u--);
                    if (u < 0) l = [i = 0];
                    else {
                        for (i = -1; 0 === l[0]; l.splice(0, 1), i -= 14);
                        for (u = 1, s = l[0]; s >= 10; s /= 10, u++);
                        u < 14 && (i -= 14 - u)
                    }
                    return h.e = i, h.c = l, h
                }), V.sum = function() {
                    for (var e = 1, t = arguments, r = new V(t[0]); e < t.length;) r = r.plus(t[e++]);
                    return r
                }, i = function() {
                    function e(e, t, r, i) {
                        for (var n, o, s = [0], a = 0, d = e.length; a < d;) {
                            for (o = s.length; o--; s[o] *= t);
                            for (s[0] += i.indexOf(e.charAt(a++)), n = 0; n < s.length; n++) s[n] > r - 1 && (null == s[n + 1] && (s[n + 1] = 0), s[n + 1] += s[n] / r | 0, s[n] %= r)
                        }
                        return s.reverse()
                    }
                    return function(t, i, n, o, s) {
                        var a, d, c, u, l, p, f, h, g = t.indexOf("."),
                            v = I,
                            y = x;
                        for (g >= 0 && (u = L, L = 0, t = t.replace(".", ""), p = (h = new V(i)).pow(t.length - g), L = u, h.c = e(S(m(p.c), p.e, "0"), 10, n, "0123456789"), h.e = h.c.length), c = u = (f = e(t, i, n, s ? (a = F, "0123456789") : (a = "0123456789", F))).length; 0 == f[--u]; f.pop());
                        if (!f[0]) return a.charAt(0);
                        if (g < 0 ? --c : (p.c = f, p.e = c, p.s = o, f = (p = r(p, h, v, y, n)).c, l = p.r, c = p.e), g = f[d = c + v + 1], u = n / 2, l = l || d < 0 || null != f[d + 1], l = y < 4 ? (null != g || l) && (0 == y || y == (p.s < 0 ? 3 : 2)) : g > u || g == u && (4 == y || l || 6 == y && 1 & f[d - 1] || y == (p.s < 0 ? 8 : 7)), d < 1 || !f[0]) t = l ? S(a.charAt(1), -v, a.charAt(0)) : a.charAt(0);
                        else {
                            if (f.length = d, l)
                                for (--n; ++f[--d] > n;) f[d] = 0, d || (++c, f = [1].concat(f));
                            for (u = f.length; !f[--u];);
                            for (g = 0, t = ""; g <= u; t += a.charAt(f[g++]));
                            t = S(t, c, a.charAt(0))
                        }
                        return t
                    }
                }(), r = function() {
                    function e(e, t, r) {
                        var i, n, o, s, a = 0,
                            d = e.length,
                            c = t % 1e7,
                            u = t / 1e7 | 0;
                        for (e = e.slice(); d--;) a = ((n = c * (o = e[d] % 1e7) + (i = u * o + (s = e[d] / 1e7 | 0) * c) % 1e7 * 1e7 + a) / r | 0) + (i / 1e7 | 0) + u * s, e[d] = n % r;
                        return a && (e = [a].concat(e)), e
                    }

                    function t(e, t, r, i) {
                        var n, o;
                        if (r != i) o = r > i ? 1 : -1;
                        else
                            for (n = o = 0; n < r; n++)
                                if (e[n] != t[n]) {
                                    o = e[n] > t[n] ? 1 : -1;
                                    break
                                } return o
                    }

                    function r(e, t, r, i) {
                        for (var n = 0; r--;) e[r] -= n, n = e[r] < t[r] ? 1 : 0, e[r] = n * i + e[r] - t[r];
                        for (; !e[0] && e.length > 1; e.splice(0, 1));
                    }
                    return function(i, n, o, s, a) {
                        var c, u, p, f, m, g, v, y, _, S, b, R, w, T, E, A, O, I = i.s == n.s ? 1 : -1,
                            x = i.c,
                            P = n.c;
                        if (!(x && x[0] && P && P[0])) return new V(i.s && n.s && (x ? !P || x[0] != P[0] : P) ? x && 0 == x[0] || !P ? 0 * I : I / 0 : NaN);
                        for (_ = (y = new V(I)).c = [], I = o + (u = i.e - n.e) + 1, a || (a = l, u = h(i.e / 14) - h(n.e / 14), I = I / 14 | 0), p = 0; P[p] == (x[p] || 0); p++);
                        if (P[p] > (x[p] || 0) && u--, I < 0) _.push(1), f = !0;
                        else {
                            for (T = x.length, A = P.length, p = 0, I += 2, (m = d(a / (P[0] + 1))) > 1 && (P = e(P, m, a), x = e(x, m, a), A = P.length, T = x.length), w = A, b = (S = x.slice(0, A)).length; b < A; S[b++] = 0);
                            O = P.slice(), O = [0].concat(O), E = P[0], P[1] >= a / 2 && E++;
                            do {
                                if (m = 0, (c = t(P, S, A, b)) < 0) {
                                    if (R = S[0], A != b && (R = R * a + (S[1] || 0)), (m = d(R / E)) > 1)
                                        for (m >= a && (m = a - 1), v = (g = e(P, m, a)).length, b = S.length; 1 == t(g, S, v, b);) m--, r(g, A < v ? O : P, v, a), v = g.length, c = 1;
                                    else 0 == m && (c = m = 1), v = (g = P.slice()).length;
                                    if (v < b && (g = [0].concat(g)), r(S, g, b, a), b = S.length, -1 == c)
                                        for (; t(P, S, A, b) < 1;) m++, r(S, A < b ? O : P, b, a), b = S.length
                                } else 0 === c && (m++, S = [0]);
                                _[p++] = m, S[0] ? S[b++] = x[w] || 0 : (S = [x[w]], b = 1)
                            } while ((w++ < T || null != S[0]) && I--);
                            f = null != S[0], _[0] || _.splice(0, 1)
                        }
                        if (a == l) {
                            for (p = 1, I = _[0]; I >= 10; I /= 10, p++);
                            W(y, o + (y.e = p + 14 * u - 1) + 1, s, f)
                        } else y.e = u, y.r = +f;
                        return y
                    }
                }(), b = /^(-?)0([xbo])(?=\w[\w.]*$)/i, R = /^([^.]+)\.$/, w = /^\.([^.]+)$/, T = /^-?(Infinity|NaN)$/, E = /^\s*\+(?=[\w.])|^\s+|\s+$/g, n = function(e, t, r, i) {
                    var n, o = r ? t : t.replace(E, "");
                    if (T.test(o)) e.s = isNaN(o) ? null : o < 0 ? -1 : 1;
                    else {
                        if (!r && (o = o.replace(b, (function(e, t, r) {
                                return n = "x" == (r = r.toLowerCase()) ? 16 : "b" == r ? 2 : 8, i && i != n ? e : t
                            })), i && (n = i, o = o.replace(R, "$1").replace(w, "0.$1")), t != o)) return new V(o, n);
                        if (V.DEBUG) throw Error(c + "Not a" + (i ? " base " + i : "") + " number: " + t);
                        e.s = null
                    }
                    e.c = e.e = null
                }, A.absoluteValue = A.abs = function() {
                    var e = new V(this);
                    return e.s < 0 && (e.s = 1), e
                }, A.comparedTo = function(e, t) {
                    return g(this, new V(e, t))
                }, A.decimalPlaces = A.dp = function(e, t) {
                    var r, i, n, o = this;
                    if (null != e) return v(e, 0, f), null == t ? t = x : v(t, 0, 8), W(new V(o), e + o.e + 1, t);
                    if (!(r = o.c)) return null;
                    if (i = 14 * ((n = r.length - 1) - h(this.e / 14)), n = r[n])
                        for (; n % 10 == 0; n /= 10, i--);
                    return i < 0 && (i = 0), i
                }, A.dividedBy = A.div = function(e, t) {
                    return r(this, new V(e, t), I, x)
                }, A.dividedToIntegerBy = A.idiv = function(e, t) {
                    return r(this, new V(e, t), 0, 1)
                }, A.exponentiatedBy = A.pow = function(e, t) {
                    var r, i, n, o, s, u, l, p, f = this;
                    if ((e = new V(e)).c && !e.isInteger()) throw Error(c + "Exponent not an integer: " + $(e));
                    if (null != t && (t = new V(t)), s = e.e > 14, !f.c || !f.c[0] || 1 == f.c[0] && !f.e && 1 == f.c.length || !e.c || !e.c[0]) return p = new V(Math.pow(+$(f), s ? 2 - y(e) : +$(e))), t ? p.mod(t) : p;
                    if (u = e.s < 0, t) {
                        if (t.c ? !t.c[0] : !t.s) return new V(NaN);
                        (i = !u && f.isInteger() && t.isInteger()) && (f = f.mod(t))
                    } else {
                        if (e.e > 9 && (f.e > 0 || f.e < -1 || (0 == f.e ? f.c[0] > 1 || s && f.c[1] >= 24e7 : f.c[0] < 8e13 || s && f.c[0] <= 9999975e7))) return o = f.s < 0 && y(e) ? -0 : 0, f.e > -1 && (o = 1 / o), new V(u ? 1 / o : o);
                        L && (o = a(L / 14 + 2))
                    }
                    for (s ? (r = new V(.5), u && (e.s = 1), l = y(e)) : l = (n = Math.abs(+$(e))) % 2, p = new V(O);;) {
                        if (l) {
                            if (!(p = p.times(f)).c) break;
                            o ? p.c.length > o && (p.c.length = o) : i && (p = p.mod(t))
                        }
                        if (n) {
                            if (0 === (n = d(n / 2))) break;
                            l = n % 2
                        } else if (W(e = e.times(r), e.e + 1, 1), e.e > 14) l = y(e);
                        else {
                            if (0 === (n = +$(e))) break;
                            l = n % 2
                        }
                        f = f.times(f), o ? f.c && f.c.length > o && (f.c.length = o) : i && (f = f.mod(t))
                    }
                    return i ? p : (u && (p = O.div(p)), t ? p.mod(t) : o ? W(p, L, x, void 0) : p)
                }, A.integerValue = function(e) {
                    var t = new V(this);
                    return null == e ? e = x : v(e, 0, 8), W(t, t.e + 1, e)
                }, A.isEqualTo = A.eq = function(e, t) {
                    return 0 === g(this, new V(e, t))
                }, A.isFinite = function() {
                    return !!this.c
                }, A.isGreaterThan = A.gt = function(e, t) {
                    return g(this, new V(e, t)) > 0
                }, A.isGreaterThanOrEqualTo = A.gte = function(e, t) {
                    return 1 === (t = g(this, new V(e, t))) || 0 === t
                }, A.isInteger = function() {
                    return !!this.c && h(this.e / 14) > this.c.length - 2
                }, A.isLessThan = A.lt = function(e, t) {
                    return g(this, new V(e, t)) < 0
                }, A.isLessThanOrEqualTo = A.lte = function(e, t) {
                    return -1 === (t = g(this, new V(e, t))) || 0 === t
                }, A.isNaN = function() {
                    return !this.s
                }, A.isNegative = function() {
                    return this.s < 0
                }, A.isPositive = function() {
                    return this.s > 0
                }, A.isZero = function() {
                    return !!this.c && 0 == this.c[0]
                }, A.minus = function(e, t) {
                    var r, i, n, o, s = this,
                        a = s.s;
                    if (t = (e = new V(e, t)).s, !a || !t) return new V(NaN);
                    if (a != t) return e.s = -t, s.plus(e);
                    var d = s.e / 14,
                        c = e.e / 14,
                        u = s.c,
                        p = e.c;
                    if (!d || !c) {
                        if (!u || !p) return u ? (e.s = -t, e) : new V(p ? s : NaN);
                        if (!u[0] || !p[0]) return p[0] ? (e.s = -t, e) : new V(u[0] ? s : 3 == x ? -0 : 0)
                    }
                    if (d = h(d), c = h(c), u = u.slice(), a = d - c) {
                        for ((o = a < 0) ? (a = -a, n = u) : (c = d, n = p), n.reverse(), t = a; t--; n.push(0));
                        n.reverse()
                    } else
                        for (i = (o = (a = u.length) < (t = p.length)) ? a : t, a = t = 0; t < i; t++)
                            if (u[t] != p[t]) {
                                o = u[t] < p[t];
                                break
                            } if (o && (n = u, u = p, p = n, e.s = -e.s), (t = (i = p.length) - (r = u.length)) > 0)
                        for (; t--; u[r++] = 0);
                    for (t = l - 1; i > a;) {
                        if (u[--i] < p[i]) {
                            for (r = i; r && !u[--r]; u[r] = t);
                            --u[r], u[i] += l
                        }
                        u[i] -= p[i]
                    }
                    for (; 0 == u[0]; u.splice(0, 1), --c);
                    return u[0] ? H(e, u, c) : (e.s = 3 == x ? -1 : 1, e.c = [e.e = 0], e)
                }, A.modulo = A.mod = function(e, t) {
                    var i, n, o = this;
                    return e = new V(e, t), !o.c || !e.s || e.c && !e.c[0] ? new V(NaN) : !e.c || o.c && !o.c[0] ? new V(o) : (9 == N ? (n = e.s, e.s = 1, i = r(o, e, 0, 3), e.s = n, i.s *= n) : i = r(o, e, 0, N), (e = o.minus(i.times(e))).c[0] || 1 != N || (e.s = o.s), e)
                }, A.multipliedBy = A.times = function(e, t) {
                    var r, i, n, o, s, a, d, c, u, p, f, m, g, v, y = this,
                        _ = y.c,
                        S = (e = new V(e, t)).c;
                    if (!(_ && S && _[0] && S[0])) return !y.s || !e.s || _ && !_[0] && !S || S && !S[0] && !_ ? e.c = e.e = e.s = null : (e.s *= y.s, _ && S ? (e.c = [0], e.e = 0) : e.c = e.e = null), e;
                    for (i = h(y.e / 14) + h(e.e / 14), e.s *= y.s, (d = _.length) < (p = S.length) && (g = _, _ = S, S = g, n = d, d = p, p = n), n = d + p, g = []; n--; g.push(0));
                    for (v = l, 1e7, n = p; --n >= 0;) {
                        for (r = 0, f = S[n] % 1e7, m = S[n] / 1e7 | 0, o = n + (s = d); o > n;) r = ((c = f * (c = _[--s] % 1e7) + (a = m * c + (u = _[s] / 1e7 | 0) * f) % 1e7 * 1e7 + g[o] + r) / v | 0) + (a / 1e7 | 0) + m * u, g[o--] = c % v;
                        g[o] = r
                    }
                    return r ? ++i : g.splice(0, 1), H(e, g, i)
                }, A.negated = function() {
                    var e = new V(this);
                    return e.s = -e.s || null, e
                }, A.plus = function(e, t) {
                    var r, i = this,
                        n = i.s;
                    if (t = (e = new V(e, t)).s, !n || !t) return new V(NaN);
                    if (n != t) return e.s = -t, i.minus(e);
                    var o = i.e / 14,
                        s = e.e / 14,
                        a = i.c,
                        d = e.c;
                    if (!o || !s) {
                        if (!a || !d) return new V(n / 0);
                        if (!a[0] || !d[0]) return d[0] ? e : new V(a[0] ? i : 0 * n)
                    }
                    if (o = h(o), s = h(s), a = a.slice(), n = o - s) {
                        for (n > 0 ? (s = o, r = d) : (n = -n, r = a), r.reverse(); n--; r.push(0));
                        r.reverse()
                    }
                    for ((n = a.length) - (t = d.length) < 0 && (r = d, d = a, a = r, t = n), n = 0; t;) n = (a[--t] = a[t] + d[t] + n) / l | 0, a[t] = l === a[t] ? 0 : a[t] % l;
                    return n && (a = [n].concat(a), ++s), H(e, a, s)
                }, A.precision = A.sd = function(e, t) {
                    var r, i, n, o = this;
                    if (null != e && e !== !!e) return v(e, 1, f), null == t ? t = x : v(t, 0, 8), W(new V(o), e, t);
                    if (!(r = o.c)) return null;
                    if (i = 14 * (n = r.length - 1) + 1, n = r[n]) {
                        for (; n % 10 == 0; n /= 10, i--);
                        for (n = r[0]; n >= 10; n /= 10, i++);
                    }
                    return e && o.e + 1 > i && (i = o.e + 1), i
                }, A.shiftedBy = function(e) {
                    return v(e, -9007199254740991, 9007199254740991), this.times("1e" + e)
                }, A.squareRoot = A.sqrt = function() {
                    var e, t, i, n, o, s = this,
                        a = s.c,
                        d = s.s,
                        c = s.e,
                        u = I + 4,
                        l = new V("0.5");
                    if (1 !== d || !a || !a[0]) return new V(!d || d < 0 && (!a || a[0]) ? NaN : a ? s : 1 / 0);
                    if (0 == (d = Math.sqrt(+$(s))) || d == 1 / 0 ? (((t = m(a)).length + c) % 2 == 0 && (t += "0"), d = Math.sqrt(+t), c = h((c + 1) / 2) - (c < 0 || c % 2), i = new V(t = d == 1 / 0 ? "5e" + c : (t = d.toExponential()).slice(0, t.indexOf("e") + 1) + c)) : i = new V(d + ""), i.c[0])
                        for ((d = (c = i.e) + u) < 3 && (d = 0);;)
                            if (o = i, i = l.times(o.plus(r(s, o, u, 1))), m(o.c).slice(0, d) === (t = m(i.c)).slice(0, d)) {
                                if (i.e < c && --d, "9999" != (t = t.slice(d - 3, d + 1)) && (n || "4999" != t)) {
                                    +t && (+t.slice(1) || "5" != t.charAt(0)) || (W(i, i.e + I + 2, 1), e = !i.times(i).eq(s));
                                    break
                                }
                                if (!n && (W(o, o.e + I + 2, 0), o.times(o).eq(s))) {
                                    i = o;
                                    break
                                }
                                u += 4, d += 4, n = 1
                            } return W(i, i.e + I + 1, x, e)
                }, A.toExponential = function(e, t) {
                    return null != e && (v(e, 0, f), e++), U(this, e, t, 1)
                }, A.toFixed = function(e, t) {
                    return null != e && (v(e, 0, f), e = e + this.e + 1), U(this, e, t)
                }, A.toFormat = function(e, t, r) {
                    var i, n = this;
                    if (null == r) null != e && t && "object" == typeof t ? (r = t, t = null) : e && "object" == typeof e ? (r = e, e = t = null) : r = j;
                    else if ("object" != typeof r) throw Error(c + "Argument not an object: " + r);
                    if (i = n.toFixed(e, t), n.c) {
                        var o, s = i.split("."),
                            a = +r.groupSize,
                            d = +r.secondaryGroupSize,
                            u = r.groupSeparator || "",
                            l = s[0],
                            p = s[1],
                            f = n.s < 0,
                            h = f ? l.slice(1) : l,
                            m = h.length;
                        if (d && (o = a, a = d, d = o, m -= o), a > 0 && m > 0) {
                            for (o = m % a || a, l = h.substr(0, o); o < m; o += a) l += u + h.substr(o, a);
                            d > 0 && (l += u + h.slice(o)), f && (l = "-" + l)
                        }
                        i = p ? l + (r.decimalSeparator || "") + ((d = +r.fractionGroupSize) ? p.replace(new RegExp("\\d{" + d + "}\\B", "g"), "$&" + (r.fractionGroupSeparator || "")) : p) : l
                    }
                    return (r.prefix || "") + i + (r.suffix || "")
                }, A.toFraction = function(e) {
                    var t, i, n, o, s, a, d, u, l, f, h, g, v = this,
                        y = v.c;
                    if (null != e && (!(d = new V(e)).isInteger() && (d.c || 1 !== d.s) || d.lt(O))) throw Error(c + "Argument " + (d.isInteger() ? "out of range: " : "not an integer: ") + $(d));
                    if (!y) return new V(v);
                    for (t = new V(O), l = i = new V(O), n = u = new V(O), g = m(y), s = t.e = g.length - v.e - 1, t.c[0] = p[(a = s % 14) < 0 ? 14 + a : a], e = !e || d.comparedTo(t) > 0 ? s > 0 ? t : l : d, a = D, D = 1 / 0, d = new V(g), u.c[0] = 0; f = r(d, t, 0, 1), 1 != (o = i.plus(f.times(n))).comparedTo(e);) i = n, n = o, l = u.plus(f.times(o = l)), u = o, t = d.minus(f.times(o = t)), d = o;
                    return o = r(e.minus(i), n, 0, 1), u = u.plus(o.times(l)), i = i.plus(o.times(n)), u.s = l.s = v.s, h = r(l, n, s *= 2, x).minus(v).abs().comparedTo(r(u, i, s, x).minus(v).abs()) < 1 ? [l, n] : [u, i], D = a, h
                }, A.toNumber = function() {
                    return +$(this)
                }, A.toPrecision = function(e, t) {
                    return null != e && v(e, 1, f), U(this, e, t, 2)
                }, A.toString = function(e) {
                    var t, r = this,
                        n = r.s,
                        o = r.e;
                    return null === o ? n ? (t = "Infinity", n < 0 && (t = "-" + t)) : t = "NaN" : (null == e ? t = o <= P || o >= k ? _(m(r.c), o) : S(m(r.c), o, "0") : 10 === e ? t = S(m((r = W(new V(r), I + o + 1, x)).c), r.e, "0") : (v(e, 2, F.length, "Base"), t = i(S(m(r.c), o, "0"), 10, e, n, !0)), n < 0 && r.c[0] && (t = "-" + t)), t
                }, A.valueOf = A.toJSON = function() {
                    return $(this)
                }, A._isBigNumber = !0, null != t && V.set(t), V
            }()).default = o.BigNumber = o, void 0 === (i = function() {
                return o
            }.call(t, r, t, e)) || (e.exports = i)
        }()
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.roomsTaskUrl = t.getChannelInfoUrl = t.createChannelUrl = t.checkSumUrl = t.ENV = t.BUILD = t.ENGINE_VERSION = t.SDK_VERSION = void 0;
        t.SDK_VERSION = "4.5.1";
        t.ENGINE_VERSION = "4.5.1.0";
        t.BUILD = "v4.5.1-0-ga31965a";
        const i = r(134);
        Object.defineProperty(t, "ENV", {
            enumerable: !0,
            get: function() {
                return i.ENV
            }
        });
        const n = i.Config.checkSumUrl;
        t.checkSumUrl = n;
        const o = i.Config.createChannelUrl;
        t.createChannelUrl = o;
        const s = i.Config.getChannelInfoUrl;
        t.getChannelInfoUrl = s;
        const a = i.Config.roomsTaskUrl;
        t.roomsTaskUrl = a
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.setParameters = t.getParameters = void 0;
        let i = {
            shimVideoOrientation: "never",
            shimCanvas: "ios151",
            mediaTracks: [],
            clients: [],
            localStreams: []
        };
        t.getParameters = () => i;
        t.setParameters = e => {
            Object.assign(i, e)
        }
    }, function(e, t, r) {
        var i = r(15),
            n = r(42);
        e.exports = r(17) ? function(e, t, r) {
            return i.f(e, t, n(1, r))
        } : function(e, t, r) {
            return e[t] = r, e
        }
    }, function(e, t, r) {
        var i = r(9),
            n = r(85),
            o = r(58),
            s = Object.defineProperty;
        t.f = r(17) ? Object.defineProperty : function(e, t, r) {
            if (i(e), t = o(t, !0), i(r), n) try {
                return s(e, t, r)
            } catch (e) {}
            if ("get" in r || "set" in r) throw TypeError("Accessors not supported!");
            return "value" in r && (e[t] = r.value), e
        }
    }, function(e, t) {
        e.exports = function(e) {
            return "object" == typeof e ? null !== e : "function" == typeof e
        }
    }, function(e, t, r) {
        e.exports = !r(41)((function() {
            return 7 != Object.defineProperty({}, "a", {
                get: function() {
                    return 7
                }
            }).a
        }))
    }, function(e, t) {
        var r = {}.hasOwnProperty;
        e.exports = function(e, t) {
            return r.call(e, t)
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = c;
        var i = r(23);
        ((c.prototype = Object.create(i.prototype)).constructor = c).className = "Field";
        var n, o = r(6),
            s = r(24),
            a = r(2),
            d = /^required|optional|repeated$/;

        function c(e, t, r, n, o, c, u) {
            if (a.isObject(n) ? (u = o, c = n, n = o = void 0) : a.isObject(o) && (u = c, c = o, o = void 0), i.call(this, e, c), !a.isInteger(t) || t < 0) throw TypeError("id must be a non-negative integer");
            if (!a.isString(r)) throw TypeError("type must be a string");
            if (void 0 !== n && !d.test(n = n.toString().toLowerCase())) throw TypeError("rule must be a string rule");
            if (void 0 !== o && !a.isString(o)) throw TypeError("extend must be a string");
            "proto3_optional" === n && (n = "optional"), this.rule = n && "optional" !== n ? n : void 0, this.type = r, this.id = t, this.extend = o || void 0, this.required = "required" === n, this.optional = !this.required, this.repeated = "repeated" === n, this.map = !1, this.message = null, this.partOf = null, this.typeDefault = null, this.defaultValue = null, this.long = !!a.Long && void 0 !== s.long[r], this.bytes = "bytes" === r, this.resolvedType = null, this.extensionField = null, this.declaringField = null, this._packed = null, this.comment = u
        }
        c.fromJSON = function(e, t) {
            return new c(e, t.id, t.type, t.rule, t.extend, t.options, t.comment)
        }, Object.defineProperty(c.prototype, "packed", {
            get: function() {
                return null === this._packed && (this._packed = !1 !== this.getOption("packed")), this._packed
            }
        }), c.prototype.setOption = function(e, t, r) {
            return "packed" === e && (this._packed = null), i.prototype.setOption.call(this, e, t, r)
        }, c.prototype.toJSON = function(e) {
            var t = !!e && Boolean(e.keepComments);
            return a.toObject(["rule", "optional" !== this.rule && this.rule || void 0, "type", this.type, "id", this.id, "extend", this.extend, "options", this.options, "comment", t ? this.comment : void 0])
        }, c.prototype.resolve = function() {
            if (this.resolved) return this;
            if (void 0 === (this.typeDefault = s.defaults[this.type]) && (this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type), this.resolvedType instanceof n ? this.typeDefault = null : this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]), this.options && null != this.options.default && (this.typeDefault = this.options.default, this.resolvedType instanceof o && "string" == typeof this.typeDefault && (this.typeDefault = this.resolvedType.values[this.typeDefault])), this.options && (!0 !== this.options.packed && (void 0 === this.options.packed || !this.resolvedType || this.resolvedType instanceof o) || delete this.options.packed, Object.keys(this.options).length || (this.options = void 0)), this.long) this.typeDefault = a.Long.fromNumber(this.typeDefault, "u" === this.type.charAt(0)), Object.freeze && Object.freeze(this.typeDefault);
            else if (this.bytes && "string" == typeof this.typeDefault) {
                var e;
                a.base64.test(this.typeDefault) ? a.base64.decode(this.typeDefault, e = a.newBuffer(a.base64.length(this.typeDefault)), 0) : a.utf8.write(this.typeDefault, e = a.newBuffer(a.utf8.length(this.typeDefault)), 0), this.typeDefault = e
            }
            return this.map ? this.defaultValue = a.emptyObject : this.repeated ? this.defaultValue = a.emptyArray : this.defaultValue = this.typeDefault, this.parent instanceof n && (this.parent.ctor.prototype[this.name] = this.defaultValue), i.prototype.resolve.call(this)
        }, c.d = function(e, t, r, i) {
            return "function" == typeof t ? t = a.decorateType(t).name : t && "object" == typeof t && (t = a.decorateEnum(t).name),
                function(n, o) {
                    a.decorateType(n.constructor).add(new c(o, e, t, r, {
                        default: i
                    }))
                }
        }, c._configure = function(e) {
            n = e
        }
    }, function(e, t, r) {
        "use strict";

        function i(e, t, r) {
            const i = {
                video: [],
                audio: []
            };
            if (t && t.codecs && t.codecs.length)
                for (let r = 0; r < t.codecs.length; r++) {
                    const n = t.codecs[r];
                    "video/H264" == n.mimeType && -1 === i.video.indexOf("H264") && ("recv" === e && n.sdpFmtpLine && n.sdpFmtpLine.indexOf("profile-level-id") > -1 ? n.sdpFmtpLine.indexOf("profile-level-id=64") > -1 && i.video.push("H264") : -1 === i.video.indexOf("H264") && i.video.push("H264")), "video/VP8" == n.mimeType && -1 === i.video.indexOf("VP8") && i.video.push("VP8")
                }
            if (r && r.codecs && r.codecs.length)
                for (let e = 0; e < r.codecs.length; e++) {
                    "audio/opus" == r.codecs[e].mimeType && i.audio.push("OPUS")
                }
            return i
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.reduceCodecs = t.getSupportedCodecs = t.VideoCodecList = void 0, t.VideoCodecList = ["H264", "VP8"], t.getSupportedCodecs = async function(e = "recv", t = RTCPeerConnection) {
            if ("recv" === e) {
                if ("undefined" != typeof RTCRtpReceiver && RTCRtpReceiver.getCapabilities) {
                    return i(e, RTCRtpReceiver.getCapabilities("video"), RTCRtpReceiver.getCapabilities("audio"))
                } {
                    const e = new t({});
                    e.addTransceiver("audio", {
                        direction: "recvonly"
                    }), e.addTransceiver("video", {
                        direction: "recvonly"
                    });
                    const r = await e.createOffer({});
                    if (e.close(), !r.sdp) return !1;
                    return function(e) {
                        const t = {
                            video: [],
                            audio: []
                        };
                        return e.match(/ H264/i) && t.video.push("H264"), e.match(/ VP8/i) && t.video.push("VP8"), e.match(/ opus/i) && t.audio.push("OPUS"), t
                    }(r.sdp)
                }
            }
            if ("undefined" != typeof RTCRtpSender && RTCRtpSender.getCapabilities) {
                return i(e, RTCRtpSender.getCapabilities("video"), RTCRtpSender.getCapabilities("audio"))
            }
            return !1
        }, t.reduceCodecs = function(e, r) {
            const i = [];
            for (let n = 0; n < e.length; n++) e[n].mimeType && r && t.VideoCodecList.indexOf(e[n].mimeType.split("/")[1]) > -1 && e[n].mimeType !== r.mimeType ? n++ : i.push(e[n]);
            return i
        }
    }, function(e, t, r) {
        var i = r(159),
            n = r(56);
        e.exports = function(e) {
            return i(n(e))
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.generateRandomNumber = t.clone = void 0, t.clone = function(e, t = {}) {
            return void 0 === e ? t : JSON.parse(JSON.stringify(e))
        }, t.generateRandomNumber = function() {
            return Math.round(1e7 * Math.random())
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = o, o.className = "ReflectionObject";
        var i, n = r(2);

        function o(e, t) {
            if (!n.isString(e)) throw TypeError("name must be a string");
            if (t && !n.isObject(t)) throw TypeError("options must be an object");
            this.options = t, this.parsedOptions = null, this.name = e, this.parent = null, this.resolved = !1, this.comment = null, this.filename = null
        }
        Object.defineProperties(o.prototype, {
            root: {
                get: function() {
                    for (var e = this; null !== e.parent;) e = e.parent;
                    return e
                }
            },
            fullName: {
                get: function() {
                    for (var e = [this.name], t = this.parent; t;) e.unshift(t.name), t = t.parent;
                    return e.join(".")
                }
            }
        }), o.prototype.toJSON = function() {
            throw Error()
        }, o.prototype.onAdd = function(e) {
            this.parent && this.parent !== e && this.parent.remove(this), this.parent = e, this.resolved = !1;
            var t = e.root;
            t instanceof i && t._handleAdd(this)
        }, o.prototype.onRemove = function(e) {
            var t = e.root;
            t instanceof i && t._handleRemove(this), this.parent = null, this.resolved = !1
        }, o.prototype.resolve = function() {
            return this.resolved || this.root instanceof i && (this.resolved = !0), this
        }, o.prototype.getOption = function(e) {
            if (this.options) return this.options[e]
        }, o.prototype.setOption = function(e, t, r) {
            return r && this.options && void 0 !== this.options[e] || ((this.options || (this.options = {}))[e] = t), this
        }, o.prototype.setParsedOption = function(e, t, r) {
            this.parsedOptions || (this.parsedOptions = []);
            var i = this.parsedOptions;
            if (r) {
                var o = i.find((function(t) {
                    return Object.prototype.hasOwnProperty.call(t, e)
                }));
                if (o) {
                    var s = o[e];
                    n.setProperty(s, r, t)
                } else(o = {})[e] = n.setProperty({}, r, t), i.push(o)
            } else {
                var a = {};
                a[e] = t, i.push(a)
            }
            return this
        }, o.prototype.setOptions = function(e, t) {
            if (e)
                for (var r = Object.keys(e), i = 0; i < r.length; ++i) this.setOption(r[i], e[r[i]], t);
            return this
        }, o.prototype.toString = function() {
            var e = this.constructor.className,
                t = this.fullName;
            return t.length ? e + " " + t : e
        }, o._configure = function(e) {
            i = e
        }
    }, function(e, t, r) {
        "use strict";
        var i = t,
            n = r(2),
            o = ["double", "float", "int32", "uint32", "sint32", "fixed32", "sfixed32", "int64", "uint64", "sint64", "fixed64", "sfixed64", "bool", "string", "bytes"];

        function s(e, t) {
            var r = 0,
                i = {};
            for (t |= 0; r < e.length;) i[o[r + t]] = e[r++];
            return i
        }
        i.basic = s([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2, 2]), i.defaults = s([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, !1, "", n.emptyArray, null]), i.long = s([0, 0, 0, 1, 1], 7), i.mapKey = s([0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2], 2), i.packed = s([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0])
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.checkExists = t.isExistOptions = t.checkValidString = t.checkValidFloat = t.checkValidInteger = void 0;
        const n = i(r(1)),
            o = i(r(0));
        t.checkValidInteger = e => {
            const t = (e => Number.isInteger(e.value) ? "number" == typeof e.min && e.value < e.min ? {
                result: !1,
                msg: "参数小于最小值" + e.min
            } : "number" == typeof e.max && e.value > e.max ? {
                result: !1,
                msg: "参数大于最大值" + e.max
            } : {
                result: !0
            } : {
                result: !1,
                msg: "参数不是整数"
            })(e);
            if (!t.result) throw new n.default({
                code: o.default.INVALID_PARAMETER,
                message: `参数错误 ${e.tag}:${t.msg}`
            })
        };
        t.checkValidString = e => {
            const t = (e => "string" != typeof e.value ? {
                result: !1,
                msg: "参数不是字符串"
            } : "number" == typeof e.min && e.value.length < e.min ? {
                result: !1,
                msg: "参数长度最小值" + e.min
            } : "number" == typeof e.max && e.value.length > e.max ? {
                result: !1,
                msg: "参数长度大于最大值" + e.max
            } : {
                result: !0
            })(e);
            if (!t.result) throw new n.default({
                code: o.default.INVALID_PARAMETER,
                message: `参数错误 ${e.tag}:${t.msg}`
            })
        };
        t.checkValidFloat = e => {
            const t = (e => Number.isFinite(e.value) ? "number" == typeof e.min && e.value < e.min ? {
                result: !1,
                msg: "参数小于最小值" + e.min
            } : "number" == typeof e.max && e.value > e.max ? {
                result: !1,
                msg: "参数大于最大值" + e.max
            } : {
                result: !0
            } : {
                result: !1,
                msg: "参数不是float类型"
            })(e);
            if (!t.result) throw new n.default({
                code: o.default.INVALID_PARAMETER,
                message: `参数错误 ${e.tag}:${t.msg}`
            })
        };
        const s = e => void 0 === e.value || null === e.value ? {
            result: !1,
            msg: "未填必选参数"
        } : {
            result: !0
        };
        t.isExistOptions = s;
        t.checkExists = e => {
            const t = s(e);
            if (!t.result) throw new n.default({
                code: o.default.INVALID_PARAMETER,
                message: `参数错误：${e.tag} ${t.msg}`
            })
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.RtcSystem = void 0;
        const i = {},
            n = (window.document.documentElement, window.navigator.userAgent.toLowerCase()),
            o = ["googletv", "viera", "smarttv", "internet.tv", "netcast", "nettv", "appletv", "boxee", "kylo", "roku", "dlnadoc", "pov_tv", "hbbtv", "ce-html"];

        function s(e, t) {
            return -1 !== e.indexOf(t)
        }

        function a(e) {
            return s(n, e)
        }

        function d(e) {
            for (let t = 0; t < e.length; t++)
                if (i[e[t]]()) return e[t];
            return "unknown"
        }

        function c(e, t, r) {
            var i = e.match(t);
            return i && i.length >= r && parseInt(i[r], 10)
        }
        i.macos = function() {
            return a("mac")
        }, i.ios = function() {
            return i.iphone() || i.ipod() || i.ipad()
        }, i.iphone = function() {
            return !i.windows() && a("iphone")
        }, i.ipod = function() {
            return a("ipod")
        }, i.ipad = function() {
            return a("ipad")
        }, i.android = function() {
            return !i.windows() && a("android")
        }, i.androidPhone = function() {
            return i.android() && a("mobile")
        }, i.androidTablet = function() {
            return i.android() && !a("mobile")
        }, i.blackberry = function() {
            return a("blackberry") || a("bb10") || a("rim")
        }, i.blackberryPhone = function() {
            return i.blackberry() && !a("tablet")
        }, i.blackberryTablet = function() {
            return i.blackberry() && a("tablet")
        }, i.windows = function() {
            return a("windows")
        }, i.windowsPhone = function() {
            return i.windows() && a("phone")
        }, i.windowsTablet = function() {
            return i.windows() && a("touch") && !i.windowsPhone()
        }, i.fxos = function() {
            return (a("(mobile") || a("(tablet")) && a(" rv:")
        }, i.fxosPhone = function() {
            return i.fxos() && a("mobile")
        }, i.fxosTablet = function() {
            return i.fxos() && a("tablet")
        }, i.meego = function() {
            return a("meego")
        }, i.cordova = function() {
            return window.cordova && "file:" === location.protocol
        }, i.nodeWebkit = function() {
            return "object" == typeof window.process
        }, i.mobile = function() {
            return i.androidPhone() || i.iphone() || i.ipod() || i.windowsPhone() || i.blackberryPhone() || i.fxosPhone() || i.meego()
        }, i.tablet = function() {
            return i.ipad() || i.androidTablet() || i.blackberryTablet() || i.windowsTablet() || i.fxosTablet()
        }, i.weixin = function() {
            return a("micromessenger")
        }, i.h5 = function() {
            return i.tablet() || i.mobile() || i.weixin()
        }, i.desktop = function() {
            return !i.tablet() && !i.mobile()
        }, i.television = function() {
            let e = 0;
            for (; e < o.length;) {
                if (a(o[e])) return !0;
                e++
            }
            return !1
        }, i.portrait = function() {
            return screen.orientation && Object.prototype.hasOwnProperty.call(window, "onorientationchange") ? s(screen.orientation.type, "portrait") : window.innerHeight / window.innerWidth > 1
        }, i.landscape = function() {
            return screen.orientation && Object.prototype.hasOwnProperty.call(window, "onorientationchange") ? s(screen.orientation.type, "landscape") : window.innerHeight / window.innerWidth < 1
        }, i.type = d(["mobile", "tablet", "desktop"]), i.os = d(["ios", "iphone", "ipad", "ipod", "android", "blackberry", "macos", "windows", "fxos", "meego", "television"]), i.browser = function() {
            var e = window && window.navigator,
                t = {
                    ua: null,
                    version: null,
                    UIVersion: null
                };
            if ("undefined" == typeof window || !window.navigator) return t.ua = "Not a browser.", t;
            if (e.mediaDevices && e.userAgent.match(/Edge\/(\d+).(\d+)$/)) t.ua = "edge", t.version = c(e.userAgent, /Edge\/(\d+).(\d+)$/, 2), t.UIVersion = e.userAgent.match(/Edge\/([\d.]+)/)[1];
            else if (e.mozGetUserMedia) t.ua = "firefox", t.version = c(e.userAgent, /Firefox\/(\d+)\./, 1), t.UIVersion = e.userAgent.match(/Firefox\/([\d.]+)/)[1];
            else if (e.webkitGetUserMedia && window.webkitRTCPeerConnection)
                if (/micromessenger/.test(n)) t.ua = "weixin", t.version = c(e.userAgent, /Chrom(e|ium)\/(\d+)\./, 2), t.UIVersion = e.userAgent.match(/Chrom(e|ium)\/([\d.]+)/) && e.userAgent.match(/Chrom(e|ium)\/([\d.]+)/).length > 1 && e.userAgent.match(/Chrom(e|ium)\/([\d.]+)/)[2];
                else if (e.userAgent.match(/(OPR|Opera).([\d.]+)/)) t.ua = "opera", t.version = c(e.userAgent, /O(PR|pera)\/(\d+)\./, 2), t.UIVersion = e.userAgent.match(/O(PR|pera)\/([\d.]+)/)[2];
            else {
                if (!/Chrome/gi.test(e.userAgent)) return t.ua = "unknown", t;
                t.ua = "chrome", t.version = c(e.userAgent, /Chrom(e|ium)\/(\d+)\./, 2), t.UIVersion = e.userAgent.match(/Chrom(e|ium)\/([\d.]+)/) && e.userAgent.match(/Chrom(e|ium)\/([\d.]+)/).length > 1 && e.userAgent.match(/Chrom(e|ium)\/([\d.]+)/)[2]
            } else {
                if (!(!e.webkitGetUserMedia && e.userAgent.match(/AppleWebKit\/([0-9]+)\./) || e.webkitGetUserMedia && !e.webkitRTCPeerConnection)) return t.ua = "unknown", t;
                if (/micromessenger/.test(n)) t.ua = "weixin", t.version = c(n, /micromessenger\/(\d+)\./, 2), t.UIVersion = 7;
                else {
                    if (!e.userAgent.match(/Version\/(\d+).(\d+)/)) return t.ua = "unknown", t;
                    t.ua = "safari", t.version = e.userAgent.match(/Version\/([\d]+)/)[1], t.UIVersion = e.userAgent.match(/Version\/([\d.]+)/)[1]
                }
            }
            return t
        }(), i.browser.greaterThanOrEqualToSafari_12_1_1 = function() {
            if ("safari" !== i.browser.ua || !i.browser.UIVersion) return !1;
            const e = i.browser.UIVersion.split(".");
            return 1 === e.length ? !(e[0] < 12) : 2 === e.length ? e[0] > 12 || !(e[0] < 12) && !(e[1] < 1) : e[0] > 12 || (e[0] < 12 || !(e[1] < 1) && !(e[2] < 1))
        }, i.browser.lessThanSafari_13 = function() {
            if ("safari" !== i.browser.ua || !i.browser.UIVersion) return !0;
            const e = i.browser.UIVersion.split(".");
            return !(e.length < 1) && !(e[0] < 13)
        }, i.browser.lessThanSafari_12_1_1 = function() {
            return !("safari" !== i.browser.ua || !i.browser.UIVersion) && !i.browser.greaterThanOrEqualToSafari_12_1_1()
        }, i.browser.safari_12_1 = function() {
            if ("safari" !== i.browser.ua || !i.browser.UIVersion) return !1;
            const e = i.browser.UIVersion.split(".");
            return 2 == e.length && (12 == e[0] && 1 == e[1])
        }, i.browser.safari_12_0_1 = function() {
            if ("safari" !== i.browser.ua || !i.browser.UIVersion) return !1;
            const e = i.browser.UIVersion.split(".");
            return !(e.length < 3) && (12 === e[0] && (0 === e[1] && 1 === e[2]))
        }, i.orientation = d(["portrait", "landscape"]);
        const u = i;
        t.RtcSystem = u
    }, function(e, t, r) {
        "use strict";
        (function(e) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.platform = void 0;
            const r = function() {
                var t = "object" == typeof e ? e : window,
                    r = Math.pow(2, 53) - 1,
                    i = /\bOpera/,
                    n = Object.prototype,
                    o = n.hasOwnProperty,
                    s = n.toString;

                function a(e) {
                    return (e = String(e)).charAt(0).toUpperCase() + e.slice(1)
                }

                function d(e) {
                    return e = f(e), /^(?:webOS|i(?:OS|P))/.test(e) ? e : a(e)
                }

                function c(e, t) {
                    for (var r in e) o.call(e, r) && t(e[r], r, e)
                }

                function u(e) {
                    return null == e ? a(e) : s.call(e).slice(8, -1)
                }

                function l(e) {
                    return String(e).replace(/([ -])(?!$)/g, "$1?")
                }

                function p(e, t) {
                    var i = null;
                    return function(e, t) {
                        var i = -1,
                            n = e ? e.length : 0;
                        if ("number" == typeof n && n > -1 && n <= r)
                            for (; ++i < n;) t(e[i], i, e);
                        else c(e, t)
                    }(e, (function(r, n) {
                        i = t(i, r, n, e)
                    })), i
                }

                function f(e) {
                    return String(e).replace(/^ +| +$/g, "")
                }
                return function e(r) {
                    var n = t,
                        o = r && "object" == typeof r && "String" != u(r);
                    o && (n = r, r = "");
                    var a = n.navigator || {},
                        h = a.userAgent || "";
                    r || (r = h);
                    var m, g, v, y, _, S = o ? !!a.likeChrome : /\bChrome\b/.test(r) && !/internal|\n/i.test(s.toString()),
                        b = o ? "Object" : "ScriptBridgingProxyObject",
                        R = o ? "Object" : "Environment",
                        w = o && n.java ? "JavaPackage" : u(n.java),
                        T = o ? "Object" : "RuntimeObject",
                        E = /\bJava/.test(w) && n.java,
                        A = E && u(n.environment) == R,
                        O = E ? "a" : "α",
                        I = E ? "b" : "β",
                        x = n.document || {},
                        P = n.operamini || n.opera,
                        k = i.test(k = o && P ? P["[[Class]]"] : u(P)) ? k : P = null,
                        C = r,
                        D = [],
                        M = null,
                        N = r == h,
                        L = N && P && "function" == typeof P.version && P.version(),
                        j = p([{
                            label: "EdgeHTML",
                            pattern: "Edge"
                        }, "Trident", {
                            label: "WebKit",
                            pattern: "AppleWebKit"
                        }, "iCab", "Presto", "NetFront", "Tasman", "KHTML", "Gecko"], (function(e, t) {
                            return e || RegExp("\\b" + (t.pattern || l(t)) + "\\b", "i").exec(r) && (t.label || t)
                        })),
                        F = function(e) {
                            return p(e, (function(e, t) {
                                return e || RegExp("\\b" + (t.pattern || l(t)) + "\\b", "i").exec(r) && (t.label || t)
                            }))
                        }(["Adobe AIR", "Arora", "Avant Browser", "Breach", "Camino", "Electron", "Epiphany", "Fennec", "Flock", "Galeon", "GreenBrowser", "iCab", "Iceweasel", "K-Meleon", "Konqueror", "Lunascape", "Maxthon", {
                            label: "Microsoft Edge",
                            pattern: "Edge"
                        }, "Midori", "Nook Browser", "PaleMoon", "PhantomJS", "Raven", "Rekonq", "RockMelt", {
                            label: "Samsung Internet",
                            pattern: "SamsungBrowser"
                        }, "SeaMonkey", {
                            label: "Silk",
                            pattern: "(?:Cloud9|Silk-Accelerated)"
                        }, "Sleipnir", "SlimBrowser", {
                            label: "SRWare Iron",
                            pattern: "Iron"
                        }, "Sunrise", "Swiftfox", "Waterfox", "WebPositive", "Opera Mini", {
                            label: "Opera Mini",
                            pattern: "OPiOS"
                        }, "Opera", {
                            label: "Opera",
                            pattern: "OPR"
                        }, "Chrome", {
                            label: "Chrome Mobile",
                            pattern: "(?:CriOS|CrMo)"
                        }, {
                            label: "Firefox",
                            pattern: "(?:Firefox|Minefield)"
                        }, {
                            label: "Firefox for iOS",
                            pattern: "FxiOS"
                        }, {
                            label: "IE",
                            pattern: "IEMobile"
                        }, {
                            label: "IE",
                            pattern: "MSIE"
                        }, "Safari"]),
                        V = H([{
                            label: "BlackBerry",
                            pattern: "BB10"
                        }, "BlackBerry", {
                            label: "Galaxy S",
                            pattern: "GT-I9000"
                        }, {
                            label: "Galaxy S2",
                            pattern: "GT-I9100"
                        }, {
                            label: "Galaxy S3",
                            pattern: "GT-I9300"
                        }, {
                            label: "Galaxy S4",
                            pattern: "GT-I9500"
                        }, {
                            label: "Galaxy S5",
                            pattern: "SM-G900"
                        }, {
                            label: "Galaxy S6",
                            pattern: "SM-G920"
                        }, {
                            label: "Galaxy S6 Edge",
                            pattern: "SM-G925"
                        }, {
                            label: "Galaxy S7",
                            pattern: "SM-G930"
                        }, {
                            label: "Galaxy S7 Edge",
                            pattern: "SM-G935"
                        }, "Google TV", "Lumia", "iPad", "iPod", "iPhone", "Kindle", {
                            label: "Kindle Fire",
                            pattern: "(?:Cloud9|Silk-Accelerated)"
                        }, "Nexus", "Nook", "PlayBook", "PlayStation Vita", "PlayStation", "TouchPad", "Transformer", {
                            label: "Wii U",
                            pattern: "WiiU"
                        }, "Wii", "Xbox One", {
                            label: "Xbox 360",
                            pattern: "Xbox"
                        }, "Xoom"]),
                        U = function(e) {
                            return p(e, (function(e, t, i) {
                                return e || (t[V] || t[/^[a-z]+(?: +[a-z]+\b)*/i.exec(V)] || RegExp("\\b" + l(i) + "(?:\\b|\\w*\\d)", "i").exec(r)) && i
                            }))
                        }({
                            Apple: {
                                iPad: 1,
                                iPhone: 1,
                                iPod: 1
                            },
                            Archos: {},
                            Amazon: {
                                Kindle: 1,
                                "Kindle Fire": 1
                            },
                            Asus: {
                                Transformer: 1
                            },
                            "Barnes & Noble": {
                                Nook: 1
                            },
                            BlackBerry: {
                                PlayBook: 1
                            },
                            Google: {
                                "Google TV": 1,
                                Nexus: 1
                            },
                            HP: {
                                TouchPad: 1
                            },
                            HTC: {},
                            LG: {},
                            Microsoft: {
                                Xbox: 1,
                                "Xbox One": 1
                            },
                            Motorola: {
                                Xoom: 1
                            },
                            Nintendo: {
                                "Wii U": 1,
                                Wii: 1
                            },
                            Nokia: {
                                Lumia: 1
                            },
                            Samsung: {
                                "Galaxy S": 1,
                                "Galaxy S2": 1,
                                "Galaxy S3": 1,
                                "Galaxy S4": 1
                            },
                            Sony: {
                                PlayStation: 1,
                                "PlayStation Vita": 1
                            }
                        }),
                        B = function(e) {
                            return p(e, (function(e, t) {
                                var i = t.pattern || l(t);
                                return !e && (e = RegExp("\\b" + i + "(?:/[\\d.]+|[ \\w.]*)", "i").exec(r)) && (e = function(e, t, r) {
                                    var i = {
                                        "10.0": "10",
                                        6.4: "10 Technical Preview",
                                        6.3: "8.1",
                                        6.2: "8",
                                        6.1: "Server 2008 R2 / 7",
                                        "6.0": "Server 2008 / Vista",
                                        5.2: "Server 2003 / XP 64-bit",
                                        5.1: "XP",
                                        5.01: "2000 SP1",
                                        "5.0": "2000",
                                        "4.0": "NT",
                                        "4.90": "ME"
                                    };
                                    return t && r && /^Win/i.test(e) && !/^Windows Phone /i.test(e) && (i = i[/[\d.]+$/.exec(e)]) && (e = "Windows " + i), e = String(e), t && r && (e = e.replace(RegExp(t, "i"), r)), e = d(e.replace(/ ce$/i, " CE").replace(/\bhpw/i, "web").replace(/\bMacintosh\b/, "Mac OS").replace(/_PowerPC\b/i, " OS").replace(/\b(OS X) [^ \d]+/i, "$1").replace(/\bMac (OS X)\b/, "$1").replace(/\/(\d)/, " $1").replace(/_/g, ".").replace(/(?: BePC|[ .]*fc[ \d.]+)$/i, "").replace(/\bx86\.64\b/gi, "x86_64").replace(/\b(Windows Phone) OS\b/, "$1").replace(/\b(Chrome OS \w+) [\d.]+\b/, "$1").split(" on ")[0])
                                }(e, i, t.label || t)), e
                            }))
                        }(["Windows Phone", "Android", "CentOS", {
                            label: "Chrome OS",
                            pattern: "CrOS"
                        }, "Debian", "Fedora", "FreeBSD", "Gentoo", "Haiku", "Kubuntu", "Linux Mint", "OpenBSD", "Red Hat", "SuSE", "Ubuntu", "Xubuntu", "Cygwin", "Symbian OS", "hpwOS", "webOS ", "webOS", "Tablet OS", "Tizen", "Linux", "Mac OS X", "Macintosh", "Mac", "Windows 98;", "Windows "]);

                    function H(e) {
                        return p(e, (function(e, t) {
                            var i = t.pattern || l(t);
                            return !e && (e = RegExp("\\b" + i + " *\\d+[.\\w_]*", "i").exec(r) || RegExp("\\b" + i + " *\\w+-[\\w]*", "i").exec(r) || RegExp("\\b" + i + "(?:; *(?:[a-z]+[_-])?[a-z]+\\d+|[^ ();-]*)", "i").exec(r)) && ((e = String(t.label && !RegExp(i, "i").test(t.label) ? t.label : e).split("/"))[1] && !/[\d.]+/.test(e[0]) && (e[0] += " " + e[1]), t = t.label || t, e = d(e[0].replace(RegExp(i, "i"), t).replace(RegExp("; *(?:" + t + "[_-])?", "i"), " ").replace(RegExp("(" + t + ")[-_.]?(\\w)", "i"), "$1 $2"))), e
                        }))
                    }
                    if (j && (j = [j]), U && !V && (V = H([U])), (m = /\bGoogle TV\b/.exec(V)) && (V = m[0]), /\bSimulator\b/i.test(r) && (V = (V ? V + " " : "") + "Simulator"), "Opera Mini" == F && /\bOPiOS\b/.test(r) && D.push("running in Turbo/Uncompressed mode"), "IE" == F && /\blike iPhone OS\b/.test(r) ? (U = (m = e(r.replace(/like iPhone OS/, ""))).manufacturer, V = m.product) : /^iP/.test(V) ? (F || (F = "Safari"), B = "iOS" + ((m = / OS ([\d_]+)/i.exec(r)) ? " " + m[1].replace(/_/g, ".") : "")) : "Konqueror" != F || /buntu/i.test(B) ? U && "Google" != U && (/Chrome/.test(F) && !/\bMobile Safari\b/i.test(r) || /\bVita\b/.test(V)) || /\bAndroid\b/.test(B) && /^Chrome/.test(F) && /\bVersion\//i.test(r) ? (F = "Android Browser", B = /\bAndroid\b/.test(B) ? B : "Android") : "Silk" == F ? (/\bMobi/i.test(r) || (B = "Android", D.unshift("desktop mode")), /Accelerated *= *true/i.test(r) && D.unshift("accelerated")) : "PaleMoon" == F && (m = /\bFirefox\/([\d.]+)\b/.exec(r)) ? D.push("identifying as Firefox " + m[1]) : "Firefox" == F && (m = /\b(Mobile|Tablet|TV)\b/i.exec(r)) ? (B || (B = "Firefox OS"), V || (V = m[1])) : !F || (m = !/\bMinefield\b/i.test(r) && /\b(?:Firefox|Safari)\b/.exec(F)) ? (F && !V && /[\/,]|^[^(]+?\)/.test(r.slice(r.indexOf(m + "/") + 8)) && (F = null), (m = V || U || B) && (V || U || /\b(?:Android|Symbian OS|Tablet OS|webOS)\b/.test(B)) && (F = /[a-z]+(?: Hat)?/i.exec(/\bAndroid\b/.test(B) ? B : m) + " Browser")) : "Electron" == F && (m = (/\bChrome\/([\d.]+)\b/.exec(r) || 0)[1]) && D.push("Chromium " + m) : B = "Kubuntu", L || (L = p(["(?:Cloud9|CriOS|CrMo|Edge|FxiOS|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\d.]+$))", "Version", l(F), "(?:Firefox|Minefield|NetFront)"], (function(e, t) {
                            return e || (RegExp(t + "(?:-[\\d.]+/|(?: for [\\w-]+)?[ /-])([\\d.]+[^ ();/_-]*)", "i").exec(r) || 0)[1] || null
                        }))), (m = ("iCab" == j && parseFloat(L) > 3 ? "WebKit" : /\bOpera\b/.test(F) && (/\bOPR\b/.test(r) ? "Blink" : "Presto")) || /\b(?:Midori|Nook|Safari)\b/i.test(r) && !/^(?:Trident|EdgeHTML)$/.test(j) && "WebKit" || !j && /\bMSIE\b/i.test(r) && ("Mac OS" == B ? "Tasman" : "Trident") || "WebKit" == j && /\bPlayStation\b(?! Vita\b)/i.test(F) && "NetFront") && (j = [m]), "IE" == F && (m = (/; *(?:XBLWP|ZuneWP)(\d+)/i.exec(r) || 0)[1]) ? (F += " Mobile", B = "Windows Phone " + (/\+$/.test(m) ? m : m + ".x"), D.unshift("desktop mode")) : /\bWPDesktop\b/i.test(r) ? (F = "IE Mobile", B = "Windows Phone 8.x", D.unshift("desktop mode"), L || (L = (/\brv:([\d.]+)/.exec(r) || 0)[1])) : "IE" != F && "Trident" == j && (m = /\brv:([\d.]+)/.exec(r)) && (F && D.push("identifying as " + F + (L ? " " + L : "")), F = "IE", L = m[1]), N) {
                        if (y = "global", _ = null != (v = n) ? typeof v[y] : "number", /^(?:boolean|number|string|undefined)$/.test(_) || "object" == _ && !v[y]) u(m = n.runtime) == b ? (F = "Adobe AIR", B = m.flash.system.Capabilities.os) : u(m = n.phantom) == T ? (F = "PhantomJS", L = (m = m.version || null) && m.major + "." + m.minor + "." + m.patch) : "number" == typeof x.documentMode && (m = /\bTrident\/(\d+)/i.exec(r)) ? (L = [L, x.documentMode], (m = +m[1] + 4) != L[1] && (D.push("IE " + L[1] + " mode"), j && (j[1] = ""), L[1] = m), L = "IE" == F ? String(L[1].toFixed(1)) : L[0]) : "number" == typeof x.documentMode && /^(?:Chrome|Firefox)\b/.test(F) && (D.push("masking as " + F + " " + L), F = "IE", L = "11.0", j = ["Trident"], B = "Windows");
                        else if (E && (C = (m = E.lang.System).getProperty("os.arch"), B = B || m.getProperty("os.name") + " " + m.getProperty("os.version")), A) {
                            try {
                                L = n.require("ringo/engine").version.join("."), F = "RingoJS"
                            } catch (e) {
                                (m = n.system) && m.global.system == n.system && (F = "Narwhal", B || (B = m[0].os || null))
                            }
                            F || (F = "Rhino")
                        } else "object" == typeof n.process && !n.process.browser && (m = n.process) && ("object" == typeof m.versions && ("string" == typeof m.versions.electron ? (D.push("Node " + m.versions.node), F = "Electron", L = m.versions.electron) : "string" == typeof m.versions.nw && (D.push("Chromium " + L, "Node " + m.versions.node), F = "NW.js", L = m.versions.nw)), F || (F = "Node.js", C = m.arch, B = m.platform, L = (L = /[\d.]+/.exec(m.version)) ? L[0] : null));
                        B = B && d(B)
                    }
                    if (L && (m = /(?:[ab]|dp|pre|[ab]\d+pre)(?:\d+\+?)?$/i.exec(L) || /(?:alpha|beta)(?: ?\d)?/i.exec(r + ";" + (N && a.appMinorVersion)) || /\bMinefield\b/i.test(r) && "a") && (M = /b/i.test(m) ? "beta" : "alpha", L = L.replace(RegExp(m + "\\+?$"), "") + ("beta" == M ? I : O) + (/\d+\+?/.exec(m) || "")), "Fennec" == F || "Firefox" == F && /\b(?:Android|Firefox OS)\b/.test(B)) F = "Firefox Mobile";
                    else if ("Maxthon" == F && L) L = L.replace(/\.[\d.]+/, ".x");
                    else if (/\bXbox\b/i.test(V)) "Xbox 360" == V && (B = null), "Xbox 360" == V && /\bIEMobile\b/.test(r) && D.unshift("mobile mode");
                    else if (!/^(?:Chrome|IE|Opera)$/.test(F) && (!F || V || /Browser|Mobi/.test(F)) || "Windows CE" != B && !/Mobi/i.test(r))
                        if ("IE" == F && N) try {
                            null === n.external && D.unshift("platform preview")
                        } catch (e) {
                            D.unshift("embedded")
                        } else(/\bBlackBerry\b/.test(V) || /\bBB10\b/.test(r)) && (m = (RegExp(V.replace(/ +/g, " *") + "/([.\\d]+)", "i").exec(r) || 0)[1] || L) ? (B = ((m = [m, /BB10/.test(r)])[1] ? (V = null, U = "BlackBerry") : "Device Software") + " " + m[0], L = null) : this != c && "Wii" != V && (N && P || /Opera/.test(F) && /\b(?:MSIE|Firefox)\b/i.test(r) || "Firefox" == F && /\bOS X (?:\d+\.){2,}/.test(B) || "IE" == F && (B && !/^Win/.test(B) && L > 5.5 || /\bWindows XP\b/.test(B) && L > 8 || 8 == L && !/\bTrident\b/.test(r))) && !i.test(m = e.call(c, r.replace(i, "") + ";")) && m.name && (m = "ing as " + m.name + ((m = m.version) ? " " + m : ""), i.test(F) ? (/\bIE\b/.test(m) && "Mac OS" == B && (B = null), m = "identify" + m) : (m = "mask" + m, F = k ? d(k.replace(/([a-z])([A-Z])/g, "$1 $2")) : "Opera", /\bIE\b/.test(m) && (B = null), N || (L = null)), j = ["Presto"], D.push(m));
                        else F += " Mobile";
                    (m = (/\bAppleWebKit\/([\d.]+\+?)/i.exec(r) || 0)[1]) && (m = [parseFloat(m.replace(/\.(\d)$/, ".0$1")), m], "Safari" == F && "+" == m[1].slice(-1) ? (F = "WebKit Nightly", M = "alpha", L = m[1].slice(0, -1)) : L != m[1] && L != (m[2] = (/\bSafari\/([\d.]+\+?)/i.exec(r) || 0)[1]) || (L = null), m[1] = (/\bChrome\/([\d.]+)/i.exec(r) || 0)[1], 537.36 == m[0] && 537.36 == m[2] && parseFloat(m[1]) >= 28 && "WebKit" == j && (j = ["Blink"]), N && (S || m[1]) ? (j && (j[1] = "like Chrome"), m = m[1] || ((m = m[0]) < 530 ? 1 : m < 532 ? 2 : m < 532.05 ? 3 : m < 533 ? 4 : m < 534.03 ? 5 : m < 534.07 ? 6 : m < 534.1 ? 7 : m < 534.13 ? 8 : m < 534.16 ? 9 : m < 534.24 ? 10 : m < 534.3 ? 11 : m < 535.01 ? 12 : m < 535.02 ? "13+" : m < 535.07 ? 15 : m < 535.11 ? 16 : m < 535.19 ? 17 : m < 536.05 ? 18 : m < 536.1 ? 19 : m < 537.01 ? 20 : m < 537.11 ? "21+" : m < 537.13 ? 23 : m < 537.18 ? 24 : m < 537.24 ? 25 : m < 537.36 ? 26 : "Blink" != j ? "27" : "28")) : (j && (j[1] = "like Safari"), m = (m = m[0]) < 400 ? 1 : m < 500 ? 2 : m < 526 ? 3 : m < 533 ? 4 : m < 534 ? "4+" : m < 535 ? 5 : m < 537 ? 6 : m < 538 ? 7 : m < 601 ? 8 : "8"), j && (j[1] += " " + (m += "number" == typeof m ? ".x" : /[.+]/.test(m) ? "" : "+")), "Safari" == F && (!L || parseInt(L) > 45) && (L = m)), "Opera" == F && (m = /\bzbov|zvav$/.exec(B)) ? (F += " ", D.unshift("desktop mode"), "zvav" == m ? (F += "Mini", L = null) : F += "Mobile", B = B.replace(RegExp(" *" + m + "$"), "")) : "Safari" == F && /\bChrome\b/.exec(j && j[1]) && (D.unshift("desktop mode"), F = "Chrome Mobile", L = null, /\bOS X\b/.test(B) ? (U = "Apple", B = "iOS 4.3+") : B = null), L && 0 == L.indexOf(m = /[\d.]+$/.exec(B)) && r.indexOf("/" + m + "-") > -1 && (B = f(B.replace(m, ""))), j && !/\b(?:Avant|Nook)\b/.test(F) && (/Browser|Lunascape|Maxthon/.test(F) || "Safari" != F && /^iOS/.test(B) && /\bSafari\b/.test(j[1]) || /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|Web)/.test(F) && j[1]) && (m = j[j.length - 1]) && D.push(m), D.length && (D = ["(" + D.join("; ") + ")"]), U && V && V.indexOf(U) < 0 && D.push("on " + U), V && D.push((/^on /.test(D[D.length - 1]) ? "" : "on ") + V), B && (m = / ([\d.+]+)$/.exec(B), g = m && "/" == B.charAt(B.length - m[0].length - 1), B = {
                        architecture: 32,
                        family: m && !g ? B.replace(m[0], "") : B,
                        version: m ? m[1] : null,
                        toString: function() {
                            var e = this.version;
                            return this.family + (e && !g ? " " + e : "") + (64 == this.architecture ? " 64-bit" : "")
                        }
                    }), (m = /\b(?:AMD|IA|Win|WOW|x86_|x)64\b/i.exec(C)) && !/\bi686\b/i.test(C) ? (B && (B.architecture = 64, B.family = B.family.replace(RegExp(" *" + m), "")), F && (/\bWOW64\b/i.test(r) || N && /\w(?:86|32)$/.test(a.cpuClass || a.platform) && !/\bWin64; x64\b/i.test(r)) && D.unshift("32-bit")) : B && /^OS X/.test(B.family) && "Chrome" == F && parseFloat(L) >= 39 && (B.architecture = 64), r || (r = "");
                    var W = {};
                    return W.description = r, W.layout = j && j[0], W.manufacturer = U, W.name = F, W.prerelease = M, W.product = V, W.ua = r, W.version = F && L, W.os = B || {
                        architecture: null,
                        family: null,
                        version: null,
                        toString: function() {
                            return "null"
                        }
                    }, W.parse = e, W.toString = function() {
                        return this.description || ""
                    }, W.version && D.unshift(L), W.name && D.unshift(F), B && F && (B != String(B).split(" ")[0] || B != F.split(" ")[0] && !V) && D.push(V ? "(" + B + ")" : "on " + B), D.length && (W.description = D.join(" ")), W
                }()
            }();
            t.platform = r
        }).call(this, r(50))
    }, function(e, t) {
        e.exports = !0
    }, function(e, t, r) {
        var i = r(4),
            n = r(7),
            o = r(39),
            s = r(14),
            a = r(18),
            d = function(e, t, r) {
                var c, u, l, p = e & d.F,
                    f = e & d.G,
                    h = e & d.S,
                    m = e & d.P,
                    g = e & d.B,
                    v = e & d.W,
                    y = f ? n : n[t] || (n[t] = {}),
                    _ = y.prototype,
                    S = f ? i : h ? i[t] : (i[t] || {}).prototype;
                for (c in f && (r = t), r)(u = !p && S && void 0 !== S[c]) && a(y, c) || (l = u ? S[c] : r[c], y[c] = f && "function" != typeof S[c] ? r[c] : g && u ? o(l, i) : v && S[c] == l ? function(e) {
                    var t = function(t, r, i) {
                        if (this instanceof e) {
                            switch (arguments.length) {
                                case 0:
                                    return new e;
                                case 1:
                                    return new e(t);
                                case 2:
                                    return new e(t, r)
                            }
                            return new e(t, r, i)
                        }
                        return e.apply(this, arguments)
                    };
                    return t.prototype = e.prototype, t
                }(l) : m && "function" == typeof l ? o(Function.call, l) : l, m && ((y.virtual || (y.virtual = {}))[c] = l, e & d.R && _ && !_[c] && s(_, c, l)))
            };
        d.F = 1, d.G = 2, d.S = 4, d.P = 8, d.B = 16, d.W = 32, d.U = 64, d.R = 128, e.exports = d
    }, function(e, t) {
        e.exports = {}
    }, function(e, t) {
        var r = {}.toString;
        e.exports = function(e) {
            return r.call(e).slice(8, -1)
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.EnhancedEventEmitter = void 0;
        const i = r(101),
            n = r(10),
            o = "EnhancedEventEmitter";
        class s extends i.EventEmitter {
            constructor() {
                super(), this.setMaxListeners(1 / 0)
            }
            safeEmit(e, ...t) {
                const r = this.listenerCount(e);
                try {
                    return this.emit(e, ...t)
                } catch (t) {
                    return n.Logger.error(o, "safeEmit() | event listener threw an error [event:%s]:%o", e, t), Boolean(r)
                }
            }
            async safeEmitAsPromise(e, ...t) {
                return new Promise((r, i) => {
                    try {
                        this.emit(e, ...t, r, i)
                    } catch (t) {
                        n.Logger.error(o, "safeEmitAsPromise() | event listener threw an error [event:%s]:%o", e, t), i(t)
                    }
                })
            }
        }
        t.EnhancedEventEmitter = s
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.InvalidStateError = t.UnsupportedError = void 0;
        class i extends Error {
            constructor(e) {
                super(e), this.name = "UnsupportedError", Error.hasOwnProperty("captureStackTrace") ? Error.captureStackTrace(this, i) : this.stack = new Error(e).stack
            }
        }
        t.UnsupportedError = i;
        class n extends Error {
            constructor(e) {
                super(e), this.name = "InvalidStateError", Error.hasOwnProperty("captureStackTrace") ? Error.captureStackTrace(this, n) : this.stack = new Error(e).stack
            }
        }
        t.InvalidStateError = n
    }, function(e, t, r) {
        "use strict";
        e.exports = l;
        var i = r(23);
        ((l.prototype = Object.create(i.prototype)).constructor = l).className = "Namespace";
        var n, o, s, a = r(19),
            d = r(35),
            c = r(2);

        function u(e, t) {
            if (e && e.length) {
                for (var r = {}, i = 0; i < e.length; ++i) r[e[i].name] = e[i].toJSON(t);
                return r
            }
        }

        function l(e, t) {
            i.call(this, e, t), this.nested = void 0, this._nestedArray = null
        }

        function p(e) {
            return e._nestedArray = null, e
        }
        l.fromJSON = function(e, t) {
            return new l(e, t.options).addJSON(t.nested)
        }, l.arrayToJSON = u, l.isReservedId = function(e, t) {
            if (e)
                for (var r = 0; r < e.length; ++r)
                    if ("string" != typeof e[r] && e[r][0] <= t && e[r][1] > t) return !0;
            return !1
        }, l.isReservedName = function(e, t) {
            if (e)
                for (var r = 0; r < e.length; ++r)
                    if (e[r] === t) return !0;
            return !1
        }, Object.defineProperty(l.prototype, "nestedArray", {
            get: function() {
                return this._nestedArray || (this._nestedArray = c.toArray(this.nested))
            }
        }), l.prototype.toJSON = function(e) {
            return c.toObject(["options", this.options, "nested", u(this.nestedArray, e)])
        }, l.prototype.addJSON = function(e) {
            if (e)
                for (var t, r = Object.keys(e), i = 0; i < r.length; ++i) t = e[r[i]], this.add((void 0 !== t.fields ? n.fromJSON : void 0 !== t.values ? s.fromJSON : void 0 !== t.methods ? o.fromJSON : void 0 !== t.id ? a.fromJSON : l.fromJSON)(r[i], t));
            return this
        }, l.prototype.get = function(e) {
            return this.nested && this.nested[e] || null
        }, l.prototype.getEnum = function(e) {
            if (this.nested && this.nested[e] instanceof s) return this.nested[e].values;
            throw Error("no such enum: " + e)
        }, l.prototype.add = function(e) {
            if (!(e instanceof a && void 0 !== e.extend || e instanceof n || e instanceof s || e instanceof o || e instanceof l || e instanceof d)) throw TypeError("object must be a valid nested object");
            if (this.nested) {
                var t = this.get(e.name);
                if (t) {
                    if (!(t instanceof l && e instanceof l) || t instanceof n || t instanceof o) throw Error("duplicate name '" + e.name + "' in " + this);
                    for (var r = t.nestedArray, i = 0; i < r.length; ++i) e.add(r[i]);
                    this.remove(t), this.nested || (this.nested = {}), e.setOptions(t.options, !0)
                }
            } else this.nested = {};
            return this.nested[e.name] = e, e.onAdd(this), p(this)
        }, l.prototype.remove = function(e) {
            if (!(e instanceof i)) throw TypeError("object must be a ReflectionObject");
            if (e.parent !== this) throw Error(e + " is not a member of " + this);
            return delete this.nested[e.name], Object.keys(this.nested).length || (this.nested = void 0), e.onRemove(this), p(this)
        }, l.prototype.define = function(e, t) {
            if (c.isString(e)) e = e.split(".");
            else if (!Array.isArray(e)) throw TypeError("illegal path");
            if (e && e.length && "" === e[0]) throw Error("path must be relative");
            for (var r = this; e.length > 0;) {
                var i = e.shift();
                if (r.nested && r.nested[i]) {
                    if (!((r = r.nested[i]) instanceof l)) throw Error("path conflicts with non-namespace objects")
                } else r.add(r = new l(i))
            }
            return t && r.addJSON(t), r
        }, l.prototype.resolveAll = function() {
            for (var e = this.nestedArray, t = 0; t < e.length;) e[t] instanceof l ? e[t++].resolveAll() : e[t++].resolve();
            return this.resolve()
        }, l.prototype.lookup = function(e, t, r) {
            if ("boolean" == typeof t ? (r = t, t = void 0) : t && !Array.isArray(t) && (t = [t]), c.isString(e) && e.length) {
                if ("." === e) return this.root;
                e = e.split(".")
            } else if (!e.length) return this;
            if ("" === e[0]) return this.root.lookup(e.slice(1), t);
            var i = this.get(e[0]);
            if (i) {
                if (1 === e.length) {
                    if (!t || t.indexOf(i.constructor) > -1) return i
                } else if (i instanceof l && (i = i.lookup(e.slice(1), t, !0))) return i
            } else
                for (var n = 0; n < this.nestedArray.length; ++n)
                    if (this._nestedArray[n] instanceof l && (i = this._nestedArray[n].lookup(e, t, !0))) return i;
            return null === this.parent || r ? null : this.parent.lookup(e, t)
        }, l.prototype.lookupType = function(e) {
            var t = this.lookup(e, [n]);
            if (!t) throw Error("no such type: " + e);
            return t
        }, l.prototype.lookupEnum = function(e) {
            var t = this.lookup(e, [s]);
            if (!t) throw Error("no such Enum '" + e + "' in " + this);
            return t
        }, l.prototype.lookupTypeOrEnum = function(e) {
            var t = this.lookup(e, [n, s]);
            if (!t) throw Error("no such Type or Enum '" + e + "' in " + this);
            return t
        }, l.prototype.lookupService = function(e) {
            var t = this.lookup(e, [o]);
            if (!t) throw Error("no such Service '" + e + "' in " + this);
            return t
        }, l._configure = function(e, t, r) {
            n = e, o = t, s = r
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = s;
        var i = r(23);
        ((s.prototype = Object.create(i.prototype)).constructor = s).className = "OneOf";
        var n = r(19),
            o = r(2);

        function s(e, t, r, n) {
            if (Array.isArray(t) || (r = t, t = void 0), i.call(this, e, r), void 0 !== t && !Array.isArray(t)) throw TypeError("fieldNames must be an Array");
            this.oneof = t || [], this.fieldsArray = [], this.comment = n
        }

        function a(e) {
            if (e.parent)
                for (var t = 0; t < e.fieldsArray.length; ++t) e.fieldsArray[t].parent || e.parent.add(e.fieldsArray[t])
        }
        s.fromJSON = function(e, t) {
            return new s(e, t.oneof, t.options, t.comment)
        }, s.prototype.toJSON = function(e) {
            var t = !!e && Boolean(e.keepComments);
            return o.toObject(["options", this.options, "oneof", this.oneof, "comment", t ? this.comment : void 0])
        }, s.prototype.add = function(e) {
            if (!(e instanceof n)) throw TypeError("field must be a Field");
            return e.parent && e.parent !== this.parent && e.parent.remove(e), this.oneof.push(e.name), this.fieldsArray.push(e), e.partOf = this, a(this), this
        }, s.prototype.remove = function(e) {
            if (!(e instanceof n)) throw TypeError("field must be a Field");
            var t = this.fieldsArray.indexOf(e);
            if (t < 0) throw Error(e + " is not a member of " + this);
            return this.fieldsArray.splice(t, 1), (t = this.oneof.indexOf(e.name)) > -1 && this.oneof.splice(t, 1), e.partOf = null, this
        }, s.prototype.onAdd = function(e) {
            i.prototype.onAdd.call(this, e);
            for (var t = 0; t < this.oneof.length; ++t) {
                var r = e.get(this.oneof[t]);
                r && !r.partOf && (r.partOf = this, this.fieldsArray.push(r))
            }
            a(this)
        }, s.prototype.onRemove = function(e) {
            for (var t, r = 0; r < this.fieldsArray.length; ++r)(t = this.fieldsArray[r]).parent && t.parent.remove(t);
            i.prototype.onRemove.call(this, e)
        }, s.d = function() {
            for (var e = new Array(arguments.length), t = 0; t < arguments.length;) e[t] = arguments[t++];
            return function(t, r) {
                o.decorateType(t.constructor).add(new s(r, e)), Object.defineProperty(t, r, {
                    get: o.oneOfGetter(e),
                    set: o.oneOfSetter(e)
                })
            }
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.ajax = void 0;
        const n = i(r(1)),
            o = i(r(0));
        var s = r(48);
        t.ajax = function(e) {
            if (!e || !e.url) return Promise.reject(new n.default({
                code: o.default.INVALID_PARAMETER,
                message: "could not send request due to invalid parameter"
            }));
            e.dataType = e.dataType || "json";
            var t = new XMLHttpRequest;
            t.open(e.type || "GET", e.url, !0), t.responseType = "" + e.dataType;
            const r = e.contentType || "application/json;charset=UTF-8";
            return t.setRequestHeader("Content-type", r), e.header && Object.keys(e.header).map(r => {
                e.header && e.header[r] && t.setRequestHeader(r, e.header[r])
            }), new Promise((i, a) => {
                var d;
                t.onload = function() {
                    if (t.status > 400) return Promise.reject(new n.default({
                        code: o.default.INVALID_PARAMETER,
                        message: "could not send request due to invalid parameter"
                    }));
                    var e = t.response;
                    i(e)
                }, t.onerror = function(e) {
                    a(e)
                }, r.indexOf("x-www-form-urlencoded") >= 0 ? e.data ? t.send((d = e.data, Object.keys(d).map(e => encodeURIComponent(e) + "=" + encodeURIComponent(/Object/i.test(d[e]) ? JSON.stringify(d[e]) : d[e])).join("&"))) : t.send() : e.data ? e.header && "gzip" === e.header["Content-Encoding"] ? t.send(e.data) : t.send(s.stringify(e.data)) : t.send()
            })
        }
    }, function(e, t, r) {
        var i, n, o, s, a;
        i = r(135), n = r(78).utf8, o = r(136), s = r(78).bin, (a = function(e, t) {
            e.constructor == String ? e = t && "binary" === t.encoding ? s.stringToBytes(e) : n.stringToBytes(e) : o(e) ? e = Array.prototype.slice.call(e, 0) : Array.isArray(e) || e.constructor === Uint8Array || (e = e.toString());
            for (var r = i.bytesToWords(e), d = 8 * e.length, c = 1732584193, u = -271733879, l = -1732584194, p = 271733878, f = 0; f < r.length; f++) r[f] = 16711935 & (r[f] << 8 | r[f] >>> 24) | 4278255360 & (r[f] << 24 | r[f] >>> 8);
            r[d >>> 5] |= 128 << d % 32, r[14 + (d + 64 >>> 9 << 4)] = d;
            var h = a._ff,
                m = a._gg,
                g = a._hh,
                v = a._ii;
            for (f = 0; f < r.length; f += 16) {
                var y = c,
                    _ = u,
                    S = l,
                    b = p;
                c = h(c, u, l, p, r[f + 0], 7, -680876936), p = h(p, c, u, l, r[f + 1], 12, -389564586), l = h(l, p, c, u, r[f + 2], 17, 606105819), u = h(u, l, p, c, r[f + 3], 22, -1044525330), c = h(c, u, l, p, r[f + 4], 7, -176418897), p = h(p, c, u, l, r[f + 5], 12, 1200080426), l = h(l, p, c, u, r[f + 6], 17, -1473231341), u = h(u, l, p, c, r[f + 7], 22, -45705983), c = h(c, u, l, p, r[f + 8], 7, 1770035416), p = h(p, c, u, l, r[f + 9], 12, -1958414417), l = h(l, p, c, u, r[f + 10], 17, -42063), u = h(u, l, p, c, r[f + 11], 22, -1990404162), c = h(c, u, l, p, r[f + 12], 7, 1804603682), p = h(p, c, u, l, r[f + 13], 12, -40341101), l = h(l, p, c, u, r[f + 14], 17, -1502002290), c = m(c, u = h(u, l, p, c, r[f + 15], 22, 1236535329), l, p, r[f + 1], 5, -165796510), p = m(p, c, u, l, r[f + 6], 9, -1069501632), l = m(l, p, c, u, r[f + 11], 14, 643717713), u = m(u, l, p, c, r[f + 0], 20, -373897302), c = m(c, u, l, p, r[f + 5], 5, -701558691), p = m(p, c, u, l, r[f + 10], 9, 38016083), l = m(l, p, c, u, r[f + 15], 14, -660478335), u = m(u, l, p, c, r[f + 4], 20, -405537848), c = m(c, u, l, p, r[f + 9], 5, 568446438), p = m(p, c, u, l, r[f + 14], 9, -1019803690), l = m(l, p, c, u, r[f + 3], 14, -187363961), u = m(u, l, p, c, r[f + 8], 20, 1163531501), c = m(c, u, l, p, r[f + 13], 5, -1444681467), p = m(p, c, u, l, r[f + 2], 9, -51403784), l = m(l, p, c, u, r[f + 7], 14, 1735328473), c = g(c, u = m(u, l, p, c, r[f + 12], 20, -1926607734), l, p, r[f + 5], 4, -378558), p = g(p, c, u, l, r[f + 8], 11, -2022574463), l = g(l, p, c, u, r[f + 11], 16, 1839030562), u = g(u, l, p, c, r[f + 14], 23, -35309556), c = g(c, u, l, p, r[f + 1], 4, -1530992060), p = g(p, c, u, l, r[f + 4], 11, 1272893353), l = g(l, p, c, u, r[f + 7], 16, -155497632), u = g(u, l, p, c, r[f + 10], 23, -1094730640), c = g(c, u, l, p, r[f + 13], 4, 681279174), p = g(p, c, u, l, r[f + 0], 11, -358537222), l = g(l, p, c, u, r[f + 3], 16, -722521979), u = g(u, l, p, c, r[f + 6], 23, 76029189), c = g(c, u, l, p, r[f + 9], 4, -640364487), p = g(p, c, u, l, r[f + 12], 11, -421815835), l = g(l, p, c, u, r[f + 15], 16, 530742520), c = v(c, u = g(u, l, p, c, r[f + 2], 23, -995338651), l, p, r[f + 0], 6, -198630844), p = v(p, c, u, l, r[f + 7], 10, 1126891415), l = v(l, p, c, u, r[f + 14], 15, -1416354905), u = v(u, l, p, c, r[f + 5], 21, -57434055), c = v(c, u, l, p, r[f + 12], 6, 1700485571), p = v(p, c, u, l, r[f + 3], 10, -1894986606), l = v(l, p, c, u, r[f + 10], 15, -1051523), u = v(u, l, p, c, r[f + 1], 21, -2054922799), c = v(c, u, l, p, r[f + 8], 6, 1873313359), p = v(p, c, u, l, r[f + 15], 10, -30611744), l = v(l, p, c, u, r[f + 6], 15, -1560198380), u = v(u, l, p, c, r[f + 13], 21, 1309151649), c = v(c, u, l, p, r[f + 4], 6, -145523070), p = v(p, c, u, l, r[f + 11], 10, -1120210379), l = v(l, p, c, u, r[f + 2], 15, 718787259), u = v(u, l, p, c, r[f + 9], 21, -343485551), c = c + y >>> 0, u = u + _ >>> 0, l = l + S >>> 0, p = p + b >>> 0
            }
            return i.endian([c, u, l, p])
        })._ff = function(e, t, r, i, n, o, s) {
            var a = e + (t & r | ~t & i) + (n >>> 0) + s;
            return (a << o | a >>> 32 - o) + t
        }, a._gg = function(e, t, r, i, n, o, s) {
            var a = e + (t & i | r & ~i) + (n >>> 0) + s;
            return (a << o | a >>> 32 - o) + t
        }, a._hh = function(e, t, r, i, n, o, s) {
            var a = e + (t ^ r ^ i) + (n >>> 0) + s;
            return (a << o | a >>> 32 - o) + t
        }, a._ii = function(e, t, r, i, n, o, s) {
            var a = e + (r ^ (t | ~i)) + (n >>> 0) + s;
            return (a << o | a >>> 32 - o) + t
        }, a._blocksize = 16, a._digestsize = 16, e.exports = function(e, t) {
            if (null == e) throw new Error("Illegal argument " + e);
            var r = i.wordsToBytes(a(e, t));
            return t && t.asBytes ? r : t && t.asString ? s.bytesToString(r) : i.bytesToHex(r)
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.IS_OPPOBROWSER = t.SAMSUNG_VERSION = t.IS_SAMSUNGBROWSER = t.HUAWEI_VERSION = t.IS_HUAWEIBROWSER = t.MI_VERSION = t.IS_MIBROWSER = t.IS_ELECTRON = t.IS_UCBROWSER = t.IS_WX = t.IS_LINUX = t.IS_MAC = t.IS_WIN = t.IPADQQB_VERSION = t.IS_IPADQQB = t.MACQQB_VERSION = t.IS_MACQQB = t.WQQB_VERSION = t.IS_WQQB = t.MQQB_VERSION = t.IS_MQQB = t.IS_X5MQQB = t.WECHAT_VERSION = t.IS_WECHAT = t.IE_VERSION = t.IS_IE = t.IS_IE8 = t.XWEB_VERSION = t.IS_XWEB = t.TBS_VERSION = t.IS_TBS = t.SOGOU_VERSION = t.IS_SOGOU = t.SOGOUM_VERSION = t.IS_SOGOUM = t.EDG_VERSION = t.EDG_MAJOR_VERSION = t.IS_EDG = t.EDGE_VERSION = t.IS_EDGE = t.FIREFOX_MAJOR_VERSION = t.IS_FIREFOX = t.ANDROID_VERSION = t.IS_ANDROID = t.IOS_VERSION = t.IS_IOS = t.IS_IPOD = t.IS_IPHONE = t.IS_IPAD = t.USER_AGENT = void 0, t.IS_LOCAL = t.IS_IOS_SAFARI = t.IS_MAC_SAFARI = t.SAFARI_VERSION = t.SAFARI_MAJOR_VERSION = t.IS_ANY_SAFARI = t.IS_SAFARI = t.CHROME_VERSION = t.CHROME_MAJOR_VERSION = t.IS_CHROME = t.IS_CHROME_ONLY = t.VIVO_VERSION = t.IS_VIVOBROWSER = t.OPPO_VERSION = void 0, t.USER_AGENT = window.navigator && window.navigator.userAgent || "", t.IS_IPAD = /iPad/i.test(t.USER_AGENT), t.IS_IPHONE = /iPhone/i.test(t.USER_AGENT) && !t.IS_IPAD, t.IS_IPOD = /iPod/i.test(t.USER_AGENT), t.IS_IOS = t.IS_IPHONE || t.IS_IPAD || t.IS_IPOD, t.IOS_VERSION = t.IS_IOS && function() {
            const e = t.USER_AGENT.match(/OS (\d+)_/i);
            return e && e[1] ? e[1] : null
        }(), t.IS_ANDROID = /Android/i.test(t.USER_AGENT), t.ANDROID_VERSION = t.IS_ANDROID && function() {
            const e = t.USER_AGENT.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
            if (!e) return null;
            const r = e[1] && parseFloat(e[1]),
                i = e[2] && parseFloat(e[2]);
            return r && i ? parseFloat(e[1] + "." + e[2]) : r || null
        }(), t.IS_FIREFOX = /Firefox/i.test(t.USER_AGENT), t.FIREFOX_MAJOR_VERSION = t.IS_FIREFOX && function() {
            const e = t.USER_AGENT.match(/Firefox\/(\d+)/);
            return e && e[1] ? parseFloat(e[1]) : null
        }(), t.IS_EDGE = /Edge\//i.test(t.USER_AGENT), t.EDGE_VERSION = t.IS_EDGE && function() {
            var e = t.USER_AGENT.match(/Edge\/(\d+)/i);
            if (e && e[1]) return e[1]
        }(), t.IS_EDG = /Edg\//i.test(t.USER_AGENT), t.EDG_MAJOR_VERSION = t.IS_EDG && function() {
            const e = t.USER_AGENT.match(/Edg\/(\d+)/);
            return e && e[1] ? parseFloat(e[1]) : null
        }(), t.EDG_VERSION = t.IS_EDG && function() {
            const e = t.USER_AGENT.match(/Edg\/([\d.]+)/);
            return e && e[1] ? e[1] : null
        }(), t.IS_SOGOUM = /SogouMobileBrowser\//i.test(t.USER_AGENT), t.SOGOUM_VERSION = t.IS_SOGOUM && function() {
            const e = t.USER_AGENT.match(/SogouMobileBrowser\/(\d+)/);
            return e && e[1] ? parseFloat(e[1]) : null
        }(), t.IS_SOGOU = /MetaSr\s/i.test(t.USER_AGENT), t.SOGOU_VERSION = t.IS_SOGOU && function() {
            const e = t.USER_AGENT.match(/MetaSr(\s\d+(\.\d+)+)/);
            return e && e[1] ? parseFloat(e[1]) : null
        }(), t.IS_TBS = /TBS\/\d+/i.test(t.USER_AGENT), t.TBS_VERSION = t.IS_TBS && function() {
            var e = t.USER_AGENT.match(/TBS\/(\d+)/i);
            if (e && e[1]) return e[1]
        }(), t.IS_XWEB = /XWEB\/\d+/i.test(t.USER_AGENT), t.XWEB_VERSION = t.IS_XWEB && function() {
            var e = t.USER_AGENT.match(/XWEB\/(\d+)/i);
            if (e && e[1]) return e[1]
        }(), t.IS_IE8 = /MSIE\s8\.0/.test(t.USER_AGENT), t.IS_IE = /MSIE\/\d+/i.test(t.USER_AGENT), t.IE_VERSION = t.IS_IE && function() {
            const e = /MSIE\s(\d+)\.\d/.exec(t.USER_AGENT);
            let r = e && parseFloat(e[1]);
            return !r && /Trident\/7.0/i.test(t.USER_AGENT) && /rv:11.0/.test(t.USER_AGENT) && (r = 11), r
        }(), t.IS_WECHAT = /(micromessenger|webbrowser)/i.test(t.USER_AGENT), t.WECHAT_VERSION = t.IS_WECHAT && function() {
            var e = t.USER_AGENT.match(/MicroMessenger\/(\d+)/i);
            if (e && e[1]) return e[1]
        }(), t.IS_X5MQQB = !t.IS_TBS && /MQQBrowser\/\d+/i.test(t.USER_AGENT) && /COVC\/\d+/i.test(t.USER_AGENT), t.IS_MQQB = !t.IS_TBS && /MQQBrowser\/\d+/i.test(t.USER_AGENT) && !/COVC\/\d+/i.test(t.USER_AGENT), t.MQQB_VERSION = (t.IS_MQQB || t.IS_X5MQQB) && function() {
            const e = t.USER_AGENT.match(/ MQQBrowser\/([\d.]+)/);
            return e && e[1] ? e[1] : null
        }(), t.IS_WQQB = !t.IS_TBS && / QQBrowser\/\d+/i.test(t.USER_AGENT), t.WQQB_VERSION = t.IS_WQQB && function() {
            const e = t.USER_AGENT.match(/ QQBrowser\/([\d.]+)/);
            return e && e[1] ? e[1] : null
        }(), t.IS_MACQQB = !t.IS_TBS && /QQBrowserLite\/\d+/i.test(t.USER_AGENT), t.MACQQB_VERSION = t.IS_MACQQB && function() {
            const e = t.USER_AGENT.match(/QQBrowserLite\/([\d.]+)/);
            return e && e[1] ? e[1] : null
        }(), t.IS_IPADQQB = !t.IS_TBS && /MQBHD\/\d+/i.test(t.USER_AGENT), t.IPADQQB_VERSION = t.IS_IPADQQB && function() {
            const e = t.USER_AGENT.match(/MQBHD\/([\d.]+)/);
            return e && e[1] ? e[1] : null
        }(), t.IS_WIN = /Windows/i.test(t.USER_AGENT), t.IS_MAC = !t.IS_IOS && /MAC OS X/i.test(t.USER_AGENT), t.IS_LINUX = !t.IS_ANDROID && /Linux/i.test(t.USER_AGENT), t.IS_WX = /MicroMessenger/i.test(t.USER_AGENT), t.IS_UCBROWSER = /UCBrowser/i.test(t.USER_AGENT), t.IS_ELECTRON = /Electron/i.test(t.USER_AGENT), t.IS_MIBROWSER = /MiuiBrowser/i.test(t.USER_AGENT), t.MI_VERSION = t.IS_MIBROWSER && function() {
            const e = t.USER_AGENT.match(/MiuiBrowser\/([\d.]+)/);
            return e && e[1] ? e[1] : null
        }(), t.IS_HUAWEIBROWSER = /HuaweiBrowser/i.test(t.USER_AGENT), t.HUAWEI_VERSION = t.IS_HUAWEIBROWSER && function() {
            const e = t.USER_AGENT.match(/HuaweiBrowser\/([\d.]+)/);
            return e && e[1] ? e[1] : null
        }(), t.IS_SAMSUNGBROWSER = /SamsungBrowser/i.test(t.USER_AGENT), t.SAMSUNG_VERSION = t.IS_SAMSUNGBROWSER && function() {
            const e = t.USER_AGENT.match(/SamsungBrowser\/([\d.]+)/);
            return e && e[1] ? e[1] : null
        }(), t.IS_OPPOBROWSER = /HeyTapBrowser/i.test(t.USER_AGENT), t.OPPO_VERSION = t.IS_OPPOBROWSER && function() {
            const e = t.USER_AGENT.match(/HeyTapBrowser\/([\d.]+)/);
            return e && e[1] ? e[1] : null
        }(), t.IS_VIVOBROWSER = /VivoBrowser/i.test(t.USER_AGENT), t.VIVO_VERSION = t.IS_VIVOBROWSER && function() {
            const e = t.USER_AGENT.match(/VivoBrowser\/([\d.]+)/);
            return e && e[1] ? e[1] : null
        }(), t.IS_CHROME_ONLY = /Chrome/i.test(t.USER_AGENT), t.IS_CHROME = !t.IS_EDGE && !t.IS_SOGOU && !t.IS_SOGOUM && !t.IS_TBS && !t.IS_XWEB && !t.IS_EDG && !t.IS_WQQB && !t.IS_MIBROWSER && !t.IS_HUAWEIBROWSER && !t.IS_SAMSUNGBROWSER && !t.IS_OPPOBROWSER && !t.IS_VIVOBROWSER && /Chrome/i.test(t.USER_AGENT), t.CHROME_MAJOR_VERSION = t.IS_CHROME && function() {
            const e = t.USER_AGENT.match(/Chrome\/(\d+)/);
            return e && e[1] ? parseFloat(e[1]) : null
        }(), t.CHROME_VERSION = t.IS_CHROME && function() {
            const e = t.USER_AGENT.match(/Chrome\/([\d.]+)/);
            return e && e[1] ? e[1] : null
        }(), t.IS_SAFARI = !t.IS_CHROME_ONLY && !t.IS_MQQB && !t.IS_X5MQQB && !t.IS_MACQQB && !t.IS_IPADQQB && /Safari/i.test(t.USER_AGENT), t.IS_ANY_SAFARI = t.IS_SAFARI || t.IS_IOS, t.SAFARI_MAJOR_VERSION = t.IS_SAFARI && function() {
            const e = t.USER_AGENT.match(/Version\/(\d+)/);
            return e && e[1] ? parseFloat(e[1]) : null
        }(), t.SAFARI_VERSION = t.IS_SAFARI && function() {
            const e = t.USER_AGENT.match(/Version\/([\d.]+)/);
            return e && e[1] ? e[1] : null
        }(), t.IS_MAC_SAFARI = t.IS_SAFARI && t.IS_MAC, t.IS_IOS_SAFARI = t.IS_SAFARI && t.IS_IOS, t.IS_LOCAL = "file:" === window.location.protocol || "localhost" === window.location.hostname || /^\d+\.\d+\.\d+\.\d+$/.test(window.location.hostname)
    }, function(e, t, r) {
        var i = r(40);
        e.exports = function(e, t, r) {
            if (i(e), void 0 === t) return e;
            switch (r) {
                case 1:
                    return function(r) {
                        return e.call(t, r)
                    };
                case 2:
                    return function(r, i) {
                        return e.call(t, r, i)
                    };
                case 3:
                    return function(r, i, n) {
                        return e.call(t, r, i, n)
                    }
            }
            return function() {
                return e.apply(t, arguments)
            }
        }
    }, function(e, t) {
        e.exports = function(e) {
            if ("function" != typeof e) throw TypeError(e + " is not a function!");
            return e
        }
    }, function(e, t) {
        e.exports = function(e) {
            try {
                return !!e()
            } catch (e) {
                return !0
            }
        }
    }, function(e, t) {
        e.exports = function(e, t) {
            return {
                enumerable: !(1 & e),
                configurable: !(2 & e),
                writable: !(4 & e),
                value: t
            }
        }
    }, function(e, t) {
        var r = 0,
            i = Math.random();
        e.exports = function(e) {
            return "Symbol(".concat(void 0 === e ? "" : e, ")_", (++r + i).toString(36))
        }
    }, function(e, t, r) {
        var i = r(15).f,
            n = r(18),
            o = r(5)("toStringTag");
        e.exports = function(e, t, r) {
            e && !n(e = r ? e : e.prototype, o) && i(e, o, {
                configurable: !0,
                value: t
            })
        }
    }, function(e, t, r) {
        "use strict";
        r(98);
        e.exports = class {
            constructor(e) {
                this.formatTimeUnit = function(e, t) {
                    t = t || 2;
                    for (var r = "" + e; r.length < t;) r = "0" + r;
                    return r
                }, this.prefix = e ? "protoo-client:" + e : "protoo-client"
            }
            debug() {
                var e = Array.prototype.slice.call(arguments);
                this.formatArgs(e), console.debug(e), window.logStorage && window.logStorage.log("debug", e)
            }
            warn() {
                var e = Array.prototype.slice.call(arguments);
                this.formatArgs(e), console.warn(e), window.logStorage && window.logStorage.log("warn", e)
            }
            error() {
                var e = Array.prototype.slice.call(arguments);
                this.formatArgs(e), console.error(e), window.logStorage && window.logStorage.log("error", e)
            }
            formatArgs(e) {
                var t = new Date,
                    r = "[WEBRTC LOG " + (this.formatTimeUnit("" + (t.getMonth() + 1)) + "-" + this.formatTimeUnit("" + t.getDate()) + " " + this.formatTimeUnit("" + t.getHours()) + ":" + this.formatTimeUnit("" + t.getMinutes()) + ":" + this.formatTimeUnit("" + t.getSeconds()) + ":" + this.formatTimeUnit("" + t.getMilliseconds(), 3)) + " " + this.prefix.toUpperCase() + "]";
                return e.unshift(r), e
            }
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.canReceive = t.canSend = t.generateProbatorRtpParameters = t.reduceCodecs = t.getSendingRemoteRtpParameters = t.getSendingRtpParameters = t.getRecvRtpCapabilities = t.getExtendedRtpCapabilities = t.validateSctpStreamParameters = t.validateSctpParameters = t.validateNumSctpStreams = t.validateSctpCapabilities = t.validateRtcpParameters = t.validateRtpEncodingParameters = t.validateRtpHeaderExtensionParameters = t.validateRtpCodecParameters = t.validateRtpParameters = t.validateRtpHeaderExtension = t.validateRtcpFeedback = t.validateRtpCodecCapability = t.validateRtpCapabilities = void 0;
        const s = o(r(201)),
            a = o(r(22));

        function d(e) {
            const t = new RegExp("^(audio|video)/(.+)", "i");
            if ("object" != typeof e) throw new TypeError("codec is not an object");
            if (!e.mimeType || "string" != typeof e.mimeType) throw new TypeError("missing codec.mimeType");
            const r = t.exec(e.mimeType);
            if (!r) throw new TypeError("invalid codec.mimeType");
            if (e.kind = r[1].toLowerCase(), e.preferredPayloadType && "number" != typeof e.preferredPayloadType) throw new TypeError("invalid codec.preferredPayloadType");
            if ("number" != typeof e.clockRate) throw new TypeError("missing codec.clockRate");
            "audio" === e.kind ? "number" != typeof e.channels && (e.channels = 1) : delete e.channels, e.parameters && "object" == typeof e.parameters || (e.parameters = {});
            for (const t of Object.keys(e.parameters)) {
                let r = e.parameters[t];
                if (void 0 === r && (e.parameters[t] = "", r = ""), "string" != typeof r && "number" != typeof r) throw new TypeError(`invalid codec parameter [key:${t}s, value:${r}]`);
                if ("apt" === t && "number" != typeof r) throw new TypeError("invalid codec apt parameter")
            }
            e.rtcpFeedback && Array.isArray(e.rtcpFeedback) || (e.rtcpFeedback = []);
            for (const t of e.rtcpFeedback) c(t)
        }

        function c(e) {
            if ("object" != typeof e) throw new TypeError("fb is not an object");
            if (!e.type || "string" != typeof e.type) throw new TypeError("missing fb.type");
            e.parameter && "string" == typeof e.parameter || (e.parameter = "")
        }

        function u(e) {
            if ("object" != typeof e) throw new TypeError("ext is not an object");
            if (e.kind && "string" == typeof e.kind || (e.kind = ""), "" !== e.kind && "audio" !== e.kind && "video" !== e.kind) throw new TypeError("invalid ext.kind");
            if (!e.uri || "string" != typeof e.uri) throw new TypeError("missing ext.uri");
            if ("number" != typeof e.preferredId) throw new TypeError("missing ext.preferredId");
            if (e.preferredEncrypt && "boolean" != typeof e.preferredEncrypt) throw new TypeError("invalid ext.preferredEncrypt");
            if (e.preferredEncrypt || (e.preferredEncrypt = !1), e.direction && "string" != typeof e.direction) throw new TypeError("invalid ext.direction");
            e.direction || (e.direction = "sendrecv")
        }

        function l(e) {
            if ("object" != typeof e) throw new TypeError("params is not an object");
            if (e.mid && "string" != typeof e.mid) throw new TypeError("params.mid is not a string");
            if (!Array.isArray(e.codecs)) throw new TypeError("missing params.codecs");
            for (const t of e.codecs) p(t);
            if (e.headerExtensions && !Array.isArray(e.headerExtensions)) throw new TypeError("params.headerExtensions is not an array");
            e.headerExtensions || (e.headerExtensions = []);
            for (const t of e.headerExtensions) f(t);
            if (e.encodings && !Array.isArray(e.encodings)) throw new TypeError("params.encodings is not an array");
            e.encodings || (e.encodings = []);
            for (const t of e.encodings) h(t);
            if (e.rtcp && "object" != typeof e.rtcp) throw new TypeError("params.rtcp is not an object");
            e.rtcp || (e.rtcp = {}), m(e.rtcp)
        }

        function p(e) {
            const t = new RegExp("^(audio|video)/(.+)", "i");
            if ("object" != typeof e) throw new TypeError("codec is not an object");
            if (!e.mimeType || "string" != typeof e.mimeType) throw new TypeError("missing codec.mimeType");
            const r = t.exec(e.mimeType);
            if (!r) throw new TypeError("invalid codec.mimeType");
            if ("number" != typeof e.payloadType) throw new TypeError("missing codec.payloadType");
            if ("number" != typeof e.clockRate) throw new TypeError("missing codec.clockRate");
            "audio" === r[1].toLowerCase() ? "number" != typeof e.channels && (e.channels = 1) : delete e.channels, e.parameters && "object" == typeof e.parameters || (e.parameters = {});
            for (const t of Object.keys(e.parameters)) {
                let r = e.parameters[t];
                if (void 0 === r && (e.parameters[t] = "", r = ""), "string" != typeof r && "number" != typeof r) throw new TypeError(`invalid codec parameter [key:${t}s, value:${r}]`);
                if ("apt" === t && "number" != typeof r) throw new TypeError("invalid codec apt parameter")
            }
            e.rtcpFeedback && Array.isArray(e.rtcpFeedback) || (e.rtcpFeedback = []);
            for (const t of e.rtcpFeedback) c(t)
        }

        function f(e) {
            if ("object" != typeof e) throw new TypeError("ext is not an object");
            if (!e.uri || "string" != typeof e.uri) throw new TypeError("missing ext.uri");
            if ("number" != typeof e.id) throw new TypeError("missing ext.id");
            if (e.encrypt && "boolean" != typeof e.encrypt) throw new TypeError("invalid ext.encrypt");
            e.encrypt || (e.encrypt = !1), e.parameters && "object" == typeof e.parameters || (e.parameters = {});
            for (const t of Object.keys(e.parameters)) {
                let r = e.parameters[t];
                if (void 0 === r && (e.parameters[t] = "", r = ""), "string" != typeof r && "number" != typeof r) throw new TypeError("invalid header extension parameter")
            }
        }

        function h(e) {
            if ("object" != typeof e) throw new TypeError("encoding is not an object");
            if (e.ssrc && "number" != typeof e.ssrc) throw new TypeError("invalid encoding.ssrc");
            if (e.rid && "string" != typeof e.rid) throw new TypeError("invalid encoding.rid");
            if (e.rtx && "object" != typeof e.rtx) throw new TypeError("invalid encoding.rtx");
            if (e.rtx && "number" != typeof e.rtx.ssrc) throw new TypeError("missing encoding.rtx.ssrc");
            if (e.dtx && "boolean" == typeof e.dtx || (e.dtx = !1), e.scalabilityMode && "string" != typeof e.scalabilityMode) throw new TypeError("invalid encoding.scalabilityMode")
        }

        function m(e) {
            if ("object" != typeof e) throw new TypeError("rtcp is not an object");
            if (e.cname && "string" != typeof e.cname) throw new TypeError("invalid rtcp.cname");
            e.reducedSize && "boolean" == typeof e.reducedSize || (e.reducedSize = !0)
        }

        function g(e) {
            if ("object" != typeof e) throw new TypeError("numStreams is not an object");
            if ("number" != typeof e.OS) throw new TypeError("missing numStreams.OS");
            if ("number" != typeof e.MIS) throw new TypeError("missing numStreams.MIS")
        }

        function v(e) {
            return !!e && /.+\/rtx$/i.test(e.mimeType)
        }

        function y(e, t, {
            strict: r = !1,
            modify: i = !1
        } = {}) {
            const n = e.mimeType.toLowerCase();
            if (n !== t.mimeType.toLowerCase()) return !1;
            if (e.clockRate !== t.clockRate) return !1;
            if (e.channels !== t.channels) return !1;
            switch (n) {
                case "video/h264":
                    if ((e.parameters["packetization-mode"] || 0) !== (t.parameters["packetization-mode"] || 0)) return !1;
                    if (r) {
                        if (!s.isSameProfile(e.parameters, t.parameters)) return !1;
                        let r;
                        try {
                            r = s.generateProfileLevelIdForAnswer(e.parameters, t.parameters)
                        } catch (e) {
                            return !1
                        }
                        i && (r ? e.parameters["profile-level-id"] = r : delete e.parameters["profile-level-id"])
                    }
                    break;
                case "video/vp9":
                    if (r) {
                        if ((e.parameters["profile-id"] || 0) !== (t.parameters["profile-id"] || 0)) return !1
                    }
            }
            return !0
        }

        function _(e, t) {
            return (!e.kind || !t.kind || e.kind === t.kind) && e.uri === t.uri
        }

        function S(e, t) {
            const r = [];
            for (const i of e.rtcpFeedback || []) {
                const e = (t.rtcpFeedback || []).find(e => e.type === i.type && (e.parameter === i.parameter || !e.parameter && !i.parameter));
                e && r.push(e)
            }
            return r
        }
        t.validateRtpCapabilities = function(e) {
            if ("object" != typeof e) throw new TypeError("caps is not an object");
            if (e.codecs && !Array.isArray(e.codecs)) throw new TypeError("caps.codecs is not an array");
            e.codecs || (e.codecs = []);
            for (const t of e.codecs) d(t);
            if (e.headerExtensions && !Array.isArray(e.headerExtensions)) throw new TypeError("caps.headerExtensions is not an array");
            e.headerExtensions || (e.headerExtensions = []);
            for (const t of e.headerExtensions) u(t)
        }, t.validateRtpCodecCapability = d, t.validateRtcpFeedback = c, t.validateRtpHeaderExtension = u, t.validateRtpParameters = l, t.validateRtpCodecParameters = p, t.validateRtpHeaderExtensionParameters = f, t.validateRtpEncodingParameters = h, t.validateRtcpParameters = m, t.validateSctpCapabilities = function(e) {
            if ("object" != typeof e) throw new TypeError("caps is not an object");
            if (!e.numStreams || "object" != typeof e.numStreams) throw new TypeError("missing caps.numStreams");
            g(e.numStreams)
        }, t.validateNumSctpStreams = g, t.validateSctpParameters = function(e) {
            if ("object" != typeof e) throw new TypeError("params is not an object");
            if ("number" != typeof e.port) throw new TypeError("missing params.port");
            if ("number" != typeof e.OS) throw new TypeError("missing params.OS");
            if ("number" != typeof e.MIS) throw new TypeError("missing params.MIS");
            if ("number" != typeof e.maxMessageSize) throw new TypeError("missing params.maxMessageSize")
        }, t.validateSctpStreamParameters = function(e) {
            if ("object" != typeof e) throw new TypeError("params is not an object");
            if ("number" != typeof e.streamId) throw new TypeError("missing params.streamId");
            let t = !1;
            if ("boolean" == typeof e.ordered ? t = !0 : e.ordered = !0, e.maxPacketLifeTime && "number" != typeof e.maxPacketLifeTime) throw new TypeError("invalid params.maxPacketLifeTime");
            if (e.maxRetransmits && "number" != typeof e.maxRetransmits) throw new TypeError("invalid params.maxRetransmits");
            if (e.maxPacketLifeTime && e.maxRetransmits) throw new TypeError("cannot provide both maxPacketLifeTime and maxRetransmits");
            if (t && e.ordered && (e.maxPacketLifeTime || e.maxRetransmits)) throw new TypeError("cannot be ordered with maxPacketLifeTime or maxRetransmits");
            if (t || !e.maxPacketLifeTime && !e.maxRetransmits || (e.ordered = !1), e.label && "string" != typeof e.label) throw new TypeError("invalid params.label");
            if (e.protocol && "string" != typeof e.protocol) throw new TypeError("invalid params.protocol")
        }, t.getExtendedRtpCapabilities = function(e, t) {
            const r = {
                codecs: [],
                headerExtensions: []
            };
            for (const i of t.codecs || []) {
                if (v(i)) continue;
                const t = (e.codecs || []).find(e => y(e, i, {
                    strict: !0,
                    modify: !0
                }));
                if (!t) continue;
                const n = {
                    mimeType: t.mimeType,
                    kind: t.kind,
                    clockRate: t.clockRate,
                    channels: t.channels,
                    localPayloadType: t.preferredPayloadType,
                    localRtxPayloadType: void 0,
                    remotePayloadType: i.preferredPayloadType,
                    remoteRtxPayloadType: void 0,
                    localParameters: t.parameters,
                    remoteParameters: i.parameters,
                    rtcpFeedback: S(t, i)
                };
                r.codecs.push(n)
            }
            for (const i of r.codecs) {
                const r = e.codecs.find(e => v(e) && e.parameters.apt === i.localPayloadType),
                    n = t.codecs.find(e => v(e) && e.parameters.apt === i.remotePayloadType);
                r && n && (i.localRtxPayloadType = r.preferredPayloadType, i.remoteRtxPayloadType = n.preferredPayloadType)
            }
            for (const i of t.headerExtensions) {
                const t = e.headerExtensions.find(e => _(e, i));
                if (!t) continue;
                const n = {
                    kind: i.kind,
                    uri: i.uri,
                    sendId: t.preferredId,
                    recvId: i.preferredId,
                    encrypt: t.preferredEncrypt,
                    direction: "sendrecv"
                };
                switch (i.direction) {
                    case "sendrecv":
                        n.direction = "sendrecv";
                        break;
                    case "recvonly":
                        n.direction = "sendonly";
                        break;
                    case "sendonly":
                        n.direction = "recvonly";
                        break;
                    case "inactive":
                        n.direction = "inactive"
                }
                r.headerExtensions.push(n)
            }
            return r
        }, t.getRecvRtpCapabilities = function(e) {
            const t = {
                codecs: [],
                headerExtensions: []
            };
            for (const r of e.codecs) {
                const e = {
                    mimeType: r.mimeType,
                    kind: r.kind,
                    preferredPayloadType: r.localPayloadType,
                    clockRate: r.clockRate,
                    channels: r.channels,
                    parameters: r.localParameters,
                    rtcpFeedback: r.rtcpFeedback
                };
                if (t.codecs.push(e), !r.localRtxPayloadType) continue;
                const i = {
                    mimeType: r.kind + "/rtx",
                    kind: r.kind,
                    preferredPayloadType: r.localRtxPayloadType,
                    clockRate: r.clockRate,
                    parameters: {
                        apt: r.localPayloadType
                    },
                    rtcpFeedback: []
                };
                t.codecs.push(i)
            }
            for (const r of e.headerExtensions) {
                if ("sendrecv" !== r.direction && "recvonly" !== r.direction) continue;
                const e = {
                    kind: r.kind,
                    uri: r.uri,
                    preferredId: r.sendId,
                    preferredEncrypt: r.encrypt,
                    direction: r.direction
                };
                t.headerExtensions.push(e)
            }
            return t
        }, t.getSendingRtpParameters = function(e, t) {
            const r = {
                mid: void 0,
                codecs: [],
                headerExtensions: [],
                encodings: [],
                rtcp: {}
            };
            for (const i of t.codecs) {
                if (i.kind !== e) continue;
                const t = {
                    mimeType: i.mimeType,
                    payloadType: i.localPayloadType,
                    clockRate: i.clockRate,
                    channels: i.channels,
                    parameters: i.localParameters,
                    rtcpFeedback: i.rtcpFeedback
                };
                if (r.codecs.push(t), i.localRtxPayloadType) {
                    const e = {
                        mimeType: i.kind + "/rtx",
                        payloadType: i.localRtxPayloadType,
                        clockRate: i.clockRate,
                        parameters: {
                            apt: i.localPayloadType
                        },
                        rtcpFeedback: []
                    };
                    r.codecs.push(e)
                }
            }
            for (const i of t.headerExtensions) {
                if (i.kind && i.kind !== e || "sendrecv" !== i.direction && "sendonly" !== i.direction) continue;
                const t = {
                    uri: i.uri,
                    id: i.sendId,
                    encrypt: i.encrypt,
                    parameters: {}
                };
                r.headerExtensions.push(t)
            }
            return r
        }, t.getSendingRemoteRtpParameters = function(e, t) {
            const r = {
                mid: void 0,
                codecs: [],
                headerExtensions: [],
                encodings: [],
                rtcp: {}
            };
            for (const i of t.codecs) {
                if (i.kind !== e) continue;
                const t = {
                    mimeType: i.mimeType,
                    payloadType: i.localPayloadType,
                    clockRate: i.clockRate,
                    channels: i.channels,
                    parameters: i.remoteParameters,
                    rtcpFeedback: i.rtcpFeedback
                };
                if (r.codecs.push(t), i.localRtxPayloadType) {
                    const e = {
                        mimeType: i.kind + "/rtx",
                        payloadType: i.localRtxPayloadType,
                        clockRate: i.clockRate,
                        parameters: {
                            apt: i.localPayloadType
                        },
                        rtcpFeedback: []
                    };
                    r.codecs.push(e)
                }
            }
            for (const i of t.headerExtensions) {
                if (i.kind && i.kind !== e || "sendrecv" !== i.direction && "sendonly" !== i.direction) continue;
                const t = {
                    uri: i.uri,
                    id: i.sendId,
                    encrypt: i.encrypt,
                    parameters: {}
                };
                r.headerExtensions.push(t)
            }
            if (r.headerExtensions.some(e => "http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01" === e.uri))
                for (const e of r.codecs) e.rtcpFeedback = (e.rtcpFeedback || []).filter(e => "goog-remb" !== e.type);
            else if (r.headerExtensions.some(e => "http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time" === e.uri))
                for (const e of r.codecs) e.rtcpFeedback = (e.rtcpFeedback || []).filter(e => "transport-cc" !== e.type);
            else
                for (const e of r.codecs) e.rtcpFeedback = (e.rtcpFeedback || []).filter(e => "transport-cc" !== e.type && "goog-remb" !== e.type);
            return r
        }, t.reduceCodecs = function(e, t) {
            const r = [];
            if (t) {
                for (let i = 0; i < e.length; ++i)
                    if (y(e[i], t)) {
                        r.push(e[i]), v(e[i + 1]) && r.push(e[i + 1]);
                        break
                    } if (0 === r.length) throw new TypeError("no matching codec found")
            } else r.push(e[0]), v(e[1]) && r.push(e[1]);
            return r
        }, t.generateProbatorRtpParameters = function(e, t) {
            l(e = a.clone(e, {}));
            const r = {
                mid: "probator",
                codecs: [],
                headerExtensions: [],
                encodings: [{
                    ssrc: t
                }],
                rtcp: {
                    cname: "probator"
                }
            };
            return r.codecs.push(e.codecs[0]), r.codecs[0].payloadType = 127, r.headerExtensions = e.headerExtensions, r
        }, t.canSend = function(e, t) {
            return t.codecs.some(t => t.kind === e)
        }, t.canReceive = function(e, t) {
            if (l(e), 0 === e.codecs.length) return !1;
            for (let r in e.codecs)
                if ("video/rtx" !== e.codecs[r].mimeType)
                    for (let i in t.codecs)
                        if (t.codecs[i].localPayloadType === e.codecs[r].payloadType) return !0;
            return !1
        }
    }, function(e, t, r) {
        var i = r(204),
            n = r(205);
        t.write = n, t.parse = i.parse, t.parseParams = i.parseParams, t.parseFmtpConfig = i.parseFmtpConfig, t.parsePayloads = i.parsePayloads, t.parseRemoteCandidates = i.parseRemoteCandidates, t.parseImageAttributes = i.parseImageAttributes, t.parseSimulcastStreamList = i.parseSimulcastStreamList
    }, function(e, t, r) {
        var i = r(132).stringify,
            n = r(133);
        e.exports = function(e) {
            return {
                parse: n(e),
                stringify: i
            }
        }, e.exports.parse = n(), e.exports.stringify = i
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.getScreenStream = t.getStream = t.emptyStreamWith = void 0;
        const i = r(13),
            n = r(143);
        t.getStream = async function(e, t = console) {
            t.log("getLocalStream constraint:", JSON.stringify(e));
            try {
                const r = await navigator.mediaDevices.getUserMedia(e);
                t.log("获取到媒体流: ", r.id);
                return r.getTracks().forEach(e => {
                    if (i.getParameters().mediaTracks.push(e), t.log("获取到的设备类型: TRACK#" + (i.getParameters().mediaTracks.length - 1), e.kind, e.label, e.id, JSON.stringify(e.getSettings())), "video" === e.kind && n.canShimCanvas()) {
                        t.warn("使用canvas track取代videoTrack");
                        const o = n.shimCanvas(e);
                        i.getParameters().mediaTracks.push(o), r.removeTrack(e), r.addTrack(o)
                    }
                }), r
            } catch (e) {
                return t.error("媒体设备获取失败: ", e.name, e.message), Promise.reject(e)
            }
        }, t.getScreenStream = function(e, t = console) {
            t.log("getScreenStream constraint:", JSON.stringify(e, null, " ")), navigator.getDisplayMedia || navigator.mediaDevices.getDisplayMedia;
            const r = navigator.mediaDevices.getDisplayMedia(e);
            return r.then(e => {
                t.log("获取到屏幕共享流: ", e.id);
                return e.getTracks().forEach(e => {
                    i.getParameters().mediaTracks.push(e), t.log("获取到的屏幕共享设备类型: TRACK#" + (i.getParameters().mediaTracks.length - 1), e.kind, e.label, e.id, JSON.stringify(e.getSettings()))
                }), Promise.resolve(e)
            }).catch(e => {
                t.error("屏幕共享获取失败: ", e.name, e.message)
            }), r
        }, t.emptyStreamWith = function(e, t) {
            let r = !1;
            e.getTracks().forEach(i => {
                i !== t ? e.removeTrack(i) : r = !0
            }), !r && t && e.addTrack(t)
        }
    }, function(e, t) {
        var r;
        r = function() {
            return this
        }();
        try {
            r = r || new Function("return this")()
        } catch (e) {
            "object" == typeof window && (r = window)
        }
        e.exports = r
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.AuidoMixingState = void 0;
        t.AuidoMixingState = {
            UNSTART: 0,
            STARTING: 1,
            PLAYED: 2,
            PAUSED: 3,
            STOPED: 4
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.encryptionModeToInt = t.EncryptionModes = t.Encryption = void 0;
        const n = r(3),
            o = i(r(37)),
            s = r(146),
            a = i(r(1)),
            d = i(r(0)),
            c = {
                none: -1,
                "sm4-128-ecb": 0
            };
        t.EncryptionModes = c, t.encryptionModeToInt = function(e) {
            return "none" === e || "sm4-128-ecb" === e ? c[e] : void 0
        };
        class u extends n.EventEmitter {
            constructor(e) {
                super(), this.encryptionMode = "none", this.encryptionSecret = "", this.encodedInsertableStreams = !1, this.adapterRef = e, this.encCtx = new s.SM4Ctx, this.decCtx = new s.SM4Ctx
            }
            setEncryptionMode(e) {
                this.encryptionMode = e, this.encodedInsertableStreams = "encoded-transform-sm4-128-ecb" === e
            }
            setEncryptionSecret(e) {
                this.encryptionSecret = o.default(e), "encoded-transform-sm4-128-ecb" === this.encryptionMode && this.initSm4()
            }
            initSm4() {
                if (!this.encryptionSecret) throw new a.default({
                    code: d.default.NOT_FOUND,
                    message: "No encryptionSecret"
                }); {
                    const e = (new TextEncoder).encode(this.encryptionSecret);
                    s.sm4_setkey_enc(this.encCtx, e), s.sm4_setkey_dec(this.decCtx, e)
                }
            }
            findCryptIndexH264(e) {
                for (let t = 3; t < e.length; t++)
                    if (97 === e[t] || 101 === e[t] && 1 === e[t - 1] && 0 === e[t - 2] && 0 === e[t - 3]) return t + 1;
                return -1
            }
            encodeFunctionH264(e, t) {
                const r = new Uint8Array(e.data),
                    i = this.findCryptIndexH264(r);
                if (i > 0) {
                    const t = s.sm4_crypt_ecb(this.encCtx, r.subarray(i), {
                        shiftStart: i
                    });
                    for (let e = 0; e < i; e++) t[e] = r[e];
                    e.data = t.buffer
                }
                t.enqueue(e)
            }
            decodeFunctionH264(e, t) {
                const r = new Uint8Array(e.data),
                    i = this.findCryptIndexH264(r);
                if (i > 0) {
                    if ((r.buffer.byteLength - i) % 16 != 0) return this.adapterRef.logger.warn("解密前的包无法被16整除", i, r), void t.enqueue(e);
                    const n = s.sm4_crypt_ecb(this.decCtx, r, {
                            shiftStart: i
                        }),
                        o = new Uint8Array(i + n.length);
                    for (let e = 0; e < o.length; e++) o[e] = e < i ? r[e] : n[e - i];
                    e.data = o.buffer
                }
                t.enqueue(e)
            }
        }
        t.Encryption = u
    }, function(e, t, r) {
        e.exports = r(152)
    }, function(e, t, r) {
        "use strict";
        t.__esModule = !0;
        var i, n = r(154),
            o = (i = n) && i.__esModule ? i : {
                default: i
            };
        t.default = function(e) {
            return function() {
                var t = e.apply(this, arguments);
                return new o.default((function(e, r) {
                    return function i(n, s) {
                        try {
                            var a = t[n](s),
                                d = a.value
                        } catch (e) {
                            return void r(e)
                        }
                        if (!a.done) return o.default.resolve(d).then((function(e) {
                            i("next", e)
                        }), (function(e) {
                            i("throw", e)
                        }));
                        e(d)
                    }("next")
                }))
            }
        }
    }, function(e, t) {
        var r = Math.ceil,
            i = Math.floor;
        e.exports = function(e) {
            return isNaN(e = +e) ? 0 : (e > 0 ? i : r)(e)
        }
    }, function(e, t) {
        e.exports = function(e) {
            if (null == e) throw TypeError("Can't call method on  " + e);
            return e
        }
    }, function(e, t, r) {
        var i = r(16),
            n = r(4).document,
            o = i(n) && i(n.createElement);
        e.exports = function(e) {
            return o ? n.createElement(e) : {}
        }
    }, function(e, t, r) {
        var i = r(16);
        e.exports = function(e, t) {
            if (!i(e)) return e;
            var r, n;
            if (t && "function" == typeof(r = e.toString) && !i(n = r.call(e))) return n;
            if ("function" == typeof(r = e.valueOf) && !i(n = r.call(e))) return n;
            if (!t && "function" == typeof(r = e.toString) && !i(n = r.call(e))) return n;
            throw TypeError("Can't convert object to primitive value")
        }
    }, function(e, t, r) {
        var i = r(88),
            n = r(62);
        e.exports = Object.keys || function(e) {
            return i(e, n)
        }
    }, function(e, t, r) {
        var i = r(61)("keys"),
            n = r(43);
        e.exports = function(e) {
            return i[e] || (i[e] = n(e))
        }
    }, function(e, t, r) {
        var i = r(7),
            n = r(4),
            o = n["__core-js_shared__"] || (n["__core-js_shared__"] = {});
        (e.exports = function(e, t) {
            return o[e] || (o[e] = void 0 !== t ? t : {})
        })("versions", []).push({
            version: i.version,
            mode: r(28) ? "pure" : "global",
            copyright: "© 2020 Denis Pushkarev (zloirock.ru)"
        })
    }, function(e, t) {
        e.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")
    }, function(e, t, r) {
        "use strict";
        var i = r(40);

        function n(e) {
            var t, r;
            this.promise = new e((function(e, i) {
                if (void 0 !== t || void 0 !== r) throw TypeError("Bad Promise constructor");
                t = e, r = i
            })), this.resolve = i(t), this.reject = i(r)
        }
        e.exports.f = function(e) {
            return new n(e)
        }
    }, function(e, t, r) {
        t.f = r(5)
    }, function(e, t, r) {
        var i = r(4),
            n = r(7),
            o = r(28),
            s = r(64),
            a = r(15).f;
        e.exports = function(e) {
            var t = n.Symbol || (n.Symbol = o ? {} : i.Symbol || {});
            "_" == e.charAt(0) || e in t || a(t, e, {
                value: s.f(e)
            })
        }
    }, function(e, t) {
        t.f = {}.propertyIsEnumerable
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.HandlerInterface = void 0;
        const i = r(32);
        class n extends i.EnhancedEventEmitter {
            constructor() {
                super()
            }
        }
        t.HandlerInterface = n
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.randomId = t.generateUUID = void 0;
        t.generateUUID = function() {
            return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(e) {
                var t = 16 * Math.random() | 0;
                return ("x" == e ? t : 3 & t | 8).toString(16)
            }))
        };
        t.randomId = function() {
            return "xxxxxxxxxx".replace(/[xy]/g, (function(e) {
                var t = 16 * Math.random() | 0;
                return ("x" == e ? t : 3 & t | 8).toString(16)
            }))
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = l;
        var i, n = r(8),
            o = n.LongBits,
            s = n.base64,
            a = n.utf8;

        function d(e, t, r) {
            this.fn = e, this.len = t, this.next = void 0, this.val = r
        }

        function c() {}

        function u(e) {
            this.head = e.head, this.tail = e.tail, this.len = e.len, this.next = e.states
        }

        function l() {
            this.len = 0, this.head = new d(c, 0, 0), this.tail = this.head, this.states = null
        }
        var p = function() {
            return n.Buffer ? function() {
                return (l.create = function() {
                    return new i
                })()
            } : function() {
                return new l
            }
        };

        function f(e, t, r) {
            t[r] = 255 & e
        }

        function h(e, t) {
            this.len = e, this.next = void 0, this.val = t
        }

        function m(e, t, r) {
            for (; e.hi;) t[r++] = 127 & e.lo | 128, e.lo = (e.lo >>> 7 | e.hi << 25) >>> 0, e.hi >>>= 7;
            for (; e.lo > 127;) t[r++] = 127 & e.lo | 128, e.lo = e.lo >>> 7;
            t[r++] = e.lo
        }

        function g(e, t, r) {
            t[r] = 255 & e, t[r + 1] = e >>> 8 & 255, t[r + 2] = e >>> 16 & 255, t[r + 3] = e >>> 24
        }
        l.create = p(), l.alloc = function(e) {
            return new n.Array(e)
        }, n.Array !== Array && (l.alloc = n.pool(l.alloc, n.Array.prototype.subarray)), l.prototype._push = function(e, t, r) {
            return this.tail = this.tail.next = new d(e, t, r), this.len += t, this
        }, h.prototype = Object.create(d.prototype), h.prototype.fn = function(e, t, r) {
            for (; e > 127;) t[r++] = 127 & e | 128, e >>>= 7;
            t[r] = e
        }, l.prototype.uint32 = function(e) {
            return this.len += (this.tail = this.tail.next = new h((e >>>= 0) < 128 ? 1 : e < 16384 ? 2 : e < 2097152 ? 3 : e < 268435456 ? 4 : 5, e)).len, this
        }, l.prototype.int32 = function(e) {
            return e < 0 ? this._push(m, 10, o.fromNumber(e)) : this.uint32(e)
        }, l.prototype.sint32 = function(e) {
            return this.uint32((e << 1 ^ e >> 31) >>> 0)
        }, l.prototype.uint64 = function(e) {
            var t = o.from(e);
            return this._push(m, t.length(), t)
        }, l.prototype.int64 = l.prototype.uint64, l.prototype.sint64 = function(e) {
            var t = o.from(e).zzEncode();
            return this._push(m, t.length(), t)
        }, l.prototype.bool = function(e) {
            return this._push(f, 1, e ? 1 : 0)
        }, l.prototype.fixed32 = function(e) {
            return this._push(g, 4, e >>> 0)
        }, l.prototype.sfixed32 = l.prototype.fixed32, l.prototype.fixed64 = function(e) {
            var t = o.from(e);
            return this._push(g, 4, t.lo)._push(g, 4, t.hi)
        }, l.prototype.sfixed64 = l.prototype.fixed64, l.prototype.float = function(e) {
            return this._push(n.float.writeFloatLE, 4, e)
        }, l.prototype.double = function(e) {
            return this._push(n.float.writeDoubleLE, 8, e)
        };
        var v = n.Array.prototype.set ? function(e, t, r) {
            t.set(e, r)
        } : function(e, t, r) {
            for (var i = 0; i < e.length; ++i) t[r + i] = e[i]
        };
        l.prototype.bytes = function(e) {
            var t = e.length >>> 0;
            if (!t) return this._push(f, 1, 0);
            if (n.isString(e)) {
                var r = l.alloc(t = s.length(e));
                s.decode(e, r, 0), e = r
            }
            return this.uint32(t)._push(v, t, e)
        }, l.prototype.string = function(e) {
            var t = a.length(e);
            return t ? this.uint32(t)._push(a.write, t, e) : this._push(f, 1, 0)
        }, l.prototype.fork = function() {
            return this.states = new u(this), this.head = this.tail = new d(c, 0, 0), this.len = 0, this
        }, l.prototype.reset = function() {
            return this.states ? (this.head = this.states.head, this.tail = this.states.tail, this.len = this.states.len, this.states = this.states.next) : (this.head = this.tail = new d(c, 0, 0), this.len = 0), this
        }, l.prototype.ldelim = function() {
            var e = this.head,
                t = this.tail,
                r = this.len;
            return this.reset().uint32(r), r && (this.tail.next = e.next, this.tail = t, this.len += r), this
        }, l.prototype.finish = function() {
            for (var e = this.head.next, t = this.constructor.alloc(this.len), r = 0; e;) e.fn(e.val, t, r), r += e.len, e = e.next;
            return t
        }, l._configure = function(e) {
            i = e, l.create = p(), i._configure()
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = d;
        var i, n = r(8),
            o = n.LongBits,
            s = n.utf8;

        function a(e, t) {
            return RangeError("index out of range: " + e.pos + " + " + (t || 1) + " > " + e.len)
        }

        function d(e) {
            this.buf = e, this.pos = 0, this.len = e.length
        }
        var c, u = "undefined" != typeof Uint8Array ? function(e) {
                if (e instanceof Uint8Array || Array.isArray(e)) return new d(e);
                throw Error("illegal buffer")
            } : function(e) {
                if (Array.isArray(e)) return new d(e);
                throw Error("illegal buffer")
            },
            l = function() {
                return n.Buffer ? function(e) {
                    return (d.create = function(e) {
                        return n.Buffer.isBuffer(e) ? new i(e) : u(e)
                    })(e)
                } : u
            };

        function p() {
            var e = new o(0, 0),
                t = 0;
            if (!(this.len - this.pos > 4)) {
                for (; t < 3; ++t) {
                    if (this.pos >= this.len) throw a(this);
                    if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 7 * t) >>> 0, this.buf[this.pos++] < 128) return e
                }
                return e.lo = (e.lo | (127 & this.buf[this.pos++]) << 7 * t) >>> 0, e
            }
            for (; t < 4; ++t)
                if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 7 * t) >>> 0, this.buf[this.pos++] < 128) return e;
            if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 28) >>> 0, e.hi = (e.hi | (127 & this.buf[this.pos]) >> 4) >>> 0, this.buf[this.pos++] < 128) return e;
            if (t = 0, this.len - this.pos > 4) {
                for (; t < 5; ++t)
                    if (e.hi = (e.hi | (127 & this.buf[this.pos]) << 7 * t + 3) >>> 0, this.buf[this.pos++] < 128) return e
            } else
                for (; t < 5; ++t) {
                    if (this.pos >= this.len) throw a(this);
                    if (e.hi = (e.hi | (127 & this.buf[this.pos]) << 7 * t + 3) >>> 0, this.buf[this.pos++] < 128) return e
                }
            throw Error("invalid varint encoding")
        }

        function f(e, t) {
            return (e[t - 4] | e[t - 3] << 8 | e[t - 2] << 16 | e[t - 1] << 24) >>> 0
        }

        function h() {
            if (this.pos + 8 > this.len) throw a(this, 8);
            return new o(f(this.buf, this.pos += 4), f(this.buf, this.pos += 4))
        }
        d.create = l(), d.prototype._slice = n.Array.prototype.subarray || n.Array.prototype.slice, d.prototype.uint32 = (c = 4294967295, function() {
            if (c = (127 & this.buf[this.pos]) >>> 0, this.buf[this.pos++] < 128) return c;
            if (c = (c | (127 & this.buf[this.pos]) << 7) >>> 0, this.buf[this.pos++] < 128) return c;
            if (c = (c | (127 & this.buf[this.pos]) << 14) >>> 0, this.buf[this.pos++] < 128) return c;
            if (c = (c | (127 & this.buf[this.pos]) << 21) >>> 0, this.buf[this.pos++] < 128) return c;
            if (c = (c | (15 & this.buf[this.pos]) << 28) >>> 0, this.buf[this.pos++] < 128) return c;
            if ((this.pos += 5) > this.len) throw this.pos = this.len, a(this, 10);
            return c
        }), d.prototype.int32 = function() {
            return 0 | this.uint32()
        }, d.prototype.sint32 = function() {
            var e = this.uint32();
            return e >>> 1 ^ -(1 & e) | 0
        }, d.prototype.bool = function() {
            return 0 !== this.uint32()
        }, d.prototype.fixed32 = function() {
            if (this.pos + 4 > this.len) throw a(this, 4);
            return f(this.buf, this.pos += 4)
        }, d.prototype.sfixed32 = function() {
            if (this.pos + 4 > this.len) throw a(this, 4);
            return 0 | f(this.buf, this.pos += 4)
        }, d.prototype.float = function() {
            if (this.pos + 4 > this.len) throw a(this, 4);
            var e = n.float.readFloatLE(this.buf, this.pos);
            return this.pos += 4, e
        }, d.prototype.double = function() {
            if (this.pos + 8 > this.len) throw a(this, 4);
            var e = n.float.readDoubleLE(this.buf, this.pos);
            return this.pos += 8, e
        }, d.prototype.bytes = function() {
            var e = this.uint32(),
                t = this.pos,
                r = this.pos + e;
            if (r > this.len) throw a(this, e);
            return this.pos += e, Array.isArray(this.buf) ? this.buf.slice(t, r) : t === r ? new this.buf.constructor(0) : this._slice.call(this.buf, t, r)
        }, d.prototype.string = function() {
            var e = this.bytes();
            return s.read(e, 0, e.length)
        }, d.prototype.skip = function(e) {
            if ("number" == typeof e) {
                if (this.pos + e > this.len) throw a(this, e);
                this.pos += e
            } else
                do {
                    if (this.pos >= this.len) throw a(this)
                } while (128 & this.buf[this.pos++]);
            return this
        }, d.prototype.skipType = function(e) {
            switch (e) {
                case 0:
                    this.skip();
                    break;
                case 1:
                    this.skip(8);
                    break;
                case 2:
                    this.skip(this.uint32());
                    break;
                case 3:
                    for (; 4 != (e = 7 & this.uint32());) this.skipType(e);
                    break;
                case 5:
                    this.skip(4);
                    break;
                default:
                    throw Error("invalid wire type " + e + " at offset " + this.pos)
            }
            return this
        }, d._configure = function(e) {
            i = e, d.create = l(), i._configure();
            var t = n.Long ? "toLong" : "toNumber";
            n.merge(d.prototype, {
                int64: function() {
                    return p.call(this)[t](!1)
                },
                uint64: function() {
                    return p.call(this)[t](!0)
                },
                sint64: function() {
                    return p.call(this).zzDecode()[t](!1)
                },
                fixed64: function() {
                    return h.call(this)[t](!0)
                },
                sfixed64: function() {
                    return h.call(this)[t](!1)
                }
            })
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = y;
        var i = r(34);
        ((y.prototype = Object.create(i.prototype)).constructor = y).className = "Type";
        var n = r(6),
            o = r(35),
            s = r(19),
            a = r(72),
            d = r(73),
            c = r(75),
            u = r(70),
            l = r(69),
            p = r(2),
            f = r(121),
            h = r(122),
            m = r(123),
            g = r(124),
            v = r(125);

        function y(e, t) {
            i.call(this, e, t), this.fields = {}, this.oneofs = void 0, this.extensions = void 0, this.reserved = void 0, this.group = void 0, this._fieldsById = null, this._fieldsArray = null, this._oneofsArray = null, this._ctor = null
        }

        function _(e) {
            return e._fieldsById = e._fieldsArray = e._oneofsArray = null, delete e.encode, delete e.decode, delete e.verify, e
        }
        Object.defineProperties(y.prototype, {
            fieldsById: {
                get: function() {
                    if (this._fieldsById) return this._fieldsById;
                    this._fieldsById = {};
                    for (var e = Object.keys(this.fields), t = 0; t < e.length; ++t) {
                        var r = this.fields[e[t]],
                            i = r.id;
                        if (this._fieldsById[i]) throw Error("duplicate id " + i + " in " + this);
                        this._fieldsById[i] = r
                    }
                    return this._fieldsById
                }
            },
            fieldsArray: {
                get: function() {
                    return this._fieldsArray || (this._fieldsArray = p.toArray(this.fields))
                }
            },
            oneofsArray: {
                get: function() {
                    return this._oneofsArray || (this._oneofsArray = p.toArray(this.oneofs))
                }
            },
            ctor: {
                get: function() {
                    return this._ctor || (this.ctor = y.generateConstructor(this)())
                },
                set: function(e) {
                    var t = e.prototype;
                    t instanceof c || ((e.prototype = new c).constructor = e, p.merge(e.prototype, t)), e.$type = e.prototype.$type = this, p.merge(e, c, !0), this._ctor = e;
                    for (var r = 0; r < this.fieldsArray.length; ++r) this._fieldsArray[r].resolve();
                    var i = {};
                    for (r = 0; r < this.oneofsArray.length; ++r) i[this._oneofsArray[r].resolve().name] = {
                        get: p.oneOfGetter(this._oneofsArray[r].oneof),
                        set: p.oneOfSetter(this._oneofsArray[r].oneof)
                    };
                    r && Object.defineProperties(e.prototype, i)
                }
            }
        }), y.generateConstructor = function(e) {
            for (var t, r = p.codegen(["p"], e.name), i = 0; i < e.fieldsArray.length; ++i)(t = e._fieldsArray[i]).map ? r("this%s={}", p.safeProp(t.name)) : t.repeated && r("this%s=[]", p.safeProp(t.name));
            return r("if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)")("this[ks[i]]=p[ks[i]]")
        }, y.fromJSON = function(e, t) {
            var r = new y(e, t.options);
            r.extensions = t.extensions, r.reserved = t.reserved;
            for (var c = Object.keys(t.fields), u = 0; u < c.length; ++u) r.add((void 0 !== t.fields[c[u]].keyType ? a.fromJSON : s.fromJSON)(c[u], t.fields[c[u]]));
            if (t.oneofs)
                for (c = Object.keys(t.oneofs), u = 0; u < c.length; ++u) r.add(o.fromJSON(c[u], t.oneofs[c[u]]));
            if (t.nested)
                for (c = Object.keys(t.nested), u = 0; u < c.length; ++u) {
                    var l = t.nested[c[u]];
                    r.add((void 0 !== l.id ? s.fromJSON : void 0 !== l.fields ? y.fromJSON : void 0 !== l.values ? n.fromJSON : void 0 !== l.methods ? d.fromJSON : i.fromJSON)(c[u], l))
                }
            return t.extensions && t.extensions.length && (r.extensions = t.extensions), t.reserved && t.reserved.length && (r.reserved = t.reserved), t.group && (r.group = !0), t.comment && (r.comment = t.comment), r
        }, y.prototype.toJSON = function(e) {
            var t = i.prototype.toJSON.call(this, e),
                r = !!e && Boolean(e.keepComments);
            return p.toObject(["options", t && t.options || void 0, "oneofs", i.arrayToJSON(this.oneofsArray, e), "fields", i.arrayToJSON(this.fieldsArray.filter((function(e) {
                return !e.declaringField
            })), e) || {}, "extensions", this.extensions && this.extensions.length ? this.extensions : void 0, "reserved", this.reserved && this.reserved.length ? this.reserved : void 0, "group", this.group || void 0, "nested", t && t.nested || void 0, "comment", r ? this.comment : void 0])
        }, y.prototype.resolveAll = function() {
            for (var e = this.fieldsArray, t = 0; t < e.length;) e[t++].resolve();
            var r = this.oneofsArray;
            for (t = 0; t < r.length;) r[t++].resolve();
            return i.prototype.resolveAll.call(this)
        }, y.prototype.get = function(e) {
            return this.fields[e] || this.oneofs && this.oneofs[e] || this.nested && this.nested[e] || null
        }, y.prototype.add = function(e) {
            if (this.get(e.name)) throw Error("duplicate name '" + e.name + "' in " + this);
            if (e instanceof s && void 0 === e.extend) {
                if (this._fieldsById ? this._fieldsById[e.id] : this.fieldsById[e.id]) throw Error("duplicate id " + e.id + " in " + this);
                if (this.isReservedId(e.id)) throw Error("id " + e.id + " is reserved in " + this);
                if (this.isReservedName(e.name)) throw Error("name '" + e.name + "' is reserved in " + this);
                return e.parent && e.parent.remove(e), this.fields[e.name] = e, e.message = this, e.onAdd(this), _(this)
            }
            return e instanceof o ? (this.oneofs || (this.oneofs = {}), this.oneofs[e.name] = e, e.onAdd(this), _(this)) : i.prototype.add.call(this, e)
        }, y.prototype.remove = function(e) {
            if (e instanceof s && void 0 === e.extend) {
                if (!this.fields || this.fields[e.name] !== e) throw Error(e + " is not a member of " + this);
                return delete this.fields[e.name], e.parent = null, e.onRemove(this), _(this)
            }
            if (e instanceof o) {
                if (!this.oneofs || this.oneofs[e.name] !== e) throw Error(e + " is not a member of " + this);
                return delete this.oneofs[e.name], e.parent = null, e.onRemove(this), _(this)
            }
            return i.prototype.remove.call(this, e)
        }, y.prototype.isReservedId = function(e) {
            return i.isReservedId(this.reserved, e)
        }, y.prototype.isReservedName = function(e) {
            return i.isReservedName(this.reserved, e)
        }, y.prototype.create = function(e) {
            return new this.ctor(e)
        }, y.prototype.setup = function() {
            for (var e = this.fullName, t = [], r = 0; r < this.fieldsArray.length; ++r) t.push(this._fieldsArray[r].resolve().resolvedType);
            this.encode = f(this)({
                Writer: l,
                types: t,
                util: p
            }), this.decode = h(this)({
                Reader: u,
                types: t,
                util: p
            }), this.verify = m(this)({
                types: t,
                util: p
            }), this.fromObject = g.fromObject(this)({
                types: t,
                util: p
            }), this.toObject = g.toObject(this)({
                types: t,
                util: p
            });
            var i = v[e];
            if (i) {
                var n = Object.create(this);
                n.fromObject = this.fromObject, this.fromObject = i.fromObject.bind(n), n.toObject = this.toObject, this.toObject = i.toObject.bind(n)
            }
            return this
        }, y.prototype.encode = function(e, t) {
            return this.setup().encode(e, t)
        }, y.prototype.encodeDelimited = function(e, t) {
            return this.encode(e, t && t.len ? t.fork() : t).ldelim()
        }, y.prototype.decode = function(e, t) {
            return this.setup().decode(e, t)
        }, y.prototype.decodeDelimited = function(e) {
            return e instanceof u || (e = u.create(e)), this.decode(e, e.uint32())
        }, y.prototype.verify = function(e) {
            return this.setup().verify(e)
        }, y.prototype.fromObject = function(e) {
            return this.setup().fromObject(e)
        }, y.prototype.toObject = function(e, t) {
            return this.setup().toObject(e, t)
        }, y.d = function(e) {
            return function(t) {
                p.decorateType(t, e)
            }
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = s;
        var i = r(19);
        ((s.prototype = Object.create(i.prototype)).constructor = s).className = "MapField";
        var n = r(24),
            o = r(2);

        function s(e, t, r, n, s, a) {
            if (i.call(this, e, t, n, void 0, void 0, s, a), !o.isString(r)) throw TypeError("keyType must be a string");
            this.keyType = r, this.resolvedKeyType = null, this.map = !0
        }
        s.fromJSON = function(e, t) {
            return new s(e, t.id, t.keyType, t.type, t.options, t.comment)
        }, s.prototype.toJSON = function(e) {
            var t = !!e && Boolean(e.keepComments);
            return o.toObject(["keyType", this.keyType, "type", this.type, "id", this.id, "extend", this.extend, "options", this.options, "comment", t ? this.comment : void 0])
        }, s.prototype.resolve = function() {
            if (this.resolved) return this;
            if (void 0 === n.mapKey[this.keyType]) throw Error("invalid key type: " + this.keyType);
            return i.prototype.resolve.call(this)
        }, s.d = function(e, t, r) {
            return "function" == typeof r ? r = o.decorateType(r).name : r && "object" == typeof r && (r = o.decorateEnum(r).name),
                function(i, n) {
                    o.decorateType(i.constructor).add(new s(n, e, t, r))
                }
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = a;
        var i = r(34);
        ((a.prototype = Object.create(i.prototype)).constructor = a).className = "Service";
        var n = r(74),
            o = r(2),
            s = r(119);

        function a(e, t) {
            i.call(this, e, t), this.methods = {}, this._methodsArray = null
        }

        function d(e) {
            return e._methodsArray = null, e
        }
        a.fromJSON = function(e, t) {
            var r = new a(e, t.options);
            if (t.methods)
                for (var i = Object.keys(t.methods), o = 0; o < i.length; ++o) r.add(n.fromJSON(i[o], t.methods[i[o]]));
            return t.nested && r.addJSON(t.nested), r.comment = t.comment, r
        }, a.prototype.toJSON = function(e) {
            var t = i.prototype.toJSON.call(this, e),
                r = !!e && Boolean(e.keepComments);
            return o.toObject(["options", t && t.options || void 0, "methods", i.arrayToJSON(this.methodsArray, e) || {}, "nested", t && t.nested || void 0, "comment", r ? this.comment : void 0])
        }, Object.defineProperty(a.prototype, "methodsArray", {
            get: function() {
                return this._methodsArray || (this._methodsArray = o.toArray(this.methods))
            }
        }), a.prototype.get = function(e) {
            return this.methods[e] || i.prototype.get.call(this, e)
        }, a.prototype.resolveAll = function() {
            for (var e = this.methodsArray, t = 0; t < e.length; ++t) e[t].resolve();
            return i.prototype.resolve.call(this)
        }, a.prototype.add = function(e) {
            if (this.get(e.name)) throw Error("duplicate name '" + e.name + "' in " + this);
            return e instanceof n ? (this.methods[e.name] = e, e.parent = this, d(this)) : i.prototype.add.call(this, e)
        }, a.prototype.remove = function(e) {
            if (e instanceof n) {
                if (this.methods[e.name] !== e) throw Error(e + " is not a member of " + this);
                return delete this.methods[e.name], e.parent = null, d(this)
            }
            return i.prototype.remove.call(this, e)
        }, a.prototype.create = function(e, t, r) {
            for (var i, n = new s.Service(e, t, r), a = 0; a < this.methodsArray.length; ++a) {
                var d = o.lcFirst((i = this._methodsArray[a]).resolve().name).replace(/[^$\w_]/g, "");
                n[d] = o.codegen(["r", "c"], o.isReserved(d) ? d + "_" : d)("return this.rpcCall(m,q,s,r,c)")({
                    m: i,
                    q: i.resolvedRequestType.ctor,
                    s: i.resolvedResponseType.ctor
                })
            }
            return n
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = o;
        var i = r(23);
        ((o.prototype = Object.create(i.prototype)).constructor = o).className = "Method";
        var n = r(2);

        function o(e, t, r, o, s, a, d, c, u) {
            if (n.isObject(s) ? (d = s, s = a = void 0) : n.isObject(a) && (d = a, a = void 0), void 0 !== t && !n.isString(t)) throw TypeError("type must be a string");
            if (!n.isString(r)) throw TypeError("requestType must be a string");
            if (!n.isString(o)) throw TypeError("responseType must be a string");
            i.call(this, e, d), this.type = t || "rpc", this.requestType = r, this.requestStream = !!s || void 0, this.responseType = o, this.responseStream = !!a || void 0, this.resolvedRequestType = null, this.resolvedResponseType = null, this.comment = c, this.parsedOptions = u
        }
        o.fromJSON = function(e, t) {
            return new o(e, t.type, t.requestType, t.responseType, t.requestStream, t.responseStream, t.options, t.comment, t.parsedOptions)
        }, o.prototype.toJSON = function(e) {
            var t = !!e && Boolean(e.keepComments);
            return n.toObject(["type", "rpc" !== this.type && this.type || void 0, "requestType", this.requestType, "requestStream", this.requestStream, "responseType", this.responseType, "responseStream", this.responseStream, "options", this.options, "comment", t ? this.comment : void 0, "parsedOptions", this.parsedOptions])
        }, o.prototype.resolve = function() {
            return this.resolved ? this : (this.resolvedRequestType = this.parent.lookupType(this.requestType), this.resolvedResponseType = this.parent.lookupType(this.responseType), i.prototype.resolve.call(this))
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = n;
        var i = r(8);

        function n(e) {
            if (e)
                for (var t = Object.keys(e), r = 0; r < t.length; ++r) this[t[r]] = e[t[r]]
        }
        n.create = function(e) {
            return this.$type.create(e)
        }, n.encode = function(e, t) {
            return this.$type.encode(e, t)
        }, n.encodeDelimited = function(e, t) {
            return this.$type.encodeDelimited(e, t)
        }, n.decode = function(e) {
            return this.$type.decode(e)
        }, n.decodeDelimited = function(e) {
            return this.$type.decodeDelimited(e)
        }, n.verify = function(e) {
            return this.$type.verify(e)
        }, n.fromObject = function(e) {
            return this.$type.fromObject(e)
        }, n.toObject = function(e, t) {
            return this.$type.toObject(e, t)
        }, n.prototype.toJSON = function() {
            return this.$type.toObject(this, i.toJSONOptions)
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = l;
        var i = r(34);
        ((l.prototype = Object.create(i.prototype)).constructor = l).className = "Root";
        var n, o, s, a = r(19),
            d = r(6),
            c = r(35),
            u = r(2);

        function l(e) {
            i.call(this, "", e), this.deferred = [], this.files = []
        }

        function p() {}
        l.fromJSON = function(e, t) {
            return t || (t = new l), e.options && t.setOptions(e.options), t.addJSON(e.nested)
        }, l.prototype.resolvePath = u.path.resolve, l.prototype.fetch = u.fetch, l.prototype.load = function e(t, r, i) {
            "function" == typeof r && (i = r, r = void 0);
            var n = this;
            if (!i) return u.asPromise(e, n, t, r);
            var a = i === p;

            function d(e, t) {
                if (i) {
                    var r = i;
                    if (i = null, a) throw e;
                    r(e, t)
                }
            }

            function c(e) {
                var t = e.lastIndexOf("google/protobuf/");
                if (t > -1) {
                    var r = e.substring(t);
                    if (r in s) return r
                }
                return null
            }

            function l(e, t) {
                try {
                    if (u.isString(t) && "{" === t.charAt(0) && (t = JSON.parse(t)), u.isString(t)) {
                        o.filename = e;
                        var i, s = o(t, n, r),
                            l = 0;
                        if (s.imports)
                            for (; l < s.imports.length; ++l)(i = c(s.imports[l]) || n.resolvePath(e, s.imports[l])) && f(i);
                        if (s.weakImports)
                            for (l = 0; l < s.weakImports.length; ++l)(i = c(s.weakImports[l]) || n.resolvePath(e, s.weakImports[l])) && f(i, !0)
                    } else n.setOptions(t.options).addJSON(t.nested)
                } catch (e) {
                    d(e)
                }
                a || h || d(null, n)
            }

            function f(e, t) {
                if (!(n.files.indexOf(e) > -1))
                    if (n.files.push(e), e in s) a ? l(e, s[e]) : (++h, setTimeout((function() {
                        --h, l(e, s[e])
                    })));
                    else if (a) {
                    var r;
                    try {
                        r = u.fs.readFileSync(e).toString("utf8")
                    } catch (e) {
                        return void(t || d(e))
                    }
                    l(e, r)
                } else ++h, n.fetch(e, (function(r, o) {
                    --h, i && (r ? t ? h || d(null, n) : d(r) : l(e, o))
                }))
            }
            var h = 0;
            u.isString(t) && (t = [t]);
            for (var m, g = 0; g < t.length; ++g)(m = n.resolvePath("", t[g])) && f(m);
            if (a) return n;
            h || d(null, n)
        }, l.prototype.loadSync = function(e, t) {
            if (!u.isNode) throw Error("not supported");
            return this.load(e, t, p)
        }, l.prototype.resolveAll = function() {
            if (this.deferred.length) throw Error("unresolvable extensions: " + this.deferred.map((function(e) {
                return "'extend " + e.extend + "' in " + e.parent.fullName
            })).join(", "));
            return i.prototype.resolveAll.call(this)
        };
        var f = /^[A-Z]/;

        function h(e, t) {
            var r = t.parent.lookup(t.extend);
            if (r) {
                var i = new a(t.fullName, t.id, t.type, t.rule, void 0, t.options);
                return i.declaringField = t, t.extensionField = i, r.add(i), !0
            }
            return !1
        }
        l.prototype._handleAdd = function(e) {
            if (e instanceof a) void 0 === e.extend || e.extensionField || h(0, e) || this.deferred.push(e);
            else if (e instanceof d) f.test(e.name) && (e.parent[e.name] = e.values);
            else if (!(e instanceof c)) {
                if (e instanceof n)
                    for (var t = 0; t < this.deferred.length;) h(0, this.deferred[t]) ? this.deferred.splice(t, 1) : ++t;
                for (var r = 0; r < e.nestedArray.length; ++r) this._handleAdd(e._nestedArray[r]);
                f.test(e.name) && (e.parent[e.name] = e)
            }
        }, l.prototype._handleRemove = function(e) {
            if (e instanceof a) {
                if (void 0 !== e.extend)
                    if (e.extensionField) e.extensionField.parent.remove(e.extensionField), e.extensionField = null;
                    else {
                        var t = this.deferred.indexOf(e);
                        t > -1 && this.deferred.splice(t, 1)
                    }
            } else if (e instanceof d) f.test(e.name) && delete e.parent[e.name];
            else if (e instanceof i) {
                for (var r = 0; r < e.nestedArray.length; ++r) this._handleRemove(e._nestedArray[r]);
                f.test(e.name) && delete e.parent[e.name]
            }
        }, l._configure = function(e, t, r) {
            n = e, o = t, s = r
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.logController = void 0;
        const n = r(36),
            o = r(12),
            s = i(r(246)),
            a = r(68),
            d = r(247),
            c = r(127),
            u = a.randomId(),
            l = a.randomId();
        const p = new class {
            init() {
                window.logStorage = this.logStorage = new s.default("WEBRTC")
            }
            async getLogs() {
                const e = Date.now();
                try {
                    return await this.logStorage.get({
                        start: 0,
                        end: e
                    })
                } catch (e) {
                    console.log(e)
                }
            }
            async deleteLogs() {
                const e = Date.now();
                try {
                    return await this.logStorage.delete({
                        start: 0,
                        end: e
                    })
                } catch (e) {
                    console.log(e)
                }
            }
            async uploadLog(e, t, r) {
                let i = this,
                    n = e.data.fileName,
                    o = await this.getLogs(),
                    s = new Blob([JSON.stringify(o)], {
                        type: "text/plain"
                    }),
                    a = new File([s], "logdata", {
                        type: "text/plain"
                    });
                const c = d.Uploader({
                    protocol: "https"
                });
                c.addFile(a), c.upload({
                    bucketName: e.data.bucket,
                    objectName: e.data.fileName,
                    token: e.data.xNosToken
                }, (function(e) {
                    if (200 === e.xhr.status) {
                        let e = {
                            fileName: n,
                            cid: t,
                            uid: r
                        };
                        i.postFileName(e), console.log("upload log success")
                    }
                }))
            }
            postFileName(e) {
                let t = this,
                    r = {
                        event: {
                            logFile: {
                                cid: e.cid,
                                uid: e.uid,
                                filename: e.fileName
                            }
                        }
                    };
                n.ajax({
                    type: "post",
                    url: "https://statistic.live.126.net/statics/report/common/form",
                    data: r,
                    header: {
                        sdktype: "nrtc2"
                    }
                }).then(e => {
                    t.deleteLogs()
                }).catch(e => {
                    console.log(e)
                })
            }
            startUploadLog(e) {
                const t = (new Date).getTime();
                let r = e.uploadCid,
                    i = e.uploadUid,
                    s = {
                        appkey: e.uploadAppkey,
                        sdktype: "webrtc",
                        sdkver: o.SDK_VERSION,
                        platform: "web",
                        deviceInfo: u,
                        userkey: e.uploadUid,
                        ext: "log"
                    },
                    a = JSON.stringify(s) + l + t + "021cc0370d824a51b7c8180485c27b38";
                n.ajax({
                    type: "post",
                    url: "https://statistic.live.126.net/sdklog/getToken",
                    data: s,
                    header: {
                        Nonce: l,
                        CurTime: t,
                        Checksum: c(a)
                    }
                }).then(e => {
                    200 === e.code ? this.uploadLog(e, r, i) : console.log("error code is", e.code)
                }).catch(e => {
                    console.log("upload log error: ", e)
                })
            }
        };
        t.logController = p
    }, function(e, t) {
        var r = {
            utf8: {
                stringToBytes: function(e) {
                    return r.bin.stringToBytes(unescape(encodeURIComponent(e)))
                },
                bytesToString: function(e) {
                    return decodeURIComponent(escape(r.bin.bytesToString(e)))
                }
            },
            bin: {
                stringToBytes: function(e) {
                    for (var t = [], r = 0; r < e.length; r++) t.push(255 & e.charCodeAt(r));
                    return t
                },
                bytesToString: function(e) {
                    for (var t = [], r = 0; r < e.length; r++) t.push(String.fromCharCode(e[r]));
                    return t.join("")
                }
            }
        };
        e.exports = r
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Stream = void 0;
        const n = r(3),
            o = r(80),
            s = r(138),
            a = r(141),
            d = r(142),
            c = r(25),
            u = r(51),
            l = i(r(1)),
            p = i(r(0)),
            f = i(r(11));
        let h = 0;
        class m extends n.EventEmitter {
            constructor(e) {
                if (super(), this.videoProfile = {
                        frameRate: o.VIDEO_FRAME_RATE.CHAT_VIDEO_FRAME_RATE_NORMAL,
                        videoBW: 500,
                        resolution: o.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_480p
                    }, this.screenProfile = {
                        frameRate: o.VIDEO_FRAME_RATE.CHAT_VIDEO_FRAME_RATE_5,
                        videoBW: 1e3,
                        resolution: o.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_1080p
                    }, e.uid)
                    if ("string" == typeof e.uid || f.default.isBigNumber(e.uid)) e.client.adapterRef.logger.log("uid是string类型"), e.client.adapterRef.channelInfo.uidType = "string";
                    else {
                        if ("number" != typeof e.uid) throw e.client.adapterRef.logger.error("uid参数格式非法"), new l.default({
                            code: p.default.INVALID_PARAMETER,
                            message: "uid is invalid"
                        });
                        if (e.client.adapterRef.logger.log("uid是number类型"), e.client.adapterRef.channelInfo.uidType = "number", e.uid > Number.MAX_SAFE_INTEGER) throw new l.default({
                            code: p.default.INVALID_PARAMETER,
                            message: "uid is exceeds the scope of Number"
                        })
                    }
                else e.uid = "local_" + h++;
                this.isRemote = e.isRemote, this.inited = !1, this.videoView = null, this.screenView = null, this.renderMode = {
                    local: {
                        video: {},
                        screen: {}
                    },
                    remote: {
                        video: {},
                        screen: {}
                    }
                }, this.consumerId = null, this.producerId = null, this.inSwitchDevice = !1, this.audioPlay_ = !1, this.videoPlay_ = !1, this.pubStatus = {
                    audio: {
                        audio: !1,
                        producerId: "",
                        consumerId: "",
                        consumerStatus: "init",
                        stopconsumerStatus: "init",
                        mute: !1,
                        simulcastEnable: !1
                    },
                    video: {
                        video: !1,
                        producerId: "",
                        consumerId: "",
                        consumerStatus: "init",
                        stopconsumerStatus: "init",
                        mute: !1,
                        simulcastEnable: !1
                    },
                    screen: {
                        screen: !1,
                        producerId: "",
                        consumerId: "",
                        consumerStatus: "init",
                        stopconsumerStatus: "init",
                        mute: !1,
                        simulcastEnable: !1
                    }
                }, this.subConf = {
                    audio: !0,
                    video: !0,
                    screen: !0,
                    highOrLow: 1,
                    resolution: 0
                }, this.subStatus = {
                    audio: !1,
                    video: !1,
                    screen: !1
                }, this.muteStatus = {
                    audioSend: !1,
                    videoSend: !1,
                    screenSend: !1,
                    audioRecv: !1,
                    videoRecv: !1,
                    screenRecv: !1
                }, this.renderMode = {
                    local: {
                        video: {},
                        screen: {}
                    },
                    remote: {
                        video: {},
                        screen: {}
                    }
                }, this._reset(), this.streamID = e.uid, this.stringStreamID = this.streamID.toString(), this.audio = e.audio, this.audioProcessing = e.audioProcessing || null, this.microphoneId = e.microphoneId || "", this.cameraId = e.cameraId || "", this.video = e.video || !1, this.screen = e.screen || !1, this.screenAudio = e.screenAudio || !1, this.sourceId = e.sourceId || "", this.facingMode = e.facingMode || "", this.client = e.client, this.audioSource = e.audioSource || null, this.videoSource = e.videoSource || null, this.mediaHelper = new d.MediaHelper({
                    adapterRef: this.client.adapterRef,
                    uid: e.uid,
                    isLocal: !e.isRemote,
                    stream: this
                }), this._play = new s.Play({
                    sdkRef: this.client,
                    adapterRef: this.client.adapterRef,
                    uid: "string" === this.client.adapterRef.channelInfo.uidType ? this.stringStreamID : this.streamID
                }), this._record = new a.Record({
                    sdkRef: this.client,
                    adapterRef: this.client.adapterRef,
                    uid: "string" === this.client.adapterRef.channelInfo.uidType ? this.stringStreamID : this.streamID,
                    media: this.mediaHelper
                }), this.client._params && "live" === this.client._params.mode ? this.audioProfile = "music_standard" : this.audioProfile = "speech_low_quality", this.client.adapterRef.logger.log(`创建${this.isRemote?"远端":"本地"}Stream: %s`, JSON.stringify({
                    streamID: this.stringStreamID,
                    audio: e.audio,
                    video: e.video
                })), this.client.apiFrequencyControl({
                    name: "createStream",
                    code: 0,
                    param: JSON.stringify({
                        videoProfile: this.videoProfile,
                        audio: this.audio,
                        audioProfile: this.audioProfile,
                        video: this.video,
                        cameraId: this.cameraId,
                        microphoneId: this.microphoneId,
                        screen: this.screen,
                        screenProfile: this.screenProfile
                    }, null, " ")
                })
            }
            _reset() {
                this.streamID = "", this.stringStreamID = "", this.inited = !1, this.videoProfile = {
                    frameRate: o.VIDEO_FRAME_RATE.CHAT_VIDEO_FRAME_RATE_NORMAL,
                    videoBW: 500,
                    resolution: o.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_480p
                }, this.audioProfile = "speech_low_quality", this.screenProfile = {
                    frameRate: o.VIDEO_FRAME_RATE.CHAT_VIDEO_FRAME_RATE_5,
                    videoBW: 1e3,
                    resolution: o.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_1080p
                }, this.audio = !1, this.microphoneId = "", this.video = !1, this.cameraId = "", this.screen = !1, this.screenAudio = !1, this.sourceId = "", this.facingMode = "", this.videoView = null, this.screenView = null, this.renderMode = {
                    local: {
                        video: {},
                        screen: {}
                    },
                    remote: {
                        video: {},
                        screen: {}
                    }
                }, this.consumerId = null, this.producerId = null, this.inSwitchDevice = !1, this.pubStatus = {
                    audio: {
                        audio: !1,
                        producerId: "",
                        consumerId: "",
                        consumerStatus: "init",
                        stopconsumerStatus: "init",
                        mute: !1,
                        simulcastEnable: !1
                    },
                    video: {
                        video: !1,
                        producerId: "",
                        consumerId: "",
                        consumerStatus: "init",
                        stopconsumerStatus: "init",
                        mute: !1,
                        simulcastEnable: !1
                    },
                    screen: {
                        screen: !1,
                        producerId: "",
                        consumerId: "",
                        consumerStatus: "init",
                        stopconsumerStatus: "init",
                        mute: !1,
                        simulcastEnable: !1
                    }
                }, this.subConf = {
                    audio: !0,
                    video: !0,
                    screen: !0,
                    highOrLow: 1,
                    resolution: 0
                }, this.subStatus = {
                    audio: !1,
                    video: !1,
                    screen: !1
                }, this.muteStatus = {
                    audioSend: !1,
                    videoSend: !1,
                    screenSend: !1,
                    audioRecv: !1,
                    videoRecv: !1,
                    screenRecv: !1
                }, this.renderMode = {
                    local: {
                        video: {},
                        screen: {}
                    },
                    remote: {
                        video: {},
                        screen: {}
                    }
                }, this.mediaHelper && this.mediaHelper.destroy(), this._play && this._play.destroy(), this._play = null, this._record && this._record.destroy(), this._record = null
            }
            get Play() {
                return this._play
            }
            get Record() {
                return this._record
            }
            getId() {
                return "string" === this.client.adapterRef.channelInfo.uidType ? this.stringStreamID : this.streamID
            }
            async getStats() {
                let e = this.client.adapterRef && this.client.adapterRef._mediasoup && this.client.adapterRef._mediasoup._sendTransport && this.client.adapterRef._mediasoup._sendTransport._handler._pc,
                    t = this.client.adapterRef && this.client.adapterRef._mediasoup && this.client.adapterRef._mediasoup._recvTransport && this.client.adapterRef._mediasoup._recvTransport._handler._pc;
                if (this.client.adapterRef.logger.log("获取音视频连接数据, uid: " + this.stringStreamID), this.isRemote) {
                    if (t) {
                        const e = {
                            accessDelay: "0",
                            audioReceiveBytes: "0",
                            audioReceivePackets: "0",
                            audioReceivePacketsLost: "0",
                            endToEndDelay: "0",
                            videoReceiveBytes: "0",
                            videoReceiveDecodeFrameRate: "0",
                            videoReceiveFrameRate: "0",
                            videoReceivePackets: "0",
                            videoReceivePacketsLost: "0",
                            videoReceiveResolutionHeight: "0",
                            videoReceiveResolutionWidth: "0"
                        };
                        try {
                            (await t.getStats()).forEach(t => {
                                "inbound-rtp" === t.type ? "video" === t.mediaType ? (e.videoReceiveBytes = t.bytesReceived.toString(), e.videoReceivePackets = t.packetsReceived.toString(), e.videoReceivePacketsLost = t.packetsLost.toString(), e.videoReceiveFrameRate = t.framesPerSecond.toString(), e.videoReceiveDecodeFrameRate = t.framesPerSecond.toString()) : "audio" === t.mediaType && (e.audioReceiveBytes = t.bytesReceived.toString(), e.audioReceivePackets = t.packetsReceived.toString(), e.audioReceivePacketsLost = t.packetsLost.toString()) : "candidate-pair" === t.type ? ("number" == typeof t.currentRoundTripTime && (e.accessDelay = (1e3 * t.currentRoundTripTime).toString()), "number" == typeof t.totalRoundTripTime && (e.endToEndDelay = Math.round(100 * t.totalRoundTripTime).toString())) : "track" === t.type && void 0 !== t.frameWidth && (e.videoReceiveResolutionWidth = t.frameWidth.toString(), e.videoReceiveResolutionHeight = t.frameHeight.toString())
                            })
                        } catch (e) {
                            this.client.adapterRef.logger.error("failed to get remoteStats", e.name, e.message)
                        }
                        return e
                    }
                } else if (e) {
                    const t = {
                        accessDelay: "0",
                        audioSendBytes: "0",
                        audioSendPackets: "0",
                        audioSendPacketsLost: "0",
                        videoSendBytes: "0",
                        videoSendFrameRate: "0",
                        videoSendPackets: "0",
                        videoSendPacketsLost: "0",
                        videoSendResolutionHeight: "0",
                        videoSendResolutionWidth: "0"
                    };
                    try {
                        (await e.getStats()).forEach(e => {
                            "outbound-rtp" === e.type ? "video" === e.mediaType ? (t.videoSendBytes = e.bytesSent.toString(), t.videoSendPackets = e.packetsSent.toString(), t.videoSendFrameRate = e.framesPerSecond.toString()) : "audio" === e.mediaType && (t.audioSendBytes = e.bytesSent.toString(), t.audioSendPackets = e.packetsSent.toString()) : "candidate-pair" === e.type ? "number" == typeof e.currentRoundTripTime && (t.accessDelay = (1e3 * e.currentRoundTripTime).toString()) : "track" === e.type ? void 0 !== e.frameWidth && (t.videoSendResolutionWidth = e.frameWidth.toString(), t.videoSendResolutionHeight = e.frameHeight.toString()) : "remote-inbound-rtp" === e.type && ("audio" === e.kind ? t.audioSendPacketsLost = e.packetsLost.toString() : "video" === e.kind && (t.videoSendPacketsLost = e.packetsLost.toString()))
                        })
                    } catch (e) {
                        this.client.adapterRef.logger.error("failed to get localStats", e.name, e.message)
                    }
                    return t
                }
            }
            setSubscribeConfig(e) {
                if (this.client.adapterRef.logger.log("设置订阅规则：%o ", JSON.stringify(e, null, " ")), "boolean" == typeof e.audio && (this.subConf.audio = e.audio), "boolean" == typeof e.video && (this.subConf.video = e.video), "boolean" == typeof e.screen && (this.subConf.screen = e.screen), "number" == typeof e.highOrLow && (this.subConf.highOrLow = e.highOrLow), this.pubStatus.audio.audio && this.subConf.audio ? (this.subConf.audio = !0, this.audio = !0) : this.subConf.audio = !1, this.pubStatus.video.video && this.subConf.video ? (this.subConf.video = !0, this.video = !0) : this.subConf.video = !1, this.pubStatus.screen.screen && this.subConf.screen ? (this.subConf.screen = !0, this.screen = !0) : this.subConf.screen = !1, this.client.adapterRef.logger.log("订阅规则：%o ", JSON.stringify(this.subConf, null, " ")), this.client.apiFrequencyControl({
                        name: "setSubscribeConfig",
                        code: 0,
                        param: JSON.stringify(e, null, " ")
                    }), this.pubStatus.screen.screen) {
                    const e = {
                        uid: "string" === this.client.adapterRef.channelInfo.uidType ? this.stringStreamID : this.streamID,
                        subscribe: this.subConf.screen
                    };
                    this.client.apiFrequencyControl({
                        name: "subscribeRemoteSubStreamVideo",
                        code: 0,
                        param: JSON.stringify(e, null, " ")
                    })
                }
            }
            getAudioStream() {
                return this.mediaHelper ? (this.client.apiFrequencyControl({
                    name: "setExternalAudioRender",
                    code: 0,
                    param: JSON.stringify({}, null, " ")
                }), this.mediaHelper.audioStream) : null
            }
            async init() {
                this.client.adapterRef.logger.log("初始化音视频流对象"), this.inited = !0, this.client.adapterRef.localStream = this, this.client.adapterRef.channelInfo.sessionConfig.maxVideoQuality = o.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_1080p, this.videoProfile && (this.client.adapterRef.channelInfo.sessionConfig.videoQuality = this.videoProfile.resolution, this.client.adapterRef.channelInfo.sessionConfig.videoFrameRate = this.videoProfile.frameRate), this.client.apiFrequencyControl({
                    name: "init",
                    code: 0,
                    param: JSON.stringify({
                        videoProfile: this.videoProfile,
                        audio: this.audio,
                        audioProfile: this.audioProfile,
                        audioProcessing: this.audioProcessing,
                        video: this.video,
                        cameraId: this.cameraId,
                        microphoneId: this.microphoneId,
                        screen: this.screen,
                        sourceId: this.sourceId,
                        screenProfile: this.screenProfile
                    }, null, " ")
                });
                try {
                    if (!this.mediaHelper) throw new l.default({
                        code: p.default.NO_MEDIAHELPER,
                        message: "no media helper"
                    });
                    this.audio && await this.mediaHelper.getStream({
                        audio: this.audio,
                        audioDeviceId: this.microphoneId,
                        audioSource: this.audioSource
                    })
                } catch (e) {
                    this.client.adapterRef.logger.log("打开mic失败: ", e.name, e.message), this.audio = !1, e.message && e.message.indexOf("ermission") > -1 && e.message.indexOf("denied") > -1 ? this.client.emit("accessDenied", "audio") : e.message && e.message.indexOf("not found") > -1 ? this.client.emit("notFound", "audio") : this.client.emit("deviceError", "audio"), this.emit("device-error", {
                        type: "audio",
                        error: e
                    })
                }
                try {
                    if (!this.mediaHelper) throw new l.default({
                        code: p.default.NO_MEDIAHELPER,
                        message: "no media helper"
                    });
                    this.video && await this.mediaHelper.getStream({
                        video: this.video,
                        videoSource: this.videoSource,
                        videoDeviceId: this.cameraId
                    })
                } catch (e) {
                    this.client.adapterRef.logger.log("打开camera失败: ", e.name, e.message), this.video = !1, e.message && e.message.indexOf("ermission") > -1 && e.message.indexOf("denied") > -1 ? this.client.emit("accessDenied", "video") : e.message && e.message.indexOf("not found") > -1 ? this.client.emit("notFound", "video") : e.message && e.message.indexOf("not start video source") > -1 ? this.client.emit("beOccupied", "video") : this.client.emit("deviceError", "video"), this.emit("device-error", {
                        type: "video",
                        error: e
                    })
                }
                try {
                    if (!this.mediaHelper) throw new l.default({
                        code: p.default.NO_MEDIAHELPER,
                        message: "no media helper"
                    });
                    this.screen && await this.mediaHelper.getStream({
                        sourceId: this.sourceId,
                        facingMode: this.facingMode,
                        screen: this.screen,
                        screenAudio: this.screenAudio
                    })
                } catch (e) {
                    this.client.adapterRef.logger.log("打开屏幕共享失败: ", e.name, e.message), this.screen = !0, e.message && e.message.indexOf("ermission") > -1 && e.message.indexOf("denied") > -1 ? this.client.emit("accessDenied", "screen") : e.message && e.message.indexOf("not found") > -1 ? this.client.emit("notFound", "screen") : e.message && e.message.indexOf("not start video source") > -1 ? this.client.emit("beOccupied", "screen") : this.client.emit("deviceError", "screen"), this.emit("device-error", {
                        type: "screen",
                        error: e
                    })
                }
            }
            getAudioTrack() {
                return this.mediaHelper && (this.mediaHelper.micTrack || this.mediaHelper.audioSource) || null
            }
            getVideoTrack() {
                if (this.mediaHelper) return this.mediaHelper.cameraTrack || this.mediaHelper.screenTrack || this.mediaHelper.videoSource
            }
            async play(e, t = {}) {
                if (c.isExistOptions({
                        tag: "Stream.playOptions.audio",
                        value: t.audio
                    }).result || (t.audio = this.isRemote), !t.audio || this.isRemote || t.audioType || (t.audioType = "mixing"), c.isExistOptions({
                        tag: "Stream.playOptions.video",
                        value: t.video
                    }).result || (t.video = !0), c.isExistOptions({
                        tag: "Stream.playOptions.screen",
                        value: t.screen
                    }).result || (t.screen = !0), this.client.adapterRef.logger.log(`音视频播放, uid: ${this.stringStreamID}, playOptions: `, JSON.stringify(t)), this.isRemote) {
                    if (t.audio && this._play && this.mediaHelper && this.mediaHelper.audioStream) {
                        this.client.adapterRef.logger.log("开始播放远端音频: ", this.stringStreamID);
                        try {
                            await this._play.playAudioStream(this.mediaHelper.audioStream, t.muted), this.audioPlay_ = !0
                        } catch (e) {
                            this.audioPlay_ = !1, this.client.emit("NotAllowedError", e)
                        }
                    }
                } else t.audio && this._play && this.mediaHelper && this.mediaHelper.micStream && (this.client.adapterRef.logger.log("开始播放本地音频: ", this.stringStreamID, t.audioType), "voice" === t.audioType ? (this._play.playAudioStream(this.mediaHelper.micStream, t.muted), this.audioPlay_ = !0) : "music" === t.audioType ? (this._play.playAudioStream(this.mediaHelper.musicStream, t.muted), this.audioPlay_ = !0) : "mixing" === t.audioType && (this._play.playAudioStream(this.mediaHelper.audioStream, t.muted), this.audioPlay_ = !0));
                if ("string" == typeof e && (e = document.getElementById(e)), e) {
                    if (t.video && (this.videoView = e, this._play && this.mediaHelper && this.mediaHelper.videoStream && this.mediaHelper.videoStream.getVideoTracks().length)) {
                        this.client.adapterRef.logger.log("开始播放视频: ", this.stringStreamID);
                        try {
                            await this._play.playVideoStream(this.mediaHelper.videoStream, e), this.isRemote ? "width" in this.renderMode.remote.video && this._play.setVideoRender(this.renderMode.remote.video) : "width" in this.renderMode.local.video && this._play.setVideoRender(this.renderMode.local.video), this.videoPlay_ = !0
                        } catch (e) {
                            this.videoPlay_ = !1, this.client.emit("NotAllowedError", e)
                        }
                    }
                    t.screen && (this.screenView = e, this._play && this.mediaHelper && this.mediaHelper.screenStream && this.mediaHelper.screenStream.getVideoTracks().length && (this.client.adapterRef.logger.log("开始播放辅流: ", this.stringStreamID), await this._play.playScreenStream(this.mediaHelper.screenStream, e), this.isRemote ? "width" in this.renderMode.remote.screen && this._play.setScreenRender(this.renderMode.remote.screen) : "width" in this.renderMode.local.screen && this._play.setScreenRender(this.renderMode.local.screen)))
                }
                if (!this.isRemote && t.audio) {
                    const e = {
                        enable: !0
                    };
                    this.client.apiFrequencyControl({
                        name: "enableEarback",
                        code: 0,
                        param: JSON.stringify(e, null, " ")
                    })
                }
                this.client.apiFrequencyControl({
                    name: "play",
                    code: 0,
                    param: JSON.stringify({
                        playOptions: t,
                        audio: this.audio,
                        video: this.video,
                        screen: this.screen,
                        renderMode: this.renderMode
                    }, null, " ")
                })
            }
            async resume() {
                if (this._play) {
                    if (this.audioPlay_) {
                        if (!this.mediaHelper || !this.mediaHelper.audioStream) throw new l.default({
                            code: p.default.NOT_FOUND,
                            message: "no audioStream"
                        });
                        let e = {
                            type: "audio"
                        };
                        this._play.resume(this.mediaHelper.audioStream, e)
                    }
                    if (this.videoPlay_) {
                        if (!this.mediaHelper || !this.mediaHelper.videoStream || !this.videoView) throw new l.default({
                            code: p.default.NO_MEDIAHELPER,
                            message: "no media helper or videoStream or this.view"
                        });
                        let e = {
                            type: "video",
                            view: this.videoView
                        };
                        this._play.resume(this.mediaHelper.videoStream, e)
                    }
                }
            }
            setLocalRenderMode(e, t) {
                if (!(e && e.width - 0 && e.height - 0)) return this.client.adapterRef.logger.warn("setLocalRenderMode 参数错误"), this.client.apiFrequencyControl({
                    name: "setLocalRenderMode",
                    code: -1,
                    param: JSON.stringify(e, null, " ")
                }), "INVALID_ARGUMENTS";
                this.client.adapterRef.logger.log("设置本地视频播放窗口大小: ", JSON.stringify(e, null, " "), t), t && "video" !== t || (this._play && this._play.setVideoRender(e), this.renderMode.local.video = e), t && "screen" !== t || (this.renderMode.local.screen = e, this._play && this._play.setScreenRender(e)), this.client.apiFrequencyControl({
                    name: "setLocalRenderMode",
                    code: 0,
                    param: JSON.stringify(e, null, " ")
                })
            }
            setRemoteRenderMode(e, t) {
                e && e.width - 0 && e.height - 0 || (this.client.adapterRef.logger.warn("setRemoteRenderMode 参数错误"), this.client.apiFrequencyControl({
                    name: "setRemoteRenderMode",
                    code: -1,
                    param: JSON.stringify(e, null, " ")
                })), this.client && this._play && (this.client.adapterRef.logger.log("设对端视频播放窗口大小: ", JSON.stringify(e)), t && "video" !== t || (this._play && this._play.setVideoRender(e), this.renderMode.remote.video = e), t && "screen" !== t || (this.renderMode.remote.screen = e, this._play && this._play.setScreenRender(e)), this.client.apiFrequencyControl({
                    name: "setRemoteRenderMode",
                    code: 0,
                    param: JSON.stringify(e, null, " ")
                }))
            }
            stop(e) {
                this.client.adapterRef.logger.log("Stream.stop: 停止播放 %s %s。", this.stringStreamID, e || "音视频流"), this._play && ("audio" === e ? (this._play.stopPlayAudioStream(), this.audioPlay_ = !1) : "video" === e ? (this._play.stopPlayVideoStream(), this.videoPlay_ = !1) : "screen" === e ? this._play.stopPlayScreenStream() : (this._play.audioDom && (this._play.stopPlayAudioStream(), this.audioPlay_ = !1), this._play.videoDom && (this._play.stopPlayVideoStream(), this.videoPlay_ = !1), this._play.screenDom && this._play.stopPlayScreenStream()), this.client.apiFrequencyControl({
                    name: "stop",
                    code: 0,
                    param: JSON.stringify({
                        audio: this.audio,
                        video: this.video,
                        screen: this.screen,
                        renderMode: this.renderMode
                    }, null, " ")
                }))
            }
            async isPlaying(e) {
                let t = !1;
                if (this._play)
                    if ("audio" === e) t = await this._play.isPlayAudioStream();
                    else if ("video" === e) t = await this._play.isPlayVideoStream();
                else {
                    if ("screen" !== e) return this.client.adapterRef.logger.warn("isPlaying: unknown type"), Promise.reject(new l.default({
                        code: p.default.UNKNOWN_TYPE,
                        message: "unknown type"
                    }));
                    t = await this._play.isPlayScreenStream()
                } else;
                return this.client.adapterRef.logger.log(`检查${this.stringStreamID}的${e}播放状态: ${t}`), t
            }
            async open(e) {
                let {
                    type: t,
                    deviceId: r,
                    sourceId: i,
                    facingMode: n
                } = e;
                if (1 === this.client._roleInfo.userRole) {
                    const e = "观众不允许打开设备";
                    return this.client.adapterRef.logger.error(e), this.client.apiFrequencyControl({
                        name: "open",
                        code: -1,
                        param: JSON.stringify({
                            reason: e,
                            type: t
                        }, null, " ")
                    }), Promise.reject(new l.default({
                        code: p.default.INVALID_OPERATION,
                        message: "audience is not allowed to open"
                    }))
                }
                try {
                    switch (t) {
                        case "audio":
                            if (this.client.adapterRef.logger.log("开启mic设备"), this.mediaHelper.micTrack) return this.client.adapterRef.logger.warn("请先关闭麦克风"), this.client.apiFrequencyControl({
                                name: "open",
                                code: -1,
                                param: JSON.stringify({
                                    reason: "请先关闭麦克风",
                                    type: t
                                }, null, " ")
                            }), Promise.reject(new l.default({
                                code: p.default.INVALID_OPERATION,
                                message: "please close mic first"
                            }));
                            if (this.audio = !0, this.mediaHelper) {
                                this.mediaHelper.webAudio && (1 !== this.mediaHelper.webAudio.getGainMin() || this.mediaHelper.webAudio.mixAudioConf.state !== u.AuidoMixingState.UNSTART || this.mediaHelper.screenAudioTrack) && this.mediaHelper.enableAudioRouting();
                                const e = {
                                    audio: !0,
                                    audioDeviceId: r
                                };
                                await this.mediaHelper.getStream(e), this.client.adapterRef && "CONNECTED" === this.client.adapterRef.connectState.curState ? (this.client.adapterRef.logger.log("Stream.open:开始发布", e), await this.client.publish(this)) : this.client.adapterRef.logger.log("Stream.open:client不在频道中，无需发布。", e)
                            }
                            break;
                        case "video":
                        case "screen":
                            if (this.client.adapterRef.logger.log(`开启${"video"===t?"camera":"screen"}设备`), this[t]) return "video" === t ? (this.client.adapterRef.logger.warn("请先关闭摄像头"), this.client.apiFrequencyControl({
                                name: "open",
                                code: -1,
                                param: JSON.stringify({
                                    reason: "请先关闭摄像头",
                                    type: t
                                }, null, " ")
                            }), Promise.reject(new l.default({
                                code: p.default.INVALID_OPERATION,
                                message: "please close video first"
                            }))) : (this.client.adapterRef.logger.warn("请先关闭屏幕共享"), this.client.apiFrequencyControl({
                                name: "open",
                                code: -1,
                                param: JSON.stringify({
                                    reason: "请先关闭屏幕共享",
                                    type: t
                                }, null, " ")
                            }), Promise.reject(new l.default({
                                code: p.default.INVALID_OPERATION,
                                message: "please close screen-sharing first"
                            })));
                            if (e.screenAudio && this.mediaHelper.screenAudioTrack) return this.client.adapterRef.logger.warn("请先关闭屏幕共享音频"), this.client.apiFrequencyControl({
                                name: "open",
                                code: -1,
                                param: JSON.stringify({
                                    reason: "请先关闭屏幕共享音频",
                                    type: t
                                }, null, " ")
                            }), Promise.reject(new l.default({
                                code: p.default.INVALID_OPERATION,
                                message: "please close screenAudio first"
                            }));
                            this[t] = !0;
                            const o = {
                                videoDeviceId: r,
                                sourceId: i,
                                facingMode: n
                            };
                            o[t] = !0, "screen" === t && e.screenAudio && (o.screenAudio = !0, this.screenAudio = !0), await this.mediaHelper.getStream(o), this.client.adapterRef && "CONNECTED" === this.client.adapterRef.connectState.curState ? (this.client.adapterRef.logger.log("Stream.open:开始发布", o), await this.client.publish(this)) : this.client.adapterRef.logger.log("Stream.open:client不在频道中，无需发布。", o);
                            break;
                        default:
                            this.client.adapterRef.logger.error("非法参数")
                    }
                    this.client.apiFrequencyControl({
                        name: "open",
                        code: 0,
                        param: JSON.stringify({
                            type: t
                        }, null, " ")
                    })
                } catch (r) {
                    return ["audio", "video", "screen"].indexOf(t) > -1 && (this[t] = !1, "screen" === t && e.screenAudio && (this.screenAudio = !1)), this.client.adapterRef.logger.log(t + " 开启失败: ", r.name, r.message), this.client.apiFrequencyControl({
                        name: "open",
                        code: -1,
                        param: JSON.stringify({
                            reason: r.message,
                            type: t
                        }, null, " ")
                    }), r.message && r.message.indexOf("ermission") > -1 && r.message.indexOf("denied") > -1 ? (this.client.emit("accessDenied", t), Promise.reject(new l.default({
                        code: p.default.NOT_ALLOWED,
                        message: r.message
                    }))) : Promise.reject(r)
                }
            }
            async close(e) {
                let {
                    type: t
                } = e, r = null;
                switch (t) {
                    case "audio":
                        if (this.client.adapterRef.logger.log("关闭mic设备"), !this.audio) {
                            this.client.adapterRef.logger.log("没有开启过麦克风"), r = "NOT_OPEN_MIC_YET";
                            break
                        }
                        if (this.audio = !1, !this.mediaHelper) throw new l.default({
                            code: p.default.NO_MEDIAHELPER,
                            message: "no media helper"
                        });
                        this.mediaHelper.stopStream("audio"), this.client.adapterRef && this.client.adapterRef._mediasoup ? this.mediaHelper.micTrack || this.mediaHelper.screenAudioTrack ? this.client.adapterRef.logger.log("Stream.close:关闭音频，保留发布：", t) : (this.client.adapterRef.logger.log("Stream.close:停止发布音频"), await this.client.adapterRef._mediasoup.destroyProduce("audio")) : this.client.adapterRef.logger.log("Stream.close:未发布音频，无需停止发布");
                        break;
                    case "screenAudio":
                        if (this.client.adapterRef.logger.log("关闭屏幕共享音频"), !this.screenAudio) {
                            this.client.adapterRef.logger.log("没有开启过屏幕共享音频"), r = "NOT_OPEN_SCREENAUDIO_YET";
                            break
                        }
                        if (this.screenAudio = !1, !this.mediaHelper) throw new l.default({
                            code: p.default.NO_MEDIAHELPER,
                            message: "no media helper"
                        });
                        this.mediaHelper.stopStream("screenAudio"), this.client.adapterRef && this.client.adapterRef._mediasoup ? this.mediaHelper.micTrack || this.mediaHelper.screenAudioTrack ? this.client.adapterRef.logger.log("Stream.close:关闭音频，保留发布：", t) : (this.client.adapterRef.logger.log("Stream.close:停止发布音频"), await this.client.adapterRef._mediasoup.destroyProduce("audio")) : this.client.adapterRef.logger.log("Stream.close:未发布音频，无需停止发布");
                        break;
                    case "video":
                        if (this.client.adapterRef.logger.log("关闭camera设备"), !this.video) {
                            this.client.adapterRef.logger.log("没有开启过摄像头"), r = "NOT_OPEN_CAMERA_YET";
                            break
                        }
                        if (this.video = !1, !this.mediaHelper) throw new l.default({
                            code: p.default.NO_MEDIAHELPER,
                            message: "no media helper"
                        });
                        if (this.mediaHelper.stopStream("video"), !this._play) throw new l.default({
                            code: p.default.NO_PLAY,
                            message: "no play"
                        });
                        this._play.stopPlayVideoStream(), this.client.adapterRef._mediasoup ? (this.client.adapterRef.logger.log("Stream.close:停止发布视频"), await this.client.adapterRef._mediasoup.destroyProduce("video")) : this.client.adapterRef.logger.log("Stream.close:未发布视频，无需停止发布");
                        break;
                    case "screen":
                        if (this.client.adapterRef.logger.log("关闭屏幕共享"), !this.screen) {
                            this.client.adapterRef.logger.log("没有开启过屏幕共享"), r = "NOT_OPEN_SCREEN_YET";
                            break
                        }
                        if (this.screen = !1, !this.mediaHelper) throw new l.default({
                            code: p.default.NO_MEDIAHELPER,
                            message: "no media helper"
                        });
                        if (this.mediaHelper.stopStream("screen"), !this._play) throw new l.default({
                            code: p.default.NO_PLAY,
                            message: "no play"
                        });
                        this._play.stopPlayScreenStream(), this.client.adapterRef._mediasoup ? (this.client.adapterRef.logger.log("Stream.close:停止发布辅流"), await this.client.adapterRef._mediasoup.destroyProduce("screen")) : this.client.adapterRef.logger.log("Stream.close:未发布辅流，无需停止发布");
                        break;
                    default:
                        if (this.client.adapterRef.logger.log("不能识别type"), r = "INVALID_ARGUMENTS", !r) return void this.client.apiFrequencyControl({
                            name: "close",
                            code: 0,
                            param: JSON.stringify({
                                reason: r,
                                audio: this.audio,
                                video: this.video,
                                screen: this.screen
                            }, null, " ")
                        });
                        if (this.client.apiFrequencyControl({
                                name: "close",
                                code: -1,
                                param: JSON.stringify({
                                    reason: r,
                                    audio: this.audio,
                                    video: this.video,
                                    screen: this.screen
                                }, null, " ")
                            }), "NOT_OPEN_MIC_YET" === r) return Promise.reject(new l.default({
                            code: p.default.INVALID_OPERATION,
                            message: "mic is not open"
                        }));
                        if ("NOT_OPEN_CAMERA_YET" === r) return Promise.reject(new l.default({
                            code: p.default.INVALID_OPERATION,
                            message: "camera is not open"
                        }));
                        if ("NOT_OPEN_SCREEN_YET" === r) return Promise.reject(new l.default({
                            code: p.default.INVALID_OPERATION,
                            message: "screen-sharing si not open"
                        }));
                        if ("INVALID_ARGUMENTS" === r) return Promise.reject(new l.default({
                            code: p.default.INVALID_OPERATION,
                            message: "unknown type"
                        }))
                }
            }
            async unmuteAudio() {
                this.client.adapterRef.logger.log("启用音频轨道: ", this.stringStreamID);
                try {
                    if (this.isRemote) {
                        if (!this._play) throw new l.default({
                            code: p.default.NO_PLAY,
                            message: "no play"
                        });
                        if (!this.mediaHelper || !this.mediaHelper.audioStream) throw new l.default({
                            code: p.default.NOT_FOUND,
                            message: "no audioStream"
                        });
                        this.muteStatus.audioRecv = !1, this.mediaHelper && this.mediaHelper.micTrack && (this.mediaHelper.micTrack.enabled = !0), this._play.playAudioStream(this.mediaHelper.audioStream, !0)
                    } else {
                        if (!this.client.adapterRef._mediasoup) throw new l.default({
                            code: p.default.NO_MEDIASERVER,
                            message: "media server error 15"
                        });
                        await this.client.adapterRef._mediasoup.unmuteAudio();
                        const e = this.mediaHelper && this.mediaHelper.audioStream.getAudioTracks();
                        e && e.length && e.forEach(e => {
                            e.enabled = !0
                        }), this.mediaHelper.micTrack && (this.mediaHelper.micTrack.enabled = !0), this.mediaHelper.webAudio && this.mediaHelper.webAudio.gainFilter && (this.mediaHelper.webAudio.gainFilter.gain.value = 1), this.muteStatus.audioSend = !1
                    }
                    this.client.apiFrequencyControl({
                        name: "unmuteAudio",
                        code: 0,
                        param: JSON.stringify({
                            streamID: this.stringStreamID
                        }, null, " ")
                    })
                } catch (e) {
                    this.client.adapterRef.logger.error("API调用失败：Stream:unmuteAudio", e.name, e.message, e), this.client.apiFrequencyControl({
                        name: "unmuteAudio",
                        code: -1,
                        param: JSON.stringify({
                            streamID: this.stringStreamID,
                            reason: e
                        }, null, " ")
                    })
                }
            }
            async muteAudio() {
                this.client.adapterRef.logger.log("禁用音频轨道: ", this.stringStreamID);
                try {
                    if (this.isRemote) {
                        if (!this._play) throw new l.default({
                            code: p.default.NO_PLAY,
                            message: "no play"
                        });
                        this.muteStatus.audioRecv = !0, this.mediaHelper && this.mediaHelper.micTrack && (this.mediaHelper.micTrack.enabled = !1), this._play.stopPlayAudioStream()
                    } else {
                        if (!this.client.adapterRef._mediasoup) throw new l.default({
                            code: p.default.NO_MEDIASERVER,
                            message: "media server error 16"
                        });
                        await this.client.adapterRef._mediasoup.muteAudio();
                        const e = this.mediaHelper && this.mediaHelper.audioStream.getAudioTracks();
                        e && e.length && e.forEach(e => {
                            e.enabled = !1
                        }), this.mediaHelper.micTrack && (this.mediaHelper.micTrack.enabled = !1), this.mediaHelper.webAudio && this.mediaHelper.webAudio.gainFilter && (this.mediaHelper.webAudio.gainFilter.gain.value = 0), this.muteStatus.audioSend = !0
                    }
                    this.client.apiFrequencyControl({
                        name: "muteAudio",
                        code: 0,
                        param: JSON.stringify({
                            streamID: this.stringStreamID
                        }, null, " ")
                    })
                } catch (e) {
                    this.client.adapterRef.logger.error("API调用失败：Stream:muteAudio", e.name, e.message, e), this.client.apiFrequencyControl({
                        name: "muteAudio",
                        code: -1,
                        param: JSON.stringify({
                            streamID: this.stringStreamID,
                            reason: e
                        }, null, " ")
                    })
                }
            }
            hasAudio() {
                return !!(this.audio && this.mediaHelper && this.mediaHelper.micStream)
            }
            getAudioLevel() {
                if (!this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.getGain()
            }
            setAudioProfile(e) {
                this.client.adapterRef.logger.log("设置音频属性: ", e), this.audioProfile = e, this.client.apiFrequencyControl({
                    name: "setAudioProfile",
                    code: 0,
                    param: JSON.stringify({
                        profile: e
                    }, null, "")
                })
            }
            setAudioVolume(e = 100) {
                let t = null;
                if (Number.isInteger(e) ? e < 0 ? e = 0 : e > 100 ? e = 255 : e *= 2.55 : (this.client.adapterRef.logger.log("volume 为 0 - 100 的整数"), t = "INVALID_ARGUMENTS"), this.client.adapterRef.logger.log(`调节${this.stringStreamID}的音量大小: ${e}`), this.audio) {
                    if (!this._play) throw new l.default({
                        code: p.default.NO_PLAY,
                        message: "no play"
                    });
                    this._play.setPlayVolume(e)
                } else this.client.adapterRef.logger.log("没有音频流，请检查是否有发布过音频"), t = "INVALID_OPERATION";
                if (t) return this.client.apiFrequencyControl({
                    name: "setAudioVolume",
                    code: -1,
                    param: JSON.stringify({
                        volume: e,
                        reason: t
                    }, null, " ")
                }), t;
                this.client.apiFrequencyControl({
                    name: "setAudioVolume",
                    code: 0,
                    param: JSON.stringify({
                        volume: e
                    }, null, " ")
                })
            }
            setCaptureVolume(e, t) {
                let r = null;
                if (Number.isInteger(e) ? e < 0 ? e = 0 : e > 100 && (e = 100) : (this.client.adapterRef.logger.log("volume 为 0 - 100 的整数"), r = "INVALID_ARGUMENTS"), this.client.adapterRef.logger.log(`调节${this.stringStreamID}的音量大小: ${e}`), this.mediaHelper.audioRoutingEnabled || this.mediaHelper.enableAudioRouting(), this.mediaHelper.setGain(e / 100, t), r) return this.client.apiFrequencyControl({
                    name: "setCaptureVolume",
                    code: -1,
                    param: JSON.stringify({
                        volume: e,
                        audioType: t,
                        reason: r
                    }, null, " ")
                }), r;
                this.client.apiFrequencyControl({
                    name: "setCaptureVolume",
                    code: 0,
                    param: JSON.stringify({
                        audioType: t,
                        volume: e
                    }, null, " ")
                })
            }
            async setAudioOutput(e, t) {
                if (this._play) {
                    try {
                        await this._play.setAudioOutput(e)
                    } catch (e) {
                        throw t && setTimeout(() => {
                            t(e)
                        }, 0), this.client.adapterRef.logger.error("设置输出设备失败", e.name, e.message), e
                    }
                    t && setTimeout(t, 0)
                }
            }
            async switchDevice(e, t) {
                this.client.adapterRef.logger.log(`切换媒体输入设备: ${e}, deviceId: ${t}`);
                let r = {};
                if (this.inSwitchDevice) return this.client.adapterRef.logger.log("正在切换中，重复"), Promise.reject(new l.default({
                    code: p.default.INVALID_OPERATION,
                    message: "switching..."
                }));
                if (this.inSwitchDevice = !0, "audio" === e) {
                    if (t === this.microphoneId) return this.client.adapterRef.logger.log("切换相同的麦克风设备，不处理"), this.inSwitchDevice = !1, Promise.resolve();
                    if (!this.hasAudio()) return this.client.adapterRef.logger.log("当前没有开启音频输入设备，无法切换"), this.inSwitchDevice = !1, Promise.reject(new l.default({
                        code: p.default.INVALID_OPERATION,
                        message: "no audio input device"
                    }));
                    if (this.audioSource) return this.client.adapterRef.logger.log("自定义音频输入不支持，无法切换"), this.inSwitchDevice = !1, Promise.reject(new l.default({
                        code: p.default.INVALID_OPERATION,
                        message: "cannot switch user-defined audio input"
                    }));
                    if (!this.mediaHelper) throw new l.default({
                        code: p.default.NO_MEDIAHELPER,
                        message: "no media helper"
                    });
                    this.mediaHelper.audioConstraint && this.mediaHelper.audioConstraint.audio ? this.mediaHelper.audioConstraint.audio.deviceId = {
                        exact: t
                    } : this.mediaHelper.audioConstraint ? (this.mediaHelper.audioConstraint.audio = {}, this.mediaHelper.audioConstraint.audio.deviceId = {
                        exact: t
                    }) : this.mediaHelper.audioConstraint = {
                        audio: {
                            deviceId: {
                                exact: t
                            }
                        }
                    }, r = this.mediaHelper.audioConstraint, this.microphoneId = t
                } else {
                    if ("video" !== e) return this.client.adapterRef.logger.log("unknown type"), this.inSwitchDevice = !1, Promise.reject(new l.default({
                        code: p.default.INVALID_OPERATION,
                        message: "unknown type"
                    }));
                    if (t === this.cameraId) return this.client.adapterRef.logger.log("切换相同的摄像头设备，不处理"), this.inSwitchDevice = !1, Promise.resolve();
                    if (!this.hasVideo()) return this.client.adapterRef.logger.log("当前没有开启视频输入设备，无法切换"), this.inSwitchDevice = !1, this.client.apiFrequencyControl({
                        name: "switchCamera",
                        code: -1,
                        param: JSON.stringify({
                            reason: "INVALID_OPERATION"
                        }, null, " ")
                    }), Promise.reject(new l.default({
                        code: p.default.INVALID_OPERATION,
                        message: "no video input device"
                    }));
                    if (this.videoSource) return this.client.adapterRef.logger.log("自定义视频输入不支持，无法切换"), this.inSwitchDevice = !1, this.client.apiFrequencyControl({
                        name: "switchCamera",
                        code: -1,
                        param: JSON.stringify({
                            reason: "INVALID_OPERATION"
                        }, null, " ")
                    }), Promise.reject(new l.default({
                        code: p.default.INVALID_OPERATION,
                        message: "cannot switch user-defined video input"
                    }));
                    if (!this.mediaHelper) throw new l.default({
                        code: p.default.NO_MEDIAHELPER,
                        message: "no media helper"
                    });
                    this.mediaHelper.videoConstraint && this.mediaHelper.videoConstraint.video && (this.mediaHelper.videoConstraint.video.deviceId = {
                        exact: t
                    }, r = this.mediaHelper.videoConstraint), this.cameraId = t
                }
                try {
                    await this.mediaHelper.getSecondStream(r), this.inSwitchDevice = !1, "video" === e && this.client.apiFrequencyControl({
                        name: "switchCamera",
                        code: 0,
                        param: JSON.stringify({}, null, " ")
                    })
                } catch (t) {
                    return this.client.adapterRef.logger.error("API调用失败：Stream:switchDevice", t.name, t.message, t), this.inSwitchDevice = !1, "video" === e && this.client.apiFrequencyControl({
                        name: "switchCamera",
                        code: -1,
                        param: JSON.stringify({
                            reason: t.message || t.name
                        }, null, " ")
                    }), Promise.reject(t)
                }
            }
            async unmuteVideo() {
                this.client.adapterRef.logger.log(`启用 ${this.stringStreamID} 的视频轨道`);
                try {
                    if (this.isRemote) {
                        if (!this._play) throw new l.default({
                            code: p.default.NO_PLAY,
                            message: "no play"
                        });
                        if (!this.mediaHelper || !this.mediaHelper.videoStream || !this.videoView) throw new l.default({
                            code: p.default.NO_MEDIAHELPER,
                            message: "no media helper or videoStream or this.view"
                        });
                        this.muteStatus.videoRecv = !1, this.mediaHelper && this.mediaHelper.cameraTrack && (this.mediaHelper.cameraTrack.enabled = !0), await this._play.playVideoStream(this.mediaHelper.videoStream, this.videoView), "width" in this.renderMode.remote.video && this._play.setVideoRender(this.renderMode.remote.video)
                    } else {
                        if (!this.client.adapterRef._mediasoup) throw new l.default({
                            code: p.default.NO_MEDIASERVER,
                            message: "media server error 17"
                        });
                        this.client.adapterRef._mediasoup.unmuteVideo(), this.muteStatus.videoSend = !1
                    }
                    this.client.apiFrequencyControl({
                        name: "unmuteVideo",
                        code: 0,
                        param: JSON.stringify({
                            streamID: this.stringStreamID
                        }, null, " ")
                    })
                } catch (e) {
                    this.client.adapterRef.logger.error("API调用失败：Stream:unmuteVideo", e.name, e.message, e), this.client.apiFrequencyControl({
                        name: "unmuteVideo",
                        code: -1,
                        param: JSON.stringify({
                            streamID: this.stringStreamID,
                            reason: e
                        }, null, " ")
                    })
                }
            }
            async muteVideo() {
                this.client.adapterRef.logger.log(`禁用 ${this.stringStreamID} 的视频轨道`);
                try {
                    if (this.isRemote) {
                        if (!this._play) throw new l.default({
                            code: p.default.NO_PLAY,
                            message: "no play"
                        });
                        this.muteStatus.videoRecv = !0, this.mediaHelper && this.mediaHelper.cameraTrack && (this.mediaHelper.cameraTrack.enabled = !1), this._play.stopPlayVideoStream()
                    } else {
                        if (!this.client.adapterRef._mediasoup) throw new l.default({
                            code: p.default.NO_MEDIASERVER,
                            message: "media server error 18"
                        });
                        await this.client.adapterRef._mediasoup.muteVideo(), this.muteStatus.videoSend = !0
                    }
                    this.client.apiFrequencyControl({
                        name: "muteVideo",
                        code: 0,
                        param: JSON.stringify({
                            streamID: this.stringStreamID
                        }, null, " ")
                    })
                } catch (e) {
                    this.client.adapterRef.logger.error("API调用失败：Stream:muteVideo", e.name, e.message, e), this.client.apiFrequencyControl({
                        name: "muteVideo",
                        code: -1,
                        param: JSON.stringify({
                            streamID: this.stringStreamID,
                            reason: e
                        }, null, " ")
                    })
                }
            }
            async unmuteScreen() {
                this.client.adapterRef.logger.log(`启用 ${this.stringStreamID} 的视频轨道`);
                try {
                    if (this.isRemote) {
                        if (!this._play) throw new l.default({
                            code: p.default.NO_PLAY,
                            message: "no play"
                        });
                        if (!this.mediaHelper || !this.mediaHelper.screenStream || !this.screenView) throw new l.default({
                            code: p.default.NO_MEDIAHELPER,
                            message: "no media helper or screenStream or this.view"
                        });
                        this.muteStatus.screenRecv = !1, this.mediaHelper && this.mediaHelper.screenTrack && (this.mediaHelper.screenTrack.enabled = !0), await this._play.playScreenStream(this.mediaHelper.screenStream, this.screenView), "width" in this.renderMode.remote.screen && this._play.setScreenRender(this.renderMode.remote.screen)
                    } else {
                        if (!this.client.adapterRef._mediasoup) throw new l.default({
                            code: p.default.NO_MEDIASERVER,
                            message: "media server error 19"
                        });
                        this.client.adapterRef._mediasoup.unmuteScreen(), this.muteStatus.screenSend = !1
                    }
                    this.client.apiFrequencyControl({
                        name: "unmuteScreen",
                        code: 0,
                        param: JSON.stringify({
                            streamID: this.stringStreamID
                        }, null, " ")
                    })
                } catch (e) {
                    this.client.adapterRef.logger.error("API调用失败：Stream:unmuteScreen", e.name, e.message, e), this.client.apiFrequencyControl({
                        name: "unmuteScreen",
                        code: -1,
                        param: JSON.stringify({
                            streamID: this.stringStreamID,
                            reason: e
                        }, null, " ")
                    })
                }
            }
            async muteScreen() {
                this.client.adapterRef.logger.log(`禁用 ${this.stringStreamID} 的视频轨道`);
                try {
                    if (this.isRemote) {
                        if (!this._play) throw new l.default({
                            code: p.default.NO_PLAY,
                            message: "no play"
                        });
                        this.mediaHelper && this.mediaHelper.screenTrack && (this.mediaHelper.screenTrack.enabled = !1), this._play.stopPlayScreenStream(), this.muteStatus.screenRecv = !0
                    } else {
                        if (!this.client.adapterRef._mediasoup) throw new l.default({
                            code: p.default.NO_MEDIASERVER,
                            message: "media server error 20"
                        });
                        await this.client.adapterRef._mediasoup.muteScreen(), this.muteStatus.screenSend = !0
                    }
                    this.client.apiFrequencyControl({
                        name: "muteScreen",
                        code: 0,
                        param: JSON.stringify({
                            streamID: this.stringStreamID
                        }, null, " ")
                    })
                } catch (e) {
                    this.client.adapterRef.logger.error("API调用失败：Stream:muteScreen", e, ...arguments), this.client.apiFrequencyControl({
                        name: "muteScreen",
                        code: -1,
                        param: JSON.stringify({
                            streamID: this.stringStreamID,
                            reason: e
                        }, null, " ")
                    })
                }
            }
            hasVideo() {
                return this.client.adapterRef.logger.log("获取视频 flag"), !!(this.video && this.mediaHelper && this.mediaHelper.videoStream)
            }
            setVideoProfile(e) {
                this.client.adapterRef.logger.log("设置视频属性: ", JSON.stringify(e, null, " ")), Object.assign(this.videoProfile, e), this.client.adapterRef.channelInfo.sessionConfig.maxVideoQuality = o.VIDEO_QUALITY.CHAT_VIDEO_QUALITY_1080P, this.client.adapterRef.channelInfo.sessionConfig.videoQuality = this.videoProfile.resolution, this.client.adapterRef.channelInfo.sessionConfig.videoFrameRate = this.videoProfile.frameRate, this.client.apiFrequencyControl({
                    name: "setVideoProfile",
                    code: 0,
                    param: JSON.stringify(e, null, " ")
                })
            }
            setVideoEncoderConfiguration() {
                this.client.adapterRef.logger.log("自定义视频编码配置")
            }
            setBeautyEffectOptions() {
                this.client.adapterRef.logger.log("设置美颜效果选项")
            }
            hasScreen() {
                return !!(this.screen && this.mediaHelper && this.mediaHelper.screenStream)
            }
            setScreenProfile(e) {
                this.client.adapterRef.logger.log("设置屏幕共享中的屏幕属性: ", e), Object.assign(this.screenProfile, e), this.client.adapterRef.channelInfo.sessionConfig.screenQuality = e, this.client.apiFrequencyControl({
                    name: "setScreenProfile",
                    code: 0,
                    param: JSON.stringify(e, null, 2)
                })
            }
            adjustResolution(e) {
                if ("RTCRtpSender" in window && "setParameters" in window.RTCRtpSender.prototype) {
                    const t = this.client.adapterRef._mediasoup && this.client.adapterRef._mediasoup._sendTransport && this.client.adapterRef._mediasoup._sendTransport.handler._pc;
                    if (t) {
                        let r, i;
                        if ("video" === e ? (r = t.videoSender, i = this.getVideoBW()) : "screen" === e && (r = t.screenSender, i = this.getScreenBW()), !i) return;
                        if (!r) throw new l.default({
                            code: p.default.UNKNOWN_TYPE,
                            message: "`Unknown media type ${mediaTypeShort}`"
                        });
                        const n = r.getParameters();
                        if (!n) return void this.client.adapterRef.logger.error("No Parameter");
                        n.encodings && n.encodings.length ? n.encodings[0].maxBitrate = i : this.client.adapterRef.logger.warn("Stream.adjustResolution: 无encodings选项", n), r.setParameters(n).then(() => {}).catch(e => {
                            this.client.adapterRef.logger.error("设置video 码率失败: ", e)
                        })
                    }
                }
            }
            getVideoBW() {
                if (!this.videoProfile) throw new l.default({
                    code: p.default.NOT_FOUND,
                    message: "no this.videoProfile"
                });
                return this.videoProfile.resolution == o.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_180p ? 3e5 : this.videoProfile.resolution == o.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_480p ? 8e5 : this.videoProfile.resolution == o.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_720p ? 12e5 : this.videoProfile.resolution == o.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_1080p ? 15e5 : 0
            }
            getScreenBW() {
                if (!this.screenProfile) throw new l.default({
                    code: p.default.NOT_FOUND,
                    message: "no this.screenProfile"
                });
                return this.screenProfile.resolution == o.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_180p ? 3e5 : this.screenProfile.resolution == o.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_480p ? 8e5 : this.screenProfile.resolution == o.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_720p ? 12e5 : this.screenProfile.resolution == o.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_1080p ? 15e5 : 0
            }
            async takeSnapshot(e) {
                if (!this.video && !this.screen) return this.client.adapterRef.logger.log(`没有视频流，请检查是否有 ${this.inited?"发布":"订阅"} 过视频`), this.client.apiFrequencyControl({
                    name: "takeSnapshot",
                    code: -1,
                    param: JSON.stringify({
                        streamID: this.stringStreamID,
                        reason: `没有视频流，请检查是否有 ${this.inited?"发布":"订阅"} 过视频`
                    }, null, " ")
                }), "INVALID_OPERATION";
                if (!this._play) throw new l.default({
                    code: p.default.NO_PLAY,
                    message: "no play"
                });
                await this._play.takeSnapshot(e, this.streamID), this.client.apiFrequencyControl({
                    name: "takeSnapshot",
                    code: 0,
                    param: JSON.stringify(e, null, " ")
                })
            }
            async startMediaRecording(e) {
                const t = [];
                if (this.isRemote) {
                    if (!this.mediaHelper) throw new l.default({
                        code: p.default.NO_MEDIAHELPER,
                        message: "no media helper"
                    });
                    switch (e.type) {
                        case "screen":
                            this.mediaHelper.screenStream && t.push(this.mediaHelper.screenStream), this.mediaHelper.audioStream && t.push(this.mediaHelper.audioStream);
                            break;
                        case "camera":
                        case "video":
                            this.mediaHelper.videoStream && t.push(this.mediaHelper.videoStream), this.mediaHelper.audioStream && t.push(this.mediaHelper.audioStream);
                            break;
                        case "audio":
                            this.mediaHelper.audioStream && t.push(this.mediaHelper.audioStream)
                    }
                } else {
                    if (!this.mediaHelper) throw new l.default({
                        code: p.default.NO_MEDIAHELPER,
                        message: "no media helper"
                    });
                    switch (e.type) {
                        case "screen":
                            this.mediaHelper.screenStream && t.push(this.mediaHelper.screenStream), this.mediaHelper.audioStream && t.push(this.mediaHelper.audioStream);
                            break;
                        case "camera":
                        case "video":
                            this.mediaHelper.videoStream && t.push(this.mediaHelper.videoStream), this.mediaHelper.audioStream && t.push(this.mediaHelper.audioStream);
                            break;
                        case "audio":
                            if (t.push(this.mediaHelper.audioStream), this.client.adapterRef.remoteStreamMap)
                                for (var r in this.client.adapterRef.remoteStreamMap) {
                                    const e = this.client.adapterRef.remoteStreamMap[r];
                                    e.mediaHelper && e.mediaHelper.audioStream && t.push(e.mediaHelper.audioStream)
                                }
                    }
                }
                if (0 !== t.length) {
                    if (!this._record || !this.streamID || !t) throw new l.default({
                        code: p.default.INVALID_PARAMETER,
                        message: "startMediaRecording: invalid parameter"
                    });
                    return this._record && this._record.start({
                        uid: "string" === this.client.adapterRef.channelInfo.uidType ? this.stringStreamID : this.streamID,
                        type: e.type,
                        reset: e.reset,
                        stream: t
                    })
                }
                this.client.adapterRef.logger.log("没有没发现要录制的媒体流")
            }
            stopMediaRecording(e) {
                if (!this._record) throw new l.default({
                    code: p.default.NO_RECORD,
                    message: "no record"
                });
                return this._record.stop({})
            }
            playMediaRecording(e) {
                if (!this._record) throw new l.default({
                    code: p.default.NO_RECORD,
                    message: "no record"
                });
                return this._record.play(e.view)
            }
            listMediaRecording() {
                let e = [];
                if (!this._record) throw new l.default({
                    code: p.default.NO_RECORD,
                    message: "no record"
                });
                const t = this._record.getRecordStatus();
                return "init" !== t.status && e.push(t), e
            }
            cleanMediaRecording(e) {
                if (!this._record) throw new l.default({
                    code: p.default.NO_RECORD,
                    message: "no record"
                });
                return this._record.clean()
            }
            downloadMediaRecording(e) {
                if (!this._record) throw new l.default({
                    code: p.default.NO_RECORD,
                    message: "no record"
                });
                return this._record.download()
            }
            startAudioMixing(e) {
                if (this.client.adapterRef.logger.log("开始伴音"), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.startAudioMixing(e)
            }
            stopAudioMixing() {
                if (this.client.adapterRef.logger.log("停止伴音"), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.stopAudioMixing()
            }
            pauseAudioMixing() {
                if (this.client.adapterRef.logger.log("暂停伴音"), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.pauseAudioMixing()
            }
            resumeAudioMixing() {
                if (this.client.adapterRef.logger.log("恢复伴音"), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.resumeAudioMixing()
            }
            adjustAudioMixingVolume(e) {
                if (this.client.adapterRef.logger.log("调节伴音音量: %s", e), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.setAudioMixingVolume(e)
            }
            getAudioMixingDuration() {
                if (this.client.adapterRef.logger.log("获取伴音总时长"), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.getAudioMixingTotalTime()
            }
            getAudioMixingCurrentPosition() {
                if (!this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.getAudioMixingPlayedTime()
            }
            setAudioMixingPosition(e) {
                if (this.client.adapterRef.logger.log("设置伴音音频文件的播放位置: %s", e), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.setAudioMixingPlayTime(e)
            }
            async playEffect(e) {
                if (this.client.adapterRef.logger.log("开始播放音效: ", JSON.stringify(e, null, " ")), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.playEffect(e)
            }
            async stopEffect(e) {
                if (this.client.adapterRef.logger.log("停止播放音效: ", e), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.stopEffect(e)
            }
            async pauseEffect(e) {
                if (this.client.adapterRef.logger.log("暂停播放音效：", e), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.pauseEffect(e)
            }
            async resumeEffect(e) {
                if (this.client.adapterRef.logger.log("恢复播放音效文件: ", e), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.resumeEffect(e)
            }
            async setVolumeOfEffect(e, t) {
                if (this.client.adapterRef.logger.log(`调节 ${e} 音效文件音量为: ${t}`), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.setVolumeOfEffect(e, t)
            }
            async preloadEffect(e, t) {
                if (this.client.adapterRef.logger.log(`预加载 ${e} 音效文件地址: ${t}`), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.preloadEffect(e, t)
            }
            async unloadEffect(e) {
                if (this.client.adapterRef.logger.log("释放指定音效文件 " + e), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.unloadEffect(e)
            }
            getEffectsVolume() {
                if (this.client.adapterRef.logger.log("获取所有音效文件播放音量"), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.getEffectsVolume()
            }
            setEffectsVolume(e) {
                if (this.client.adapterRef.logger.log("设置所有音效文件播放音量: %s", e), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.setEffectsVolume(e)
            }
            async stopAllEffects() {
                if (this.client.adapterRef.logger.log("停止播放所有音效文件"), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.stopAllEffects()
            }
            async pauseAllEffects() {
                if (this.client.adapterRef.logger.log("暂停播放所有音效文件"), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.pauseAllEffects()
            }
            async resumeAllEffects() {
                if (this.client.adapterRef.logger.log("恢复播放所有音效文件"), !this.mediaHelper) throw new l.default({
                    code: p.default.NO_MEDIAHELPER,
                    message: "no media helper"
                });
                return this.mediaHelper.resumeAllEffects()
            }
            setCanvasWatermarkConfigs(e) {
                if (this._play && this._play._watermarkControl) {
                    let t = null;
                    if (e.mediaType && "video" !== e.mediaType ? "screen" === e.mediaType && this._play._watermarkControlScreen && (t = this._play._watermarkControlScreen) : this._play._watermarkControl && (t = this._play._watermarkControl), !t) return void this.client.adapterRef.logger.error("setCanvasWatermarkConfigs：播放器未初始化", e.mediaType);
                    const r = {
                        TEXT: 10,
                        TIMESTAMP: 1,
                        IMAGE: 4
                    };
                    if (e.textWatermarks && e.textWatermarks.length > r.TEXT) throw this.client.adapterRef.logger.error(`目前的文字水印数量：${e.textWatermarks.length}。允许的数量：${r.TEXT}`), new l.default({
                        code: p.default.INVALID_PARAMETER,
                        message: "watermark exceeds limit"
                    });
                    if (e.imageWatermarks && e.imageWatermarks.length > r.IMAGE) throw this.client.adapterRef.logger.error(`目前的图片水印数量：${e.imageWatermarks.length}。允许的数量：${r.IMAGE}`), new l.default({
                        code: p.default.INVALID_PARAMETER,
                        message: "watermark exceeds limit"
                    });
                    t.checkWatermarkParams(e), t.updateWatermarks(e)
                } else this.client.adapterRef.logger.error("setCanvasWatermarkConfigs：播放器未初始化")
            }
            destroy() {
                this.client && (this.client.apiFrequencyControl({
                    name: "destroy",
                    code: 0,
                    param: JSON.stringify({
                        videoProfile: this.videoProfile,
                        audio: this.audio,
                        audioProcessing: this.audioProcessing,
                        audioProfile: this.audioProfile,
                        video: this.video,
                        cameraId: this.cameraId,
                        microphoneId: this.microphoneId,
                        screen: this.screen,
                        screenProfile: this.screenProfile
                    }, null, " ")
                }), this.client.adapterRef.logger.log("销毁 Stream 实例: ", this.stringStreamID), this.stop(), this._reset())
            }
        }
        t.Stream = m
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.validateVideoQuality = t.NERTC_VIDEO_QUALITY_REV = t.VIDEO_QUALITY_REV = t.NERTC_VIDEO_QUALITY = t.VIDEO_FRAME_RATE = t.VIDEO_QUALITY = void 0, t.VIDEO_QUALITY = {
            CHAT_VIDEO_QUALITY_NORMAL: 0,
            CHAT_VIDEO_QUALITY_LOW: 1,
            CHAT_VIDEO_QUALITY_MEDIUM: 2,
            CHAT_VIDEO_QUALITY_HIGH: 3,
            CHAT_VIDEO_QUALITY_480P: 4,
            CHAT_VIDEO_QUALITY_540P: 5,
            CHAT_VIDEO_QUALITY_720P: 6,
            CHAT_VIDEO_QUALITY_1080P: 7
        }, t.VIDEO_FRAME_RATE = {
            CHAT_VIDEO_FRAME_RATE_NORMAL: 0,
            CHAT_VIDEO_FRAME_RATE_5: 1,
            CHAT_VIDEO_FRAME_RATE_10: 2,
            CHAT_VIDEO_FRAME_RATE_15: 3,
            CHAT_VIDEO_FRAME_RATE_20: 4,
            CHAT_VIDEO_FRAME_RATE_25: 5
        }, t.NERTC_VIDEO_QUALITY = {
            VIDEO_QUALITY_180p: 2,
            VIDEO_QUALITY_480p: 4,
            VIDEO_QUALITY_720p: 8,
            VIDEO_QUALITY_1080p: 16
        }, t.VIDEO_QUALITY_REV = {
            [t.VIDEO_QUALITY.CHAT_VIDEO_QUALITY_NORMAL]: "640x480",
            [t.VIDEO_QUALITY.CHAT_VIDEO_QUALITY_LOW]: "176x144",
            [t.VIDEO_QUALITY.CHAT_VIDEO_QUALITY_MEDIUM]: "352x288",
            [t.VIDEO_QUALITY.CHAT_VIDEO_QUALITY_HIGH]: "480x360",
            [t.VIDEO_QUALITY.CHAT_VIDEO_QUALITY_480P]: "640x480",
            [t.VIDEO_QUALITY.CHAT_VIDEO_QUALITY_540P]: "960x540",
            [t.VIDEO_QUALITY.CHAT_VIDEO_QUALITY_720P]: "1280x720",
            [t.VIDEO_QUALITY.CHAT_VIDEO_QUALITY_1080P]: "1920x1080"
        }, t.NERTC_VIDEO_QUALITY_REV = {
            [t.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_180p]: "320x180",
            [t.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_480p]: "640x480",
            [t.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_720p]: "1280x720",
            [t.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_1080p]: "1920x1080"
        }, t.validateVideoQuality = function(e) {
            const r = Object.keys(t.VIDEO_QUALITY);
            let i = !1;
            for (let n in r) t.VIDEO_QUALITY[n] === e && (i = !0);
            return i
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Device = void 0;
        const n = i(r(1)),
            o = i(r(0));
        let s = [];
        const a = {
            async getDevices(e) {
                if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) throw new n.default({
                    code: o.default.NOT_SUPPORT,
                    message: "mediaDevices is not support in your browser",
                    url: "https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices"
                });
                let t = {
                        video: [],
                        audioIn: [],
                        audioOut: []
                    },
                    r = await navigator.mediaDevices.enumerateDevices(),
                    i = null;
                if (e.requestPerm) {
                    const t = r.find(t => e.audioinput && "audioinput" == t.kind && !t.label),
                        n = r.find(t => e.videoinput && "videoinput" == t.kind && !t.label);
                    if (t || n) try {
                        i = await navigator.mediaDevices.getUserMedia({
                            audio: t,
                            video: n
                        })
                    } catch (e) {
                        console.error(e)
                    }
                }
                return r = await navigator.mediaDevices.enumerateDevices(), s = r, r.forEach((function(r) {
                    e.videoinput && "videoinput" === r.kind ? t.video.push({
                        deviceId: r.deviceId,
                        label: r.label ? r.label : "camera " + (t.video.length + 1)
                    }) : e.audioinput && "audioinput" === r.kind ? t.audioIn.push({
                        deviceId: r.deviceId,
                        label: r.label ? r.label : "microphone " + (t.audioIn.length + 1)
                    }) : e.audiooutput && "audiooutput" === r.kind && t.audioOut.push({
                        deviceId: r.deviceId,
                        label: r.label ? r.label : "speaker " + (t.audioOut.length + 1)
                    }), i && i.getTracks().forEach(e => {
                        e.stop()
                    })
                })), t
            },
            async getCameras(e) {
                const t = await this.getDevices({
                    videoinput: !0,
                    requestPerm: e
                });
                return t ? t.video : []
            },
            async getMicrophones(e) {
                const t = await this.getDevices({
                    audioinput: !0,
                    requestPerm: e
                });
                return t ? t.audioIn : []
            },
            async getSpeakers(e) {
                const t = await this.getDevices({
                    audioinput: !0,
                    audiooutput: !0,
                    requestPerm: e
                });
                return t ? t.audioOut : []
            },
            clean() {}
        };
        t.Device = a
    }, function(e, t) {}, function(e, t, r) {
        "use strict";
        var i = r(156)(!0);
        r(84)(String, "String", (function(e) {
            this._t = String(e), this._i = 0
        }), (function() {
            var e, t = this._t,
                r = this._i;
            return r >= t.length ? {
                value: void 0,
                done: !0
            } : (e = i(t, r), this._i += e.length, {
                value: e,
                done: !1
            })
        }))
    }, function(e, t, r) {
        "use strict";
        var i = r(28),
            n = r(29),
            o = r(86),
            s = r(14),
            a = r(30),
            d = r(157),
            c = r(44),
            u = r(162),
            l = r(5)("iterator"),
            p = !([].keys && "next" in [].keys()),
            f = function() {
                return this
            };
        e.exports = function(e, t, r, h, m, g, v) {
            d(r, t, h);
            var y, _, S, b = function(e) {
                    if (!p && e in E) return E[e];
                    switch (e) {
                        case "keys":
                        case "values":
                            return function() {
                                return new r(this, e)
                            }
                    }
                    return function() {
                        return new r(this, e)
                    }
                },
                R = t + " Iterator",
                w = "values" == m,
                T = !1,
                E = e.prototype,
                A = E[l] || E["@@iterator"] || m && E[m],
                O = A || b(m),
                I = m ? w ? b("entries") : O : void 0,
                x = "Array" == t && E.entries || A;
            if (x && (S = u(x.call(new e))) !== Object.prototype && S.next && (c(S, R, !0), i || "function" == typeof S[l] || s(S, l, f)), w && A && "values" !== A.name && (T = !0, O = function() {
                    return A.call(this)
                }), i && !v || !p && !T && E[l] || s(E, l, O), a[t] = O, a[R] = f, m)
                if (y = {
                        values: w ? O : b("values"),
                        keys: g ? O : b("keys"),
                        entries: I
                    }, v)
                    for (_ in y) _ in E || o(E, _, y[_]);
                else n(n.P + n.F * (p || T), t, y);
            return y
        }
    }, function(e, t, r) {
        e.exports = !r(17) && !r(41)((function() {
            return 7 != Object.defineProperty(r(57)("div"), "a", {
                get: function() {
                    return 7
                }
            }).a
        }))
    }, function(e, t, r) {
        e.exports = r(14)
    }, function(e, t, r) {
        var i = r(9),
            n = r(158),
            o = r(62),
            s = r(60)("IE_PROTO"),
            a = function() {},
            d = function() {
                var e, t = r(57)("iframe"),
                    i = o.length;
                for (t.style.display = "none", r(90).appendChild(t), t.src = "javascript:", (e = t.contentWindow.document).open(), e.write("<script>document.F=Object<\/script>"), e.close(), d = e.F; i--;) delete d.prototype[o[i]];
                return d()
            };
        e.exports = Object.create || function(e, t) {
            var r;
            return null !== e ? (a.prototype = i(e), r = new a, a.prototype = null, r[s] = e) : r = d(), void 0 === t ? r : n(r, t)
        }
    }, function(e, t, r) {
        var i = r(18),
            n = r(21),
            o = r(160)(!1),
            s = r(60)("IE_PROTO");
        e.exports = function(e, t) {
            var r, a = n(e),
                d = 0,
                c = [];
            for (r in a) r != s && i(a, r) && c.push(r);
            for (; t.length > d;) i(a, r = t[d++]) && (~o(c, r) || c.push(r));
            return c
        }
    }, function(e, t, r) {
        var i = r(55),
            n = Math.min;
        e.exports = function(e) {
            return e > 0 ? n(i(e), 9007199254740991) : 0
        }
    }, function(e, t, r) {
        var i = r(4).document;
        e.exports = i && i.documentElement
    }, function(e, t, r) {
        var i = r(56);
        e.exports = function(e) {
            return Object(i(e))
        }
    }, function(e, t, r) {
        r(163);
        for (var i = r(4), n = r(14), o = r(30), s = r(5)("toStringTag"), a = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","), d = 0; d < a.length; d++) {
            var c = a[d],
                u = i[c],
                l = u && u.prototype;
            l && !l[s] && n(l, s, c), o[c] = o.Array
        }
    }, function(e, t, r) {
        var i = r(31),
            n = r(5)("toStringTag"),
            o = "Arguments" == i(function() {
                return arguments
            }());
        e.exports = function(e) {
            var t, r, s;
            return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof(r = function(e, t) {
                try {
                    return e[t]
                } catch (e) {}
            }(t = Object(e), n)) ? r : o ? i(t) : "Object" == (s = i(t)) && "function" == typeof t.callee ? "Arguments" : s
        }
    }, function(e, t, r) {
        var i = r(9),
            n = r(40),
            o = r(5)("species");
        e.exports = function(e, t) {
            var r, s = i(e).constructor;
            return void 0 === s || null == (r = i(s)[o]) ? t : n(r)
        }
    }, function(e, t, r) {
        var i, n, o, s = r(39),
            a = r(172),
            d = r(90),
            c = r(57),
            u = r(4),
            l = u.process,
            p = u.setImmediate,
            f = u.clearImmediate,
            h = u.MessageChannel,
            m = u.Dispatch,
            g = 0,
            v = {},
            y = function() {
                var e = +this;
                if (v.hasOwnProperty(e)) {
                    var t = v[e];
                    delete v[e], t()
                }
            },
            _ = function(e) {
                y.call(e.data)
            };
        p && f || (p = function(e) {
            for (var t = [], r = 1; arguments.length > r;) t.push(arguments[r++]);
            return v[++g] = function() {
                a("function" == typeof e ? e : Function(e), t)
            }, i(g), g
        }, f = function(e) {
            delete v[e]
        }, "process" == r(31)(l) ? i = function(e) {
            l.nextTick(s(y, e, 1))
        } : m && m.now ? i = function(e) {
            m.now(s(y, e, 1))
        } : h ? (o = (n = new h).port2, n.port1.onmessage = _, i = s(o.postMessage, o, 1)) : u.addEventListener && "function" == typeof postMessage && !u.importScripts ? (i = function(e) {
            u.postMessage(e + "", "*")
        }, u.addEventListener("message", _, !1)) : i = "onreadystatechange" in c("script") ? function(e) {
            d.appendChild(c("script")).onreadystatechange = function() {
                d.removeChild(this), y.call(e)
            }
        } : function(e) {
            setTimeout(s(y, e, 1), 0)
        }), e.exports = {
            set: p,
            clear: f
        }
    }, function(e, t) {
        e.exports = function(e) {
            try {
                return {
                    e: !1,
                    v: e()
                }
            } catch (e) {
                return {
                    e: !0,
                    v: e
                }
            }
        }
    }, function(e, t, r) {
        var i = r(9),
            n = r(16),
            o = r(63);
        e.exports = function(e, t) {
            if (i(e), n(t) && t.constructor === e) return t;
            var r = o.f(e);
            return (0, r.resolve)(t), r.promise
        }
    }, function(e, t, r) {
        (function(i) {
            t.formatArgs = function(t) {
                if (t[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + t[0] + (this.useColors ? "%c " : " ") + "+" + e.exports.humanize(this.diff), !this.useColors) return;
                const r = "color: " + this.color;
                t.splice(1, 0, r, "color: inherit");
                let i = 0,
                    n = 0;
                t[0].replace(/%[a-zA-Z%]/g, e => {
                    "%%" !== e && (i++, "%c" === e && (n = i))
                }), t.splice(n, 0, r)
            }, t.save = function(e) {
                try {
                    e ? t.storage.setItem("debug", e) : t.storage.removeItem("debug")
                } catch (e) {}
            }, t.load = function() {
                let e;
                try {
                    e = t.storage.getItem("debug")
                } catch (e) {}!e && void 0 !== i && "env" in i && (e = i.env.DEBUG);
                return e
            }, t.useColors = function() {
                if ("undefined" != typeof window && window.process && ("renderer" === window.process.type || window.process.__nwjs)) return !0;
                if ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) return !1;
                return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)
            }, t.storage = function() {
                try {
                    return localStorage
                } catch (e) {}
            }(), t.destroy = (() => {
                let e = !1;
                return () => {
                    e || (e = !0, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))
                }
            })(), t.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], t.log = console.debug || console.log || (() => {}), e.exports = r(180)(t);
            const {
                formatters: n
            } = e.exports;
            n.j = function(e) {
                try {
                    return JSON.stringify(e)
                } catch (e) {
                    return "[UnexpectedJSONParseError]: " + e.message
                }
            }
        }).call(this, r(99))
    }, function(e, t) {
        var r, i, n = e.exports = {};

        function o() {
            throw new Error("setTimeout has not been defined")
        }

        function s() {
            throw new Error("clearTimeout has not been defined")
        }

        function a(e) {
            if (r === setTimeout) return setTimeout(e, 0);
            if ((r === o || !r) && setTimeout) return r = setTimeout, setTimeout(e, 0);
            try {
                return r(e, 0)
            } catch (t) {
                try {
                    return r.call(null, e, 0)
                } catch (t) {
                    return r.call(this, e, 0)
                }
            }
        }! function() {
            try {
                r = "function" == typeof setTimeout ? setTimeout : o
            } catch (e) {
                r = o
            }
            try {
                i = "function" == typeof clearTimeout ? clearTimeout : s
            } catch (e) {
                i = s
            }
        }();
        var d, c = [],
            u = !1,
            l = -1;

        function p() {
            u && d && (u = !1, d.length ? c = d.concat(c) : l = -1, c.length && f())
        }

        function f() {
            if (!u) {
                var e = a(p);
                u = !0;
                for (var t = c.length; t;) {
                    for (d = c, c = []; ++l < t;) d && d[l].run();
                    l = -1, t = c.length
                }
                d = null, u = !1,
                    function(e) {
                        if (i === clearTimeout) return clearTimeout(e);
                        if ((i === s || !i) && clearTimeout) return i = clearTimeout, clearTimeout(e);
                        try {
                            i(e)
                        } catch (t) {
                            try {
                                return i.call(null, e)
                            } catch (t) {
                                return i.call(this, e)
                            }
                        }
                    }(e)
            }
        }

        function h(e, t) {
            this.fun = e, this.array = t
        }

        function m() {}
        n.nextTick = function(e) {
            var t = new Array(arguments.length - 1);
            if (arguments.length > 1)
                for (var r = 1; r < arguments.length; r++) t[r - 1] = arguments[r];
            c.push(new h(e, t)), 1 !== c.length || u || a(f)
        }, h.prototype.run = function() {
            this.fun.apply(null, this.array)
        }, n.title = "browser", n.browser = !0, n.env = {}, n.argv = [], n.version = "", n.versions = {}, n.on = m, n.addListener = m, n.once = m, n.off = m, n.removeListener = m, n.removeAllListeners = m, n.emit = m, n.prependListener = m, n.prependOnceListener = m, n.listeners = function(e) {
            return []
        }, n.binding = function(e) {
            throw new Error("process.binding is not supported")
        }, n.cwd = function() {
            return "/"
        }, n.chdir = function(e) {
            throw new Error("process.chdir is not supported")
        }, n.umask = function() {
            return 0
        }
    }, function(e, t, r) {
        "use strict";
        var i = o(r(53)),
            n = o(r(54));

        function o(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }
        var s = r(101).EventEmitter,
            a = r(45);
        e.exports = class extends s {
            constructor(e) {
                super(), this.setMaxListeners(1 / 0), this._logger = e || new a("EnhancedEventEmitter")
            }
            safeEmit(e) {
                try {
                    for (var t = arguments.length, r = Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) r[i - 1] = arguments[i];
                    this.emit.apply(this, [e].concat(r))
                } catch (t) {
                    this._logger.error("safeEmit() | event listener threw an error [event:%s]:%o", e, t)
                }
            }
            safeEmitAsPromise(e) {
                for (var t = this, r = arguments.length, o = Array(r > 1 ? r - 1 : 0), s = 1; s < r; s++) o[s - 1] = arguments[s];
                return (0, n.default)(i.default.mark((function r() {
                    return i.default.wrap((function(r) {
                        for (;;) switch (r.prev = r.next) {
                            case 0:
                                return r.abrupt("return", new Promise((function(r, i) {
                                    t.safeEmit.apply(t, [e].concat(o, [r, i]))
                                })));
                            case 1:
                            case "end":
                                return r.stop()
                        }
                    }), r, t)
                })))()
            }
        }
    }, function(e, t, r) {
        "use strict";
        var i, n = "object" == typeof Reflect ? Reflect : null,
            o = n && "function" == typeof n.apply ? n.apply : function(e, t, r) {
                return Function.prototype.apply.call(e, t, r)
            };
        i = n && "function" == typeof n.ownKeys ? n.ownKeys : Object.getOwnPropertySymbols ? function(e) {
            return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))
        } : function(e) {
            return Object.getOwnPropertyNames(e)
        };
        var s = Number.isNaN || function(e) {
            return e != e
        };

        function a() {
            a.init.call(this)
        }
        e.exports = a, e.exports.once = function(e, t) {
            return new Promise((function(r, i) {
                function n(r) {
                    e.removeListener(t, o), i(r)
                }

                function o() {
                    "function" == typeof e.removeListener && e.removeListener("error", n), r([].slice.call(arguments))
                }
                v(e, t, o, {
                    once: !0
                }), "error" !== t && function(e, t, r) {
                    "function" == typeof e.on && v(e, "error", t, r)
                }(e, n, {
                    once: !0
                })
            }))
        }, a.EventEmitter = a, a.prototype._events = void 0, a.prototype._eventsCount = 0, a.prototype._maxListeners = void 0;
        var d = 10;

        function c(e) {
            if ("function" != typeof e) throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e)
        }

        function u(e) {
            return void 0 === e._maxListeners ? a.defaultMaxListeners : e._maxListeners
        }

        function l(e, t, r, i) {
            var n, o, s, a;
            if (c(r), void 0 === (o = e._events) ? (o = e._events = Object.create(null), e._eventsCount = 0) : (void 0 !== o.newListener && (e.emit("newListener", t, r.listener ? r.listener : r), o = e._events), s = o[t]), void 0 === s) s = o[t] = r, ++e._eventsCount;
            else if ("function" == typeof s ? s = o[t] = i ? [r, s] : [s, r] : i ? s.unshift(r) : s.push(r), (n = u(e)) > 0 && s.length > n && !s.warned) {
                s.warned = !0;
                var d = new Error("Possible EventEmitter memory leak detected. " + s.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                d.name = "MaxListenersExceededWarning", d.emitter = e, d.type = t, d.count = s.length, a = d, console && console.warn && console.warn(a)
            }
            return e
        }

        function p() {
            if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
        }

        function f(e, t, r) {
            var i = {
                    fired: !1,
                    wrapFn: void 0,
                    target: e,
                    type: t,
                    listener: r
                },
                n = p.bind(i);
            return n.listener = r, i.wrapFn = n, n
        }

        function h(e, t, r) {
            var i = e._events;
            if (void 0 === i) return [];
            var n = i[t];
            return void 0 === n ? [] : "function" == typeof n ? r ? [n.listener || n] : [n] : r ? function(e) {
                for (var t = new Array(e.length), r = 0; r < t.length; ++r) t[r] = e[r].listener || e[r];
                return t
            }(n) : g(n, n.length)
        }

        function m(e) {
            var t = this._events;
            if (void 0 !== t) {
                var r = t[e];
                if ("function" == typeof r) return 1;
                if (void 0 !== r) return r.length
            }
            return 0
        }

        function g(e, t) {
            for (var r = new Array(t), i = 0; i < t; ++i) r[i] = e[i];
            return r
        }

        function v(e, t, r, i) {
            if ("function" == typeof e.on) i.once ? e.once(t, r) : e.on(t, r);
            else {
                if ("function" != typeof e.addEventListener) throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e);
                e.addEventListener(t, (function n(o) {
                    i.once && e.removeEventListener(t, n), r(o)
                }))
            }
        }
        Object.defineProperty(a, "defaultMaxListeners", {
            enumerable: !0,
            get: function() {
                return d
            },
            set: function(e) {
                if ("number" != typeof e || e < 0 || s(e)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
                d = e
            }
        }), a.init = function() {
            void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0
        }, a.prototype.setMaxListeners = function(e) {
            if ("number" != typeof e || e < 0 || s(e)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
            return this._maxListeners = e, this
        }, a.prototype.getMaxListeners = function() {
            return u(this)
        }, a.prototype.emit = function(e) {
            for (var t = [], r = 1; r < arguments.length; r++) t.push(arguments[r]);
            var i = "error" === e,
                n = this._events;
            if (void 0 !== n) i = i && void 0 === n.error;
            else if (!i) return !1;
            if (i) {
                var s;
                if (t.length > 0 && (s = t[0]), s instanceof Error) throw s;
                var a = new Error("Unhandled error." + (s ? " (" + s.message + ")" : ""));
                throw a.context = s, a
            }
            var d = n[e];
            if (void 0 === d) return !1;
            if ("function" == typeof d) o(d, this, t);
            else {
                var c = d.length,
                    u = g(d, c);
                for (r = 0; r < c; ++r) o(u[r], this, t)
            }
            return !0
        }, a.prototype.addListener = function(e, t) {
            return l(this, e, t, !1)
        }, a.prototype.on = a.prototype.addListener, a.prototype.prependListener = function(e, t) {
            return l(this, e, t, !0)
        }, a.prototype.once = function(e, t) {
            return c(t), this.on(e, f(this, e, t)), this
        }, a.prototype.prependOnceListener = function(e, t) {
            return c(t), this.prependListener(e, f(this, e, t)), this
        }, a.prototype.removeListener = function(e, t) {
            var r, i, n, o, s;
            if (c(t), void 0 === (i = this._events)) return this;
            if (void 0 === (r = i[e])) return this;
            if (r === t || r.listener === t) 0 == --this._eventsCount ? this._events = Object.create(null) : (delete i[e], i.removeListener && this.emit("removeListener", e, r.listener || t));
            else if ("function" != typeof r) {
                for (n = -1, o = r.length - 1; o >= 0; o--)
                    if (r[o] === t || r[o].listener === t) {
                        s = r[o].listener, n = o;
                        break
                    } if (n < 0) return this;
                0 === n ? r.shift() : function(e, t) {
                    for (; t + 1 < e.length; t++) e[t] = e[t + 1];
                    e.pop()
                }(r, n), 1 === r.length && (i[e] = r[0]), void 0 !== i.removeListener && this.emit("removeListener", e, s || t)
            }
            return this
        }, a.prototype.off = a.prototype.removeListener, a.prototype.removeAllListeners = function(e) {
            var t, r, i;
            if (void 0 === (r = this._events)) return this;
            if (void 0 === r.removeListener) return 0 === arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== r[e] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete r[e]), this;
            if (0 === arguments.length) {
                var n, o = Object.keys(r);
                for (i = 0; i < o.length; ++i) "removeListener" !== (n = o[i]) && this.removeAllListeners(n);
                return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this
            }
            if ("function" == typeof(t = r[e])) this.removeListener(e, t);
            else if (void 0 !== t)
                for (i = t.length - 1; i >= 0; i--) this.removeListener(e, t[i]);
            return this
        }, a.prototype.listeners = function(e) {
            return h(this, e, !0)
        }, a.prototype.rawListeners = function(e) {
            return h(this, e, !1)
        }, a.listenerCount = function(e, t) {
            return "function" == typeof e.listenerCount ? e.listenerCount(t) : m.call(e, t)
        }, a.prototype.listenerCount = m, a.prototype.eventNames = function() {
            return this._eventsCount > 0 ? i(this._events) : []
        }
    }, function(e, t, r) {
        "use strict";
        var i, n = r(182),
            o = (i = n) && i.__esModule ? i : {
                default: i
            };
        var s = r(45),
            a = r(195).generateRandomNumber,
            d = r(48),
            c = new s("Message");
        e.exports = class {
            static parse(e) {
                var t = void 0,
                    r = {};
                try {
                    t = d.parse(e)
                } catch (e) {
                    return void c.error("parse() | invalid JSONbig: %s", e)
                }
                if ("object" === (void 0 === t ? "undefined" : (0, o.default)(t)) && !Array.isArray(t)) {
                    if (t.request) {
                        if (r.request = !0, "string" != typeof t.method) return void c.error("parse() | missing/invalid method field");
                        if ("number" != typeof t.id) return void c.error("parse() | missing/invalid id field");
                        r.id = t.id, r.method = t.method, r.data = t.data || {}
                    } else if (t.response) {
                        if (r.response = !0, "number" != typeof t.id) return void c.error("parse() | missing/invalid id field");
                        r.id = t.id, t.ok ? (r.ok = !0, r.data = t.data || {}) : (r.ok = !1, r.errorCode = t.errorCode, r.errorReason = t.errorReason)
                    } else {
                        if (!t.notification) return void c.error("parse() | missing request/response field");
                        if (r.notification = !0, "string" != typeof t.method) return void c.error("parse() | missing/invalid method field");
                        r.id = t.id, r.method = t.method, r.data = t.data || {}
                    }
                    return r
                }
                c.error("parse() | not an object")
            }
            static createRequest(e, t) {
                return {
                    request: !0,
                    id: a(),
                    method: e,
                    data: t || {}
                }
            }
            static createSuccessResponse(e, t) {
                return {
                    response: !0,
                    id: e.id,
                    ok: !0,
                    data: t || {}
                }
            }
            static createErrorResponse(e, t, r) {
                return {
                    response: !0,
                    id: e.id,
                    ok: !1,
                    errorCode: t,
                    errorReason: r
                }
            }
            static createNotification(e, t) {
                return {
                    notification: !0,
                    method: e,
                    data: t || {}
                }
            }
        }
    }, function(e, t) {
        t.f = Object.getOwnPropertySymbols
    }, function(e, t, r) {
        var i = r(88),
            n = r(62).concat("length", "prototype");
        t.f = Object.getOwnPropertyNames || function(e) {
            return i(e, n)
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.parseScalabilityMode = t.detectDevice = t.Device = t.version = t.types = void 0;
        const s = r(106);
        Object.defineProperty(t, "Device", {
            enumerable: !0,
            get: function() {
                return s.Device
            }
        }), Object.defineProperty(t, "detectDevice", {
            enumerable: !0,
            get: function() {
                return s.detectDevice
            }
        });
        const a = o(r(210));
        t.types = a, t.version = "__MEDIASOUP_CLIENT_VERSION__";
        var d = r(213);
        Object.defineProperty(t, "parseScalabilityMode", {
            enumerable: !0,
            get: function() {
                return d.parse
            }
        })
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Device = t.detectDevice = void 0;
        const s = o(r(107)),
            a = r(10),
            d = r(32),
            c = r(33),
            u = o(r(22)),
            l = o(r(46)),
            p = r(108),
            f = r(203),
            h = r(207),
            m = "Device";

        function g() {
            if ("object" == typeof navigator && "string" == typeof navigator.userAgent) {
                const e = navigator.userAgent,
                    t = s.getParser(e);
                t.getEngine();
                return t.satisfies({
                    chrome: ">=72",
                    chromium: ">=72"
                }) ? "Chrome74" : t.satisfies({
                    safari: ">=12.0"
                }) && "undefined" != typeof RTCRtpTransceiver && RTCRtpTransceiver.prototype.hasOwnProperty("currentDirection") || "WeChat" === t.getBrowserName() && t.getOS() && "iOS" === t.getOS().name ? "Safari12" : (a.Logger.warn(m, "this._detectDevice() | browser not supported [name:%s, version:%s], using Chrome72 as default", t.getBrowserName(), t.getBrowserVersion()), "Chrome74")
            }
            return a.Logger.warn(m, "this._detectDevice() | unknown device, using Chrome 72 as default"), "Chrome74"
        }
        t.detectDevice = g;
        t.Device = class {
            constructor({
                handlerName: e,
                handlerFactory: t,
                Handler: r
            } = {}) {
                if (this._loaded = !1, this._observer = new d.EnhancedEventEmitter, a.Logger.debug(m, "constructor()"), r) {
                    if (a.Logger.warn(m, "constructor() | Handler option is DEPRECATED, use handlerName or handlerFactory instead"), "string" != typeof r) throw new TypeError("non string Handler option no longer supported, use handlerFactory instead");
                    e = r
                }
                if (e && t) throw new TypeError("just one of handlerName or handlerInterface can be given");
                if (t) this._handlerFactory = t;
                else {
                    if (e) a.Logger.debug(m, "constructor() | handler given: %s", e);
                    else {
                        if (!(e = g())) throw new c.UnsupportedError("device not supported");
                        a.Logger.debug(m, "constructor() | detected handler: %s", e)
                    }
                    switch (e) {
                        case "Chrome74":
                            this._handlerFactory = f.Chrome74.createFactory();
                            break;
                        case "Safari12":
                            this._handlerFactory = h.Safari12.createFactory();
                            break;
                        default:
                            console.error(`unknown handlerName "${e}, using Chrome 74 as default"`), this._handlerFactory = f.Chrome74.createFactory()
                    }
                }
                const i = this._handlerFactory();
                this._handlerName = i.name, i.close(), this._extendedRtpCapabilities = void 0, this._recvRtpCapabilities = void 0, this._canProduceByKind = {
                    audio: !1,
                    video: !1
                }, this._sctpCapabilities = void 0
            }
            get handlerName() {
                return this._handlerName
            }
            get loaded() {
                return this._loaded
            }
            get rtpCapabilities() {
                if (!this._loaded) throw new c.InvalidStateError("not loaded");
                return this._recvRtpCapabilities
            }
            get sctpCapabilities() {
                if (!this._loaded) throw new c.InvalidStateError("not loaded");
                return this._sctpCapabilities
            }
            get observer() {
                return this._observer
            }
            async load({
                routerRtpCapabilities: e
            }) {
                let t;
                a.Logger.debug(m, "load() [routerRtpCapabilities:%o]", e), e = u.clone(e, void 0);
                try {
                    if (this._loaded) throw new c.InvalidStateError("already loaded");
                    l.validateRtpCapabilities(e), t = this._handlerFactory();
                    const r = await t.getNativeRtpCapabilities();
                    a.Logger.debug(m, "load() | got native RTP capabilities:%o", r), l.validateRtpCapabilities(r), this._extendedRtpCapabilities = l.getExtendedRtpCapabilities(r, e), a.Logger.debug(m, "load() | got extended RTP capabilities:%o", this._extendedRtpCapabilities), this._canProduceByKind.audio = l.canSend("audio", this._extendedRtpCapabilities), this._canProduceByKind.video = l.canSend("video", this._extendedRtpCapabilities), this._recvRtpCapabilities = l.getRecvRtpCapabilities(this._extendedRtpCapabilities), l.validateRtpCapabilities(this._recvRtpCapabilities), a.Logger.debug(m, "load() | got receiving RTP capabilities:%o", this._recvRtpCapabilities), this._sctpCapabilities = await t.getNativeSctpCapabilities(), a.Logger.debug(m, "load() | got native SCTP capabilities:%o", this._sctpCapabilities), l.validateSctpCapabilities(this._sctpCapabilities), a.Logger.debug(m, "load() succeeded"), this._loaded = !0, t.close()
                } catch (e) {
                    throw t && t.close(), e
                }
            }
            canProduce(e) {
                if (!this._loaded) throw new c.InvalidStateError("not loaded");
                if ("audio" !== e && "video" !== e) throw new TypeError(`invalid kind "${e}"`);
                return this._canProduceByKind[e]
            }
            createSendTransport({
                id: e,
                iceParameters: t,
                iceCandidates: r,
                dtlsParameters: i,
                sctpParameters: n,
                iceServers: o,
                iceTransportPolicy: s,
                additionalSettings: d,
                proprietaryConstraints: c,
                appData: u = {}
            }) {
                return a.Logger.debug(m, "createSendTransport()"), this._createTransport({
                    direction: "send",
                    id: e,
                    iceParameters: t,
                    iceCandidates: r,
                    dtlsParameters: i,
                    sctpParameters: n,
                    iceServers: o,
                    iceTransportPolicy: s,
                    additionalSettings: d,
                    proprietaryConstraints: c,
                    appData: u
                })
            }
            createRecvTransport({
                id: e,
                iceParameters: t,
                iceCandidates: r,
                dtlsParameters: i,
                sctpParameters: n,
                iceServers: o,
                iceTransportPolicy: s,
                additionalSettings: d,
                proprietaryConstraints: c,
                appData: u = {}
            }) {
                return a.Logger.debug(m, "createRecvTransport()"), this._createTransport({
                    direction: "recv",
                    id: e,
                    iceParameters: t,
                    iceCandidates: r,
                    dtlsParameters: i,
                    sctpParameters: n,
                    iceServers: o,
                    iceTransportPolicy: s,
                    additionalSettings: d,
                    proprietaryConstraints: c,
                    appData: u
                })
            }
            _createTransport({
                direction: e,
                id: t,
                iceParameters: r,
                iceCandidates: i,
                dtlsParameters: n,
                sctpParameters: o,
                iceServers: s,
                iceTransportPolicy: a,
                additionalSettings: d,
                proprietaryConstraints: u,
                appData: l = {}
            }) {
                if (!this._loaded) throw new c.InvalidStateError("not loaded");
                if (l && "object" != typeof l) throw new TypeError("if given, appData must be an object");
                const f = new p.Transport({
                    direction: e,
                    id: t,
                    iceParameters: r,
                    iceCandidates: i,
                    dtlsParameters: n,
                    sctpParameters: o,
                    iceServers: s,
                    iceTransportPolicy: a,
                    additionalSettings: d,
                    proprietaryConstraints: u,
                    appData: l,
                    handlerFactory: this._handlerFactory,
                    extendedRtpCapabilities: this._extendedRtpCapabilities,
                    canProduceByKind: this._canProduceByKind
                });
                return this._observer.safeEmit("newtransport", f), f
            }
        }
    }, function(e, t, r) {
        e.exports = function(e) {
            var t = {};

            function r(i) {
                if (t[i]) return t[i].exports;
                var n = t[i] = {
                    i: i,
                    l: !1,
                    exports: {}
                };
                return e[i].call(n.exports, n, n.exports, r), n.l = !0, n.exports
            }
            return r.m = e, r.c = t, r.d = function(e, t, i) {
                r.o(e, t) || Object.defineProperty(e, t, {
                    enumerable: !0,
                    get: i
                })
            }, r.r = function(e) {
                "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                }), Object.defineProperty(e, "__esModule", {
                    value: !0
                })
            }, r.t = function(e, t) {
                if (1 & t && (e = r(e)), 8 & t) return e;
                if (4 & t && "object" == typeof e && e && e.__esModule) return e;
                var i = Object.create(null);
                if (r.r(i), Object.defineProperty(i, "default", {
                        enumerable: !0,
                        value: e
                    }), 2 & t && "string" != typeof e)
                    for (var n in e) r.d(i, n, function(t) {
                        return e[t]
                    }.bind(null, n));
                return i
            }, r.n = function(e) {
                var t = e && e.__esModule ? function() {
                    return e.default
                } : function() {
                    return e
                };
                return r.d(t, "a", t), t
            }, r.o = function(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            }, r.p = "", r(r.s = 90)
        }({
            17: function(e, t, r) {
                "use strict";
                t.__esModule = !0, t.default = void 0;
                var i = r(18),
                    n = function() {
                        function e() {}
                        return e.getFirstMatch = function(e, t) {
                            var r = t.match(e);
                            return r && r.length > 0 && r[1] || ""
                        }, e.getSecondMatch = function(e, t) {
                            var r = t.match(e);
                            return r && r.length > 1 && r[2] || ""
                        }, e.matchAndReturnConst = function(e, t, r) {
                            if (e.test(t)) return r
                        }, e.getWindowsVersionName = function(e) {
                            switch (e) {
                                case "NT":
                                    return "NT";
                                case "XP":
                                    return "XP";
                                case "NT 5.0":
                                    return "2000";
                                case "NT 5.1":
                                    return "XP";
                                case "NT 5.2":
                                    return "2003";
                                case "NT 6.0":
                                    return "Vista";
                                case "NT 6.1":
                                    return "7";
                                case "NT 6.2":
                                    return "8";
                                case "NT 6.3":
                                    return "8.1";
                                case "NT 10.0":
                                    return "10";
                                default:
                                    return
                            }
                        }, e.getMacOSVersionName = function(e) {
                            var t = e.split(".").splice(0, 2).map((function(e) {
                                return parseInt(e, 10) || 0
                            }));
                            if (t.push(0), 10 === t[0]) switch (t[1]) {
                                case 5:
                                    return "Leopard";
                                case 6:
                                    return "Snow Leopard";
                                case 7:
                                    return "Lion";
                                case 8:
                                    return "Mountain Lion";
                                case 9:
                                    return "Mavericks";
                                case 10:
                                    return "Yosemite";
                                case 11:
                                    return "El Capitan";
                                case 12:
                                    return "Sierra";
                                case 13:
                                    return "High Sierra";
                                case 14:
                                    return "Mojave";
                                case 15:
                                    return "Catalina";
                                default:
                                    return
                            }
                        }, e.getAndroidVersionName = function(e) {
                            var t = e.split(".").splice(0, 2).map((function(e) {
                                return parseInt(e, 10) || 0
                            }));
                            if (t.push(0), !(1 === t[0] && t[1] < 5)) return 1 === t[0] && t[1] < 6 ? "Cupcake" : 1 === t[0] && t[1] >= 6 ? "Donut" : 2 === t[0] && t[1] < 2 ? "Eclair" : 2 === t[0] && 2 === t[1] ? "Froyo" : 2 === t[0] && t[1] > 2 ? "Gingerbread" : 3 === t[0] ? "Honeycomb" : 4 === t[0] && t[1] < 1 ? "Ice Cream Sandwich" : 4 === t[0] && t[1] < 4 ? "Jelly Bean" : 4 === t[0] && t[1] >= 4 ? "KitKat" : 5 === t[0] ? "Lollipop" : 6 === t[0] ? "Marshmallow" : 7 === t[0] ? "Nougat" : 8 === t[0] ? "Oreo" : 9 === t[0] ? "Pie" : void 0
                        }, e.getVersionPrecision = function(e) {
                            return e.split(".").length
                        }, e.compareVersions = function(t, r, i) {
                            void 0 === i && (i = !1);
                            var n = e.getVersionPrecision(t),
                                o = e.getVersionPrecision(r),
                                s = Math.max(n, o),
                                a = 0,
                                d = e.map([t, r], (function(t) {
                                    var r = s - e.getVersionPrecision(t),
                                        i = t + new Array(r + 1).join(".0");
                                    return e.map(i.split("."), (function(e) {
                                        return new Array(20 - e.length).join("0") + e
                                    })).reverse()
                                }));
                            for (i && (a = s - Math.min(n, o)), s -= 1; s >= a;) {
                                if (d[0][s] > d[1][s]) return 1;
                                if (d[0][s] === d[1][s]) {
                                    if (s === a) return 0;
                                    s -= 1
                                } else if (d[0][s] < d[1][s]) return -1
                            }
                        }, e.map = function(e, t) {
                            var r, i = [];
                            if (Array.prototype.map) return Array.prototype.map.call(e, t);
                            for (r = 0; r < e.length; r += 1) i.push(t(e[r]));
                            return i
                        }, e.find = function(e, t) {
                            var r, i;
                            if (Array.prototype.find) return Array.prototype.find.call(e, t);
                            for (r = 0, i = e.length; r < i; r += 1) {
                                var n = e[r];
                                if (t(n, r)) return n
                            }
                        }, e.assign = function(e) {
                            for (var t, r, i = e, n = arguments.length, o = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++) o[s - 1] = arguments[s];
                            if (Object.assign) return Object.assign.apply(Object, [e].concat(o));
                            var a = function() {
                                var e = o[t];
                                "object" == typeof e && null !== e && Object.keys(e).forEach((function(t) {
                                    i[t] = e[t]
                                }))
                            };
                            for (t = 0, r = o.length; t < r; t += 1) a();
                            return e
                        }, e.getBrowserAlias = function(e) {
                            return i.BROWSER_ALIASES_MAP[e]
                        }, e.getBrowserTypeByAlias = function(e) {
                            return i.BROWSER_MAP[e] || ""
                        }, e
                    }();
                t.default = n, e.exports = t.default
            },
            18: function(e, t, r) {
                "use strict";
                t.__esModule = !0, t.ENGINE_MAP = t.OS_MAP = t.PLATFORMS_MAP = t.BROWSER_MAP = t.BROWSER_ALIASES_MAP = void 0, t.BROWSER_ALIASES_MAP = {
                    "Amazon Silk": "amazon_silk",
                    "Android Browser": "android",
                    Bada: "bada",
                    BlackBerry: "blackberry",
                    Chrome: "chrome",
                    Chromium: "chromium",
                    Electron: "electron",
                    Epiphany: "epiphany",
                    Firefox: "firefox",
                    Focus: "focus",
                    Generic: "generic",
                    "Google Search": "google_search",
                    Googlebot: "googlebot",
                    "Internet Explorer": "ie",
                    "K-Meleon": "k_meleon",
                    Maxthon: "maxthon",
                    "Microsoft Edge": "edge",
                    "MZ Browser": "mz",
                    "NAVER Whale Browser": "naver",
                    Opera: "opera",
                    "Opera Coast": "opera_coast",
                    PhantomJS: "phantomjs",
                    Puffin: "puffin",
                    QupZilla: "qupzilla",
                    QQ: "qq",
                    QQLite: "qqlite",
                    Safari: "safari",
                    Sailfish: "sailfish",
                    "Samsung Internet for Android": "samsung_internet",
                    SeaMonkey: "seamonkey",
                    Sleipnir: "sleipnir",
                    Swing: "swing",
                    Tizen: "tizen",
                    "UC Browser": "uc",
                    Vivaldi: "vivaldi",
                    "WebOS Browser": "webos",
                    WeChat: "wechat",
                    "Yandex Browser": "yandex",
                    Roku: "roku"
                }, t.BROWSER_MAP = {
                    amazon_silk: "Amazon Silk",
                    android: "Android Browser",
                    bada: "Bada",
                    blackberry: "BlackBerry",
                    chrome: "Chrome",
                    chromium: "Chromium",
                    electron: "Electron",
                    epiphany: "Epiphany",
                    firefox: "Firefox",
                    focus: "Focus",
                    generic: "Generic",
                    googlebot: "Googlebot",
                    google_search: "Google Search",
                    ie: "Internet Explorer",
                    k_meleon: "K-Meleon",
                    maxthon: "Maxthon",
                    edge: "Microsoft Edge",
                    mz: "MZ Browser",
                    naver: "NAVER Whale Browser",
                    opera: "Opera",
                    opera_coast: "Opera Coast",
                    phantomjs: "PhantomJS",
                    puffin: "Puffin",
                    qupzilla: "QupZilla",
                    qq: "QQ Browser",
                    qqlite: "QQ Browser Lite",
                    safari: "Safari",
                    sailfish: "Sailfish",
                    samsung_internet: "Samsung Internet for Android",
                    seamonkey: "SeaMonkey",
                    sleipnir: "Sleipnir",
                    swing: "Swing",
                    tizen: "Tizen",
                    uc: "UC Browser",
                    vivaldi: "Vivaldi",
                    webos: "WebOS Browser",
                    wechat: "WeChat",
                    yandex: "Yandex Browser"
                }, t.PLATFORMS_MAP = {
                    tablet: "tablet",
                    mobile: "mobile",
                    desktop: "desktop",
                    tv: "tv"
                }, t.OS_MAP = {
                    WindowsPhone: "Windows Phone",
                    Windows: "Windows",
                    MacOS: "macOS",
                    iOS: "iOS",
                    Android: "Android",
                    WebOS: "WebOS",
                    BlackBerry: "BlackBerry",
                    Bada: "Bada",
                    Tizen: "Tizen",
                    Linux: "Linux",
                    ChromeOS: "Chrome OS",
                    PlayStation4: "PlayStation 4",
                    Roku: "Roku"
                }, t.ENGINE_MAP = {
                    EdgeHTML: "EdgeHTML",
                    Blink: "Blink",
                    Trident: "Trident",
                    Presto: "Presto",
                    Gecko: "Gecko",
                    WebKit: "WebKit"
                }
            },
            90: function(e, t, r) {
                "use strict";
                t.__esModule = !0, t.default = void 0;
                var i, n = (i = r(91)) && i.__esModule ? i : {
                        default: i
                    },
                    o = r(18);

                function s(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var i = t[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
                    }
                }
                var a = function() {
                    function e() {}
                    var t, r;
                    return e.getParser = function(e, t) {
                        if (void 0 === t && (t = !1), "string" != typeof e) throw new Error("UserAgent should be a string");
                        return new n.default(e, t)
                    }, e.parse = function(e) {
                        return new n.default(e).getResult()
                    }, t = e, (r = [{
                        key: "BROWSER_MAP",
                        get: function() {
                            return o.BROWSER_MAP
                        }
                    }, {
                        key: "ENGINE_MAP",
                        get: function() {
                            return o.ENGINE_MAP
                        }
                    }, {
                        key: "OS_MAP",
                        get: function() {
                            return o.OS_MAP
                        }
                    }, {
                        key: "PLATFORMS_MAP",
                        get: function() {
                            return o.PLATFORMS_MAP
                        }
                    }]) && s(t, r), e
                }();
                t.default = a, e.exports = t.default
            },
            91: function(e, t, r) {
                "use strict";
                t.__esModule = !0, t.default = void 0;
                var i = d(r(92)),
                    n = d(r(93)),
                    o = d(r(94)),
                    s = d(r(95)),
                    a = d(r(17));

                function d(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                }
                var c = function() {
                    function e(e, t) {
                        if (void 0 === t && (t = !1), null == e || "" === e) throw new Error("UserAgent parameter can't be empty");
                        this._ua = e, this.parsedResult = {}, !0 !== t && this.parse()
                    }
                    var t = e.prototype;
                    return t.getUA = function() {
                        return this._ua
                    }, t.test = function(e) {
                        return e.test(this._ua)
                    }, t.parseBrowser = function() {
                        var e = this;
                        this.parsedResult.browser = {};
                        var t = a.default.find(i.default, (function(t) {
                            if ("function" == typeof t.test) return t.test(e);
                            if (t.test instanceof Array) return t.test.some((function(t) {
                                return e.test(t)
                            }));
                            throw new Error("Browser's test function is not valid")
                        }));
                        return t && (this.parsedResult.browser = t.describe(this.getUA())), this.parsedResult.browser
                    }, t.getBrowser = function() {
                        return this.parsedResult.browser ? this.parsedResult.browser : this.parseBrowser()
                    }, t.getBrowserName = function(e) {
                        return e ? String(this.getBrowser().name).toLowerCase() || "" : this.getBrowser().name || ""
                    }, t.getBrowserVersion = function() {
                        return this.getBrowser().version
                    }, t.getOS = function() {
                        return this.parsedResult.os ? this.parsedResult.os : this.parseOS()
                    }, t.parseOS = function() {
                        var e = this;
                        this.parsedResult.os = {};
                        var t = a.default.find(n.default, (function(t) {
                            if ("function" == typeof t.test) return t.test(e);
                            if (t.test instanceof Array) return t.test.some((function(t) {
                                return e.test(t)
                            }));
                            throw new Error("Browser's test function is not valid")
                        }));
                        return t && (this.parsedResult.os = t.describe(this.getUA())), this.parsedResult.os
                    }, t.getOSName = function(e) {
                        var t = this.getOS().name;
                        return e ? String(t).toLowerCase() || "" : t || ""
                    }, t.getOSVersion = function() {
                        return this.getOS().version
                    }, t.getPlatform = function() {
                        return this.parsedResult.platform ? this.parsedResult.platform : this.parsePlatform()
                    }, t.getPlatformType = function(e) {
                        void 0 === e && (e = !1);
                        var t = this.getPlatform().type;
                        return e ? String(t).toLowerCase() || "" : t || ""
                    }, t.parsePlatform = function() {
                        var e = this;
                        this.parsedResult.platform = {};
                        var t = a.default.find(o.default, (function(t) {
                            if ("function" == typeof t.test) return t.test(e);
                            if (t.test instanceof Array) return t.test.some((function(t) {
                                return e.test(t)
                            }));
                            throw new Error("Browser's test function is not valid")
                        }));
                        return t && (this.parsedResult.platform = t.describe(this.getUA())), this.parsedResult.platform
                    }, t.getEngine = function() {
                        return this.parsedResult.engine ? this.parsedResult.engine : this.parseEngine()
                    }, t.getEngineName = function(e) {
                        return e ? String(this.getEngine().name).toLowerCase() || "" : this.getEngine().name || ""
                    }, t.parseEngine = function() {
                        var e = this;
                        this.parsedResult.engine = {};
                        var t = a.default.find(s.default, (function(t) {
                            if ("function" == typeof t.test) return t.test(e);
                            if (t.test instanceof Array) return t.test.some((function(t) {
                                return e.test(t)
                            }));
                            throw new Error("Browser's test function is not valid")
                        }));
                        return t && (this.parsedResult.engine = t.describe(this.getUA())), this.parsedResult.engine
                    }, t.parse = function() {
                        return this.parseBrowser(), this.parseOS(), this.parsePlatform(), this.parseEngine(), this
                    }, t.getResult = function() {
                        return a.default.assign({}, this.parsedResult)
                    }, t.satisfies = function(e) {
                        var t = this,
                            r = {},
                            i = 0,
                            n = {},
                            o = 0;
                        if (Object.keys(e).forEach((function(t) {
                                var s = e[t];
                                "string" == typeof s ? (n[t] = s, o += 1) : "object" == typeof s && (r[t] = s, i += 1)
                            })), i > 0) {
                            var s = Object.keys(r),
                                d = a.default.find(s, (function(e) {
                                    return t.isOS(e)
                                }));
                            if (d) {
                                var c = this.satisfies(r[d]);
                                if (void 0 !== c) return c
                            }
                            var u = a.default.find(s, (function(e) {
                                return t.isPlatform(e)
                            }));
                            if (u) {
                                var l = this.satisfies(r[u]);
                                if (void 0 !== l) return l
                            }
                        }
                        if (o > 0) {
                            var p = Object.keys(n),
                                f = a.default.find(p, (function(e) {
                                    return t.isBrowser(e, !0)
                                }));
                            if (void 0 !== f) return this.compareVersion(n[f])
                        }
                    }, t.isBrowser = function(e, t) {
                        void 0 === t && (t = !1);
                        var r = this.getBrowserName().toLowerCase(),
                            i = e.toLowerCase(),
                            n = a.default.getBrowserTypeByAlias(i);
                        return t && n && (i = n.toLowerCase()), i === r
                    }, t.compareVersion = function(e) {
                        var t = [0],
                            r = e,
                            i = !1,
                            n = this.getBrowserVersion();
                        if ("string" == typeof n) return ">" === e[0] || "<" === e[0] ? (r = e.substr(1), "=" === e[1] ? (i = !0, r = e.substr(2)) : t = [], ">" === e[0] ? t.push(1) : t.push(-1)) : "=" === e[0] ? r = e.substr(1) : "~" === e[0] && (i = !0, r = e.substr(1)), t.indexOf(a.default.compareVersions(n, r, i)) > -1
                    }, t.isOS = function(e) {
                        return this.getOSName(!0) === String(e).toLowerCase()
                    }, t.isPlatform = function(e) {
                        return this.getPlatformType(!0) === String(e).toLowerCase()
                    }, t.isEngine = function(e) {
                        return this.getEngineName(!0) === String(e).toLowerCase()
                    }, t.is = function(e, t) {
                        return void 0 === t && (t = !1), this.isBrowser(e, t) || this.isOS(e) || this.isPlatform(e)
                    }, t.some = function(e) {
                        var t = this;
                        return void 0 === e && (e = []), e.some((function(e) {
                            return t.is(e)
                        }))
                    }, e
                }();
                t.default = c, e.exports = t.default
            },
            92: function(e, t, r) {
                "use strict";
                t.__esModule = !0, t.default = void 0;
                var i, n = (i = r(17)) && i.__esModule ? i : {
                        default: i
                    },
                    o = /version\/(\d+(\.?_?\d+)+)/i,
                    s = [{
                        test: [/googlebot/i],
                        describe: function(e) {
                            var t = {
                                    name: "Googlebot"
                                },
                                r = n.default.getFirstMatch(/googlebot\/(\d+(\.\d+))/i, e) || n.default.getFirstMatch(o, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/opera/i],
                        describe: function(e) {
                            var t = {
                                    name: "Opera"
                                },
                                r = n.default.getFirstMatch(o, e) || n.default.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/opr\/|opios/i],
                        describe: function(e) {
                            var t = {
                                    name: "Opera"
                                },
                                r = n.default.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i, e) || n.default.getFirstMatch(o, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/SamsungBrowser/i],
                        describe: function(e) {
                            var t = {
                                    name: "Samsung Internet for Android"
                                },
                                r = n.default.getFirstMatch(o, e) || n.default.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/Whale/i],
                        describe: function(e) {
                            var t = {
                                    name: "NAVER Whale Browser"
                                },
                                r = n.default.getFirstMatch(o, e) || n.default.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/MZBrowser/i],
                        describe: function(e) {
                            var t = {
                                    name: "MZ Browser"
                                },
                                r = n.default.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i, e) || n.default.getFirstMatch(o, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/focus/i],
                        describe: function(e) {
                            var t = {
                                    name: "Focus"
                                },
                                r = n.default.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i, e) || n.default.getFirstMatch(o, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/swing/i],
                        describe: function(e) {
                            var t = {
                                    name: "Swing"
                                },
                                r = n.default.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i, e) || n.default.getFirstMatch(o, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/coast/i],
                        describe: function(e) {
                            var t = {
                                    name: "Opera Coast"
                                },
                                r = n.default.getFirstMatch(o, e) || n.default.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/opt\/\d+(?:.?_?\d+)+/i],
                        describe: function(e) {
                            var t = {
                                    name: "Opera Touch"
                                },
                                r = n.default.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i, e) || n.default.getFirstMatch(o, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/yabrowser/i],
                        describe: function(e) {
                            var t = {
                                    name: "Yandex Browser"
                                },
                                r = n.default.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i, e) || n.default.getFirstMatch(o, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/ucbrowser/i],
                        describe: function(e) {
                            var t = {
                                    name: "UC Browser"
                                },
                                r = n.default.getFirstMatch(o, e) || n.default.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/Maxthon|mxios/i],
                        describe: function(e) {
                            var t = {
                                    name: "Maxthon"
                                },
                                r = n.default.getFirstMatch(o, e) || n.default.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/epiphany/i],
                        describe: function(e) {
                            var t = {
                                    name: "Epiphany"
                                },
                                r = n.default.getFirstMatch(o, e) || n.default.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/puffin/i],
                        describe: function(e) {
                            var t = {
                                    name: "Puffin"
                                },
                                r = n.default.getFirstMatch(o, e) || n.default.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/sleipnir/i],
                        describe: function(e) {
                            var t = {
                                    name: "Sleipnir"
                                },
                                r = n.default.getFirstMatch(o, e) || n.default.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/k-meleon/i],
                        describe: function(e) {
                            var t = {
                                    name: "K-Meleon"
                                },
                                r = n.default.getFirstMatch(o, e) || n.default.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/micromessenger/i],
                        describe: function(e) {
                            var t = {
                                    name: "WeChat"
                                },
                                r = n.default.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i, e) || n.default.getFirstMatch(o, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/qqbrowser/i],
                        describe: function(e) {
                            var t = {
                                    name: /qqbrowserlite/i.test(e) ? "QQ Browser Lite" : "QQ Browser"
                                },
                                r = n.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i, e) || n.default.getFirstMatch(o, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/msie|trident/i],
                        describe: function(e) {
                            var t = {
                                    name: "Internet Explorer"
                                },
                                r = n.default.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/\sedg\//i],
                        describe: function(e) {
                            var t = {
                                    name: "Microsoft Edge"
                                },
                                r = n.default.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/edg([ea]|ios)/i],
                        describe: function(e) {
                            var t = {
                                    name: "Microsoft Edge"
                                },
                                r = n.default.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/vivaldi/i],
                        describe: function(e) {
                            var t = {
                                    name: "Vivaldi"
                                },
                                r = n.default.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/seamonkey/i],
                        describe: function(e) {
                            var t = {
                                    name: "SeaMonkey"
                                },
                                r = n.default.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/sailfish/i],
                        describe: function(e) {
                            var t = {
                                    name: "Sailfish"
                                },
                                r = n.default.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/silk/i],
                        describe: function(e) {
                            var t = {
                                    name: "Amazon Silk"
                                },
                                r = n.default.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/phantom/i],
                        describe: function(e) {
                            var t = {
                                    name: "PhantomJS"
                                },
                                r = n.default.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/slimerjs/i],
                        describe: function(e) {
                            var t = {
                                    name: "SlimerJS"
                                },
                                r = n.default.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/blackberry|\bbb\d+/i, /rim\stablet/i],
                        describe: function(e) {
                            var t = {
                                    name: "BlackBerry"
                                },
                                r = n.default.getFirstMatch(o, e) || n.default.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/(web|hpw)[o0]s/i],
                        describe: function(e) {
                            var t = {
                                    name: "WebOS Browser"
                                },
                                r = n.default.getFirstMatch(o, e) || n.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/bada/i],
                        describe: function(e) {
                            var t = {
                                    name: "Bada"
                                },
                                r = n.default.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/tizen/i],
                        describe: function(e) {
                            var t = {
                                    name: "Tizen"
                                },
                                r = n.default.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i, e) || n.default.getFirstMatch(o, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/qupzilla/i],
                        describe: function(e) {
                            var t = {
                                    name: "QupZilla"
                                },
                                r = n.default.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i, e) || n.default.getFirstMatch(o, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/firefox|iceweasel|fxios/i],
                        describe: function(e) {
                            var t = {
                                    name: "Firefox"
                                },
                                r = n.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/electron/i],
                        describe: function(e) {
                            var t = {
                                    name: "Electron"
                                },
                                r = n.default.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/MiuiBrowser/i],
                        describe: function(e) {
                            var t = {
                                    name: "Miui"
                                },
                                r = n.default.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/chromium/i],
                        describe: function(e) {
                            var t = {
                                    name: "Chromium"
                                },
                                r = n.default.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i, e) || n.default.getFirstMatch(o, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/chrome|crios|crmo/i],
                        describe: function(e) {
                            var t = {
                                    name: "Chrome"
                                },
                                r = n.default.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/GSA/i],
                        describe: function(e) {
                            var t = {
                                    name: "Google Search"
                                },
                                r = n.default.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: function(e) {
                            var t = !e.test(/like android/i),
                                r = e.test(/android/i);
                            return t && r
                        },
                        describe: function(e) {
                            var t = {
                                    name: "Android Browser"
                                },
                                r = n.default.getFirstMatch(o, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/playstation 4/i],
                        describe: function(e) {
                            var t = {
                                    name: "PlayStation 4"
                                },
                                r = n.default.getFirstMatch(o, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/safari|applewebkit/i],
                        describe: function(e) {
                            var t = {
                                    name: "Safari"
                                },
                                r = n.default.getFirstMatch(o, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/.*/i],
                        describe: function(e) {
                            var t = -1 !== e.search("\\(") ? /^(.*)\/(.*)[ \t]\((.*)/ : /^(.*)\/(.*) /;
                            return {
                                name: n.default.getFirstMatch(t, e),
                                version: n.default.getSecondMatch(t, e)
                            }
                        }
                    }];
                t.default = s, e.exports = t.default
            },
            93: function(e, t, r) {
                "use strict";
                t.__esModule = !0, t.default = void 0;
                var i, n = (i = r(17)) && i.__esModule ? i : {
                        default: i
                    },
                    o = r(18),
                    s = [{
                        test: [/Roku\/DVP/],
                        describe: function(e) {
                            var t = n.default.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i, e);
                            return {
                                name: o.OS_MAP.Roku,
                                version: t
                            }
                        }
                    }, {
                        test: [/windows phone/i],
                        describe: function(e) {
                            var t = n.default.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i, e);
                            return {
                                name: o.OS_MAP.WindowsPhone,
                                version: t
                            }
                        }
                    }, {
                        test: [/windows /i],
                        describe: function(e) {
                            var t = n.default.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i, e),
                                r = n.default.getWindowsVersionName(t);
                            return {
                                name: o.OS_MAP.Windows,
                                version: t,
                                versionName: r
                            }
                        }
                    }, {
                        test: [/Macintosh(.*?) FxiOS(.*?)\//],
                        describe: function(e) {
                            var t = {
                                    name: o.OS_MAP.iOS
                                },
                                r = n.default.getSecondMatch(/(Version\/)(\d[\d.]+)/, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/macintosh/i],
                        describe: function(e) {
                            var t = n.default.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i, e).replace(/[_\s]/g, "."),
                                r = n.default.getMacOSVersionName(t),
                                i = {
                                    name: o.OS_MAP.MacOS,
                                    version: t
                                };
                            return r && (i.versionName = r), i
                        }
                    }, {
                        test: [/(ipod|iphone|ipad)/i],
                        describe: function(e) {
                            var t = n.default.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i, e).replace(/[_\s]/g, ".");
                            return {
                                name: o.OS_MAP.iOS,
                                version: t
                            }
                        }
                    }, {
                        test: function(e) {
                            var t = !e.test(/like android/i),
                                r = e.test(/android/i);
                            return t && r
                        },
                        describe: function(e) {
                            var t = n.default.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i, e),
                                r = n.default.getAndroidVersionName(t),
                                i = {
                                    name: o.OS_MAP.Android,
                                    version: t
                                };
                            return r && (i.versionName = r), i
                        }
                    }, {
                        test: [/(web|hpw)[o0]s/i],
                        describe: function(e) {
                            var t = n.default.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i, e),
                                r = {
                                    name: o.OS_MAP.WebOS
                                };
                            return t && t.length && (r.version = t), r
                        }
                    }, {
                        test: [/blackberry|\bbb\d+/i, /rim\stablet/i],
                        describe: function(e) {
                            var t = n.default.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i, e) || n.default.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i, e) || n.default.getFirstMatch(/\bbb(\d+)/i, e);
                            return {
                                name: o.OS_MAP.BlackBerry,
                                version: t
                            }
                        }
                    }, {
                        test: [/bada/i],
                        describe: function(e) {
                            var t = n.default.getFirstMatch(/bada\/(\d+(\.\d+)*)/i, e);
                            return {
                                name: o.OS_MAP.Bada,
                                version: t
                            }
                        }
                    }, {
                        test: [/tizen/i],
                        describe: function(e) {
                            var t = n.default.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i, e);
                            return {
                                name: o.OS_MAP.Tizen,
                                version: t
                            }
                        }
                    }, {
                        test: [/linux/i],
                        describe: function() {
                            return {
                                name: o.OS_MAP.Linux
                            }
                        }
                    }, {
                        test: [/CrOS/],
                        describe: function() {
                            return {
                                name: o.OS_MAP.ChromeOS
                            }
                        }
                    }, {
                        test: [/PlayStation 4/],
                        describe: function(e) {
                            var t = n.default.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i, e);
                            return {
                                name: o.OS_MAP.PlayStation4,
                                version: t
                            }
                        }
                    }];
                t.default = s, e.exports = t.default
            },
            94: function(e, t, r) {
                "use strict";
                t.__esModule = !0, t.default = void 0;
                var i, n = (i = r(17)) && i.__esModule ? i : {
                        default: i
                    },
                    o = r(18),
                    s = [{
                        test: [/googlebot/i],
                        describe: function() {
                            return {
                                type: "bot",
                                vendor: "Google"
                            }
                        }
                    }, {
                        test: [/huawei/i],
                        describe: function(e) {
                            var t = n.default.getFirstMatch(/(can-l01)/i, e) && "Nova",
                                r = {
                                    type: o.PLATFORMS_MAP.mobile,
                                    vendor: "Huawei"
                                };
                            return t && (r.model = t), r
                        }
                    }, {
                        test: [/nexus\s*(?:7|8|9|10).*/i],
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.tablet,
                                vendor: "Nexus"
                            }
                        }
                    }, {
                        test: [/ipad/i],
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.tablet,
                                vendor: "Apple",
                                model: "iPad"
                            }
                        }
                    }, {
                        test: [/Macintosh(.*?) FxiOS(.*?)\//],
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.tablet,
                                vendor: "Apple",
                                model: "iPad"
                            }
                        }
                    }, {
                        test: [/kftt build/i],
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.tablet,
                                vendor: "Amazon",
                                model: "Kindle Fire HD 7"
                            }
                        }
                    }, {
                        test: [/silk/i],
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.tablet,
                                vendor: "Amazon"
                            }
                        }
                    }, {
                        test: [/tablet(?! pc)/i],
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.tablet
                            }
                        }
                    }, {
                        test: function(e) {
                            var t = e.test(/ipod|iphone/i),
                                r = e.test(/like (ipod|iphone)/i);
                            return t && !r
                        },
                        describe: function(e) {
                            var t = n.default.getFirstMatch(/(ipod|iphone)/i, e);
                            return {
                                type: o.PLATFORMS_MAP.mobile,
                                vendor: "Apple",
                                model: t
                            }
                        }
                    }, {
                        test: [/nexus\s*[0-6].*/i, /galaxy nexus/i],
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.mobile,
                                vendor: "Nexus"
                            }
                        }
                    }, {
                        test: [/[^-]mobi/i],
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.mobile
                            }
                        }
                    }, {
                        test: function(e) {
                            return "blackberry" === e.getBrowserName(!0)
                        },
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.mobile,
                                vendor: "BlackBerry"
                            }
                        }
                    }, {
                        test: function(e) {
                            return "bada" === e.getBrowserName(!0)
                        },
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.mobile
                            }
                        }
                    }, {
                        test: function(e) {
                            return "windows phone" === e.getBrowserName()
                        },
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.mobile,
                                vendor: "Microsoft"
                            }
                        }
                    }, {
                        test: function(e) {
                            var t = Number(String(e.getOSVersion()).split(".")[0]);
                            return "android" === e.getOSName(!0) && t >= 3
                        },
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.tablet
                            }
                        }
                    }, {
                        test: function(e) {
                            return "android" === e.getOSName(!0)
                        },
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.mobile
                            }
                        }
                    }, {
                        test: function(e) {
                            return "macos" === e.getOSName(!0)
                        },
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.desktop,
                                vendor: "Apple"
                            }
                        }
                    }, {
                        test: function(e) {
                            return "windows" === e.getOSName(!0)
                        },
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.desktop
                            }
                        }
                    }, {
                        test: function(e) {
                            return "linux" === e.getOSName(!0)
                        },
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.desktop
                            }
                        }
                    }, {
                        test: function(e) {
                            return "playstation 4" === e.getOSName(!0)
                        },
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.tv
                            }
                        }
                    }, {
                        test: function(e) {
                            return "roku" === e.getOSName(!0)
                        },
                        describe: function() {
                            return {
                                type: o.PLATFORMS_MAP.tv
                            }
                        }
                    }];
                t.default = s, e.exports = t.default
            },
            95: function(e, t, r) {
                "use strict";
                t.__esModule = !0, t.default = void 0;
                var i, n = (i = r(17)) && i.__esModule ? i : {
                        default: i
                    },
                    o = r(18),
                    s = [{
                        test: function(e) {
                            return "microsoft edge" === e.getBrowserName(!0)
                        },
                        describe: function(e) {
                            if (/\sedg\//i.test(e)) return {
                                name: o.ENGINE_MAP.Blink
                            };
                            var t = n.default.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i, e);
                            return {
                                name: o.ENGINE_MAP.EdgeHTML,
                                version: t
                            }
                        }
                    }, {
                        test: [/trident/i],
                        describe: function(e) {
                            var t = {
                                    name: o.ENGINE_MAP.Trident
                                },
                                r = n.default.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: function(e) {
                            return e.test(/presto/i)
                        },
                        describe: function(e) {
                            var t = {
                                    name: o.ENGINE_MAP.Presto
                                },
                                r = n.default.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: function(e) {
                            var t = e.test(/gecko/i),
                                r = e.test(/like gecko/i);
                            return t && !r
                        },
                        describe: function(e) {
                            var t = {
                                    name: o.ENGINE_MAP.Gecko
                                },
                                r = n.default.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }, {
                        test: [/(apple)?webkit\/537\.36/i],
                        describe: function() {
                            return {
                                name: o.ENGINE_MAP.Blink
                            }
                        }
                    }, {
                        test: [/(apple)?webkit/i],
                        describe: function(e) {
                            var t = {
                                    name: o.ENGINE_MAP.WebKit
                                },
                                r = n.default.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i, e);
                            return r && (t.version = r), t
                        }
                    }];
                t.default = s, e.exports = t.default
            }
        })
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            },
            s = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Transport = void 0;
        const a = r(202),
            d = r(10),
            c = r(32),
            u = r(33),
            l = o(r(22)),
            p = o(r(46)),
            f = r(109),
            h = r(110),
            m = s(r(1)),
            g = s(r(0)),
            v = r(13),
            y = "Transport";
        class _ extends c.EnhancedEventEmitter {
            constructor({
                direction: e,
                id: t,
                iceParameters: r,
                iceCandidates: i,
                dtlsParameters: n,
                sctpParameters: o,
                iceServers: s,
                iceTransportPolicy: p,
                additionalSettings: f,
                proprietaryConstraints: h,
                appData: m,
                handlerFactory: g,
                extendedRtpCapabilities: v,
                canProduceByKind: _
            }) {
                super(), this._closed = !1, this._connectionState = "new", this._producers = new Map, this._consumers = new Map, this._probatorConsumerCreated = !1, this._awaitQueue = new a.AwaitQueue({
                    ClosedErrorClass: u.InvalidStateError
                }), this._observer = new c.EnhancedEventEmitter, d.Logger.debug(y, "constructor() [id:%s, direction:%s]", t, e), this._id = t, this._direction = e, this._extendedRtpCapabilities = v, this._canProduceByKind = _, this._maxSctpMessageSize = o ? o.maxMessageSize : null, delete(f = l.clone(f, {})).iceServers, delete f.iceTransportPolicy, delete f.bundlePolicy, delete f.rtcpMuxPolicy, delete f.sdpSemantics, this._handler = g(), this._handler.run({
                    direction: e,
                    iceParameters: r,
                    iceCandidates: i,
                    dtlsParameters: n,
                    sctpParameters: o,
                    iceServers: s,
                    iceTransportPolicy: p,
                    additionalSettings: f,
                    proprietaryConstraints: h,
                    extendedRtpCapabilities: v,
                    appData: m
                }), this._appData = m, this._handleHandler()
            }
            get id() {
                return this._id
            }
            get closed() {
                return this._closed
            }
            get direction() {
                return this._direction
            }
            get handler() {
                return this._handler
            }
            get connectionState() {
                return this._connectionState
            }
            get appData() {
                return this._appData
            }
            set appData(e) {
                throw new m.default({
                    code: g.default.APPDATA_ERROR,
                    message: "cannot override appData object"
                })
            }
            get observer() {
                return this._observer
            }
            close() {
                if (!this._closed) {
                    d.Logger.debug(y, "close()"), this._closed = !0, this._awaitQueue.close(), this._handler.close();
                    for (const e of this._producers.values()) e.transportClosed();
                    this._producers.clear();
                    for (const e of this._consumers.values()) e.transportClosed();
                    this._consumers.clear(), this._observer.safeEmit("close")
                }
            }
            async getStats() {
                if (this._closed) throw new u.InvalidStateError("closed");
                return this._handler.getTransportStats()
            }
            async restartIce({
                iceParameters: e
            }) {
                if (d.Logger.debug(y, "restartIce()"), this._closed) throw new u.InvalidStateError("closed");
                if (!e) throw new TypeError("missing iceParameters");
                return this._awaitQueue.push(async () => this._handler.restartIce(e), "transport.restartIce()")
            }
            async updateIceServers({
                iceServers: e
            } = {}) {
                if (d.Logger.debug(y, "updateIceServers()"), this._closed) throw new u.InvalidStateError("closed");
                if (!Array.isArray(e)) throw new TypeError("missing iceServers");
                return this._awaitQueue.push(async () => this._handler.updateIceServers(e), "transport.updateIceServers()")
            }
            async produce({
                track: e,
                encodings: t,
                codecOptions: r,
                codec: i,
                stopTracks: n = !0,
                disableTrackOnPause: o = !0,
                zeroRtpOnPause: s = !1,
                appData: a
            }) {
                if (d.Logger.debug(y, "produce()"), !e) throw new TypeError("missing track");
                if ("send" !== this._direction) throw new u.UnsupportedError("not a sending Transport");
                if (!this._canProduceByKind[e.kind]) throw new u.UnsupportedError("cannot produce " + e.kind);
                if ("ended" === e.readyState) throw new u.InvalidStateError("track ended");
                if (0 === this.listenerCount("produce")) throw new TypeError('no "produce" listener set into this transport');
                if (a && "object" != typeof a) throw new TypeError("if given, appData must be an object");
                return this._awaitQueue.push(async () => {
                    let d;
                    if (t && !Array.isArray(t)) throw TypeError("encodings must be an array");
                    t && 0 === t.length ? d = void 0 : t && (d = t.map(e => {
                        const t = {
                            active: !0
                        };
                        return !1 === e.active && (t.active = !1), "boolean" == typeof e.dtx && (t.dtx = e.dtx), "string" == typeof e.scalabilityMode && (t.scalabilityMode = e.scalabilityMode), "number" == typeof e.scaleResolutionDownBy && (t.scaleResolutionDownBy = e.scaleResolutionDownBy), "number" == typeof e.maxBitrate && (t.maxBitrate = e.maxBitrate), "number" == typeof e.maxFramerate && (t.maxFramerate = e.maxFramerate), "boolean" == typeof e.adaptivePtime && (t.adaptivePtime = e.adaptivePtime), "string" == typeof e.priority && (t.priority = e.priority), "string" == typeof e.networkPriority && (t.networkPriority = e.networkPriority), t
                    }));
                    const {
                        localId: c,
                        rtpParameters: u,
                        rtpSender: l,
                        dtlsParameters: h,
                        offer: m
                    } = await this._handler.send({
                        track: e,
                        encodings: d,
                        codecOptions: r,
                        appData: a,
                        codec: i
                    });
                    try {
                        p.validateRtpParameters(u);
                        const {
                            id: t
                        } = await this.safeEmitAsPromise("produce", {
                            kind: e.kind,
                            rtpParameters: u,
                            appData: a,
                            localDtlsParameters: h,
                            offer: m
                        }), r = new f.Producer({
                            id: t,
                            localId: c,
                            rtpSender: l,
                            track: e,
                            rtpParameters: u,
                            stopTracks: n,
                            disableTrackOnPause: o,
                            zeroRtpOnPause: s,
                            appData: a
                        });
                        return this._producers.set(r.id, r), this._handleProducer(r), this._observer.safeEmit("newproducer", r), r
                    } catch (e) {
                        throw this._handler.stopSending(c, a.mediaType).catch(() => {}), e
                    }
                }, "transport.produce()").catch(t => {
                    if (n) try {
                        const t = v.getParameters().mediaTracks.findIndex(t => e === t);
                        d.Logger.warn(`Stopping track TRACK#${t} ${e.id}, ${e.label}, ${e.readyState}`), e.stop()
                    } catch (e) {}
                    throw t
                })
            }
            async fillRemoteRecvSdp({
                kind: e,
                appData: t,
                iceParameters: r,
                iceCandidates: i,
                dtlsParameters: n,
                sctpParameters: o,
                sendingRtpParameters: s,
                codecOptions: a,
                offer: d,
                audioProfile: c,
                codec: u
            }) {
                await this._handler.fillRemoteRecvSdp({
                    kind: e,
                    appData: t,
                    iceParameters: r,
                    iceCandidates: i,
                    dtlsParameters: n,
                    sctpParameters: o,
                    sendingRtpParameters: s,
                    codecOptions: a,
                    offer: d,
                    codec: u,
                    audioProfile: c
                })
            }
            async prepareLocalSdp(e, t, r) {
                try {
                    const {
                        dtlsParameters: i,
                        rtpCapabilities: n,
                        offer: o,
                        mid: s,
                        iceUfragReg: a
                    } = await this._handler.prepareLocalSdp(e, r);
                    if (!this._recvRtpCapabilities || !p.canSend("audio", this._recvRtpCapabilities) || !p.canSend("video", this._recvRtpCapabilities)) {
                        let e = p.getExtendedRtpCapabilities(n, t);
                        this._recvRtpCapabilities = p.getRecvRtpCapabilities(e), p.validateRtpCapabilities(this._recvRtpCapabilities)
                    }
                    return {
                        dtlsParameters: i,
                        rtpCapabilities: this._recvRtpCapabilities,
                        offer: o,
                        mid: s,
                        iceUfragReg: a
                    }
                } catch (e) {
                    throw e
                }
            }
            async recoverLocalSdp(e, t, r) {
                try {
                    return void await this._handler.recoverTransceiver(e, t, r)
                } catch (e) {
                    throw e
                }
            }
            async consume({
                id: e,
                producerId: t,
                kind: r,
                rtpParameters: i,
                appData: n = {},
                offer: o,
                iceParameters: s,
                iceCandidates: a,
                dtlsParameters: c,
                sctpParameters: f,
                probeSSrc: m
            }) {
                if (d.Logger.debug(y, "consume()"), i = l.clone(i, void 0), this._closed) throw new u.InvalidStateError("closed");
                if ("recv" !== this._direction) throw new u.UnsupportedError("not a receiving Transport");
                if ("string" != typeof e) throw new TypeError("missing id");
                if ("string" != typeof t) throw new TypeError("missing producerId");
                if ("audio" !== r && "video" !== r) throw new TypeError(`invalid kind '${r}'`);
                if (n && "object" != typeof n) throw new TypeError("if given, appData must be an object");
                return this._awaitQueue.push(async () => {
                    p.canReceive(i, this._extendedRtpCapabilities);
                    const {
                        localId: d,
                        rtpReceiver: u,
                        track: l
                    } = await this._handler.receive({
                        iceParameters: s,
                        iceCandidates: a,
                        dtlsParameters: c,
                        sctpParameters: f,
                        trackId: e,
                        kind: r,
                        rtpParameters: i,
                        offer: o,
                        probeSSrc: m,
                        remoteUid: n.remoteUid,
                        extendedRtpCapabilities: this._extendedRtpCapabilities
                    }), g = new h.Consumer({
                        id: e,
                        localId: d,
                        producerId: t,
                        rtpReceiver: u,
                        track: l,
                        rtpParameters: i,
                        appData: n
                    });
                    return this._consumers.set(g.id, g), this._handleConsumer(g), this._observer.safeEmit("newconsumer", g), g
                }, "transport.consume()")
            }
            _handleHandler() {
                const e = this._handler;
                e.on("@connect", ({
                    dtlsParameters: e
                }, t, r) => {
                    this._closed ? r(new u.InvalidStateError("closed")) : this.safeEmit("connect", {
                        dtlsParameters: e
                    }, t, r)
                }), e.on("@connectionstatechange", e => {
                    e !== this._connectionState && (d.Logger.debug(y, "connection state changed to %s", e), this._connectionState = e, this._closed || this.safeEmit("connectionstatechange", e))
                })
            }
            _handleProducer(e) {
                e.on("@close", () => {
                    this._closed || (d.Logger.warn(y, "producer 关闭: ", e.localId), this._awaitQueue.push(async () => this._handler.stopSending(e.localId, e.appData.mediaType)).catch(e => d.Logger.warn(y, "producer.close() failed:%o", e)))
                }), e.on("@replacetrack", (t, r, i) => {
                    this._awaitQueue.push(async () => this._handler.replaceTrack(e.localId, t), "producer @replacetrack event").then(r).catch(i)
                }), e.on("@setmaxspatiallayer", (t, r, i) => {
                    this._awaitQueue.push(async () => this._handler.setMaxSpatialLayer(e.localId, t), "producer @setmaxspatiallayer event").then(r).catch(i)
                }), e.on("@setrtpencodingparameters", (t, r, i) => {
                    this._awaitQueue.push(async () => this._handler.setRtpEncodingParameters(e.localId, t), "producer @setrtpencodingparameters event").then(r).catch(i)
                }), e.on("@getstats", (t, r) => {
                    if (this._closed) return r(new u.InvalidStateError("closed"));
                    this._handler.getSenderStats(e.localId).then(t).catch(r)
                })
            }
            _handleConsumer(e) {
                e.on("@close", () => {
                    this._consumers.delete(e.id), this._closed || this._awaitQueue.push(async () => this._handler.stopReceiving(e.localId), "consumer @close event").catch(() => {})
                }), e.on("@getstats", (t, r) => {
                    if (this._closed) return r(new u.InvalidStateError("closed"));
                    this._handler.getReceiverStats(e.localId).then(t).catch(r)
                })
            }
        }
        t.Transport = _
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Producer = void 0;
        const n = r(10),
            o = r(32),
            s = r(33),
            a = i(r(1)),
            d = i(r(0)),
            c = r(13),
            u = "Producer";
        class l extends o.EnhancedEventEmitter {
            constructor({
                id: e,
                localId: t,
                rtpSender: r,
                track: i,
                rtpParameters: s,
                stopTracks: a,
                disableTrackOnPause: d,
                zeroRtpOnPause: c,
                appData: l
            }) {
                super(), this._closed = !1, this._observer = new o.EnhancedEventEmitter, n.Logger.debug(u, "constructor()", t), this._id = e, this._localId = t, this._rtpSender = r, this._track = i, this._kind = i.kind, this._rtpParameters = s, this._paused = !!d && !i.enabled, this._maxSpatialLayer = void 0, this._stopTracks = a, this._disableTrackOnPause = d, this._zeroRtpOnPause = c, this._appData = l, this._onTrackEnded = this._onTrackEnded.bind(this), this._handleTrack()
            }
            get id() {
                return this._id
            }
            get localId() {
                return this._localId
            }
            get closed() {
                return this._closed
            }
            get kind() {
                return this._kind
            }
            get rtpSender() {
                return this._rtpSender
            }
            get track() {
                return this._track
            }
            get rtpParameters() {
                return this._rtpParameters
            }
            get paused() {
                return this._paused
            }
            get maxSpatialLayer() {
                return this._maxSpatialLayer
            }
            get appData() {
                return this._appData
            }
            set appData(e) {
                throw new a.default({
                    code: d.default.APPDATA_ERROR,
                    message: "cannot override appData object"
                })
            }
            get observer() {
                return this._observer
            }
            close() {
                this._closed || (n.Logger.debug(u, "close()"), this._closed = !0, this.emit("@close"), this._observer.safeEmit("close"))
            }
            transportClosed() {
                this._closed || (n.Logger.debug(u, "transportClosed()"), this._closed = !0, this._destroyTrack(), this.safeEmit("transportclose"), this._observer.safeEmit("close"))
            }
            async getStats() {
                if (this._closed) throw new s.InvalidStateError("closed");
                return this.safeEmitAsPromise("@getstats")
            }
            pause() {
                n.Logger.debug(u, "pause()"), this._closed ? n.Logger.error(u, "pause() | Producer closed") : (this._paused = !0, this._track && this._disableTrackOnPause && (this._track.enabled = !1), this._zeroRtpOnPause && this.safeEmitAsPromise("@replacetrack", null).catch(() => {}), this._observer.safeEmit("pause"))
            }
            resume() {
                n.Logger.debug(u, "resume()"), this._closed ? n.Logger.error(u, "resume() | Producer closed") : (this._paused = !1, this._track && this._disableTrackOnPause && (this._track.enabled = !0), this._zeroRtpOnPause && this.safeEmitAsPromise("@replacetrack", this._track).catch(() => {}), this._observer.safeEmit("resume"))
            }
            async replaceTrack({
                track: e
            }) {
                if (n.Logger.debug(u, "replaceTrack()"), this._closed) {
                    if (e && this._stopTracks) try {
                        const t = c.getParameters().mediaTracks.findIndex(t => e === t);
                        n.Logger.warn(`Stopping track TRACK#${t} ${e.id}, ${e.label}, ${e.readyState}`), e.stop()
                    } catch (e) {}
                    throw new s.InvalidStateError("closed")
                }
                if (e && "ended" === e.readyState) throw new s.InvalidStateError("track ended");
                e !== this._track ? (this._zeroRtpOnPause && this._paused || await this.safeEmitAsPromise("@replacetrack", e), this._destroyTrack(), this._track = e, this._track && this._disableTrackOnPause && (this._paused ? this._paused && (this._track.enabled = !1) : this._track.enabled = !0), this._handleTrack()) : n.Logger.debug(u, "replaceTrack() | same track, ignored")
            }
            async setMaxSpatialLayer(e) {
                if (this._closed) throw new s.InvalidStateError("closed");
                if ("video" !== this._kind) throw new s.UnsupportedError("not a video Producer");
                if ("number" != typeof e) throw new TypeError("invalid spatialLayer");
                e !== this._maxSpatialLayer && (await this.safeEmitAsPromise("@setmaxspatiallayer", e), this._maxSpatialLayer = e)
            }
            async setRtpEncodingParameters(e) {
                if (this._closed) throw new s.InvalidStateError("closed");
                if ("object" != typeof e) throw new TypeError("invalid params");
                await this.safeEmitAsPromise("@setrtpencodingparameters", e)
            }
            _onTrackEnded() {
                n.Logger.debug(u, 'track "ended" event'), this.safeEmit("trackended"), this._observer.safeEmit("trackended")
            }
            _handleTrack() {
                this._track && this._track.addEventListener("ended", this._onTrackEnded)
            }
            _destroyTrack() {
                this._track && n.Logger.warn(u, "don not stop sender track")
            }
        }
        t.Producer = l
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Consumer = void 0;
        const n = r(10),
            o = r(32),
            s = r(33),
            a = i(r(1)),
            d = i(r(0)),
            c = "Consumer";
        class u extends o.EnhancedEventEmitter {
            constructor({
                id: e,
                localId: t,
                producerId: r,
                rtpReceiver: i,
                track: s,
                rtpParameters: a,
                appData: d
            }) {
                super(), this._closed = !1, this._observer = new o.EnhancedEventEmitter, n.Logger.debug(c, "constructor()"), this._id = e, this._localId = t, this._producerId = r, this._rtpReceiver = i, this._track = s, this._rtpParameters = a, this._paused = !s.enabled, this._appData = d, this._onTrackEnded = this._onTrackEnded.bind(this), this._handleTrack()
            }
            get id() {
                return this._id
            }
            get localId() {
                return this._localId
            }
            get producerId() {
                return this._producerId
            }
            get closed() {
                return this._closed
            }
            get kind() {
                return this._track.kind
            }
            get rtpReceiver() {
                return this._rtpReceiver
            }
            get track() {
                return this._track
            }
            get rtpParameters() {
                return this._rtpParameters
            }
            get paused() {
                return this._paused
            }
            get appData() {
                return this._appData
            }
            set appData(e) {
                throw new a.default({
                    code: d.default.APPDATA_ERROR,
                    message: "cannot override appData object"
                })
            }
            get observer() {
                return this._observer
            }
            close() {
                this._closed || (n.Logger.debug(c, "close()"), this._closed = !0, this._destroyTrack(), this.emit("@close"), this._observer.safeEmit("close"))
            }
            transportClosed() {
                this._closed || (n.Logger.debug(c, "transportClosed()"), this._closed = !0, this._destroyTrack(), this.safeEmit("transportclose"), this._observer.safeEmit("close"))
            }
            async getStats() {
                if (this._closed) throw new s.InvalidStateError("closed");
                return this.safeEmitAsPromise("@getstats")
            }
            pause() {
                n.Logger.debug(c, "pause()"), this._closed ? n.Logger.error(c, "pause() | Consumer closed") : (this._paused = !0, this._track.enabled = !1, this._observer.safeEmit("pause"))
            }
            resume() {
                n.Logger.debug(c, "resume()"), this._closed ? n.Logger.error(c, "resume() | Consumer closed") : (this._paused = !1, this._track.enabled = !0, this._observer.safeEmit("resume"))
            }
            _onTrackEnded() {
                n.Logger.debug(c, 'track "ended" event, %o, %s', this.id, this.kind), this.safeEmit("trackended"), this._observer.safeEmit("trackended")
            }
            _handleTrack() {
                this._track.addEventListener("ended", this._onTrackEnded)
            }
            _destroyTrack() {
                n.Logger.warn(c, "don not stop receiver track")
            }
        }
        t.Consumer = u
    }, function(e, t) {
        var r = e.exports = {
            v: [{
                name: "version",
                reg: /^(\d*)$/
            }],
            o: [{
                name: "origin",
                reg: /^(\S*) (\d*) (\d*) (\S*) IP(\d) (\S*)/,
                names: ["username", "sessionId", "sessionVersion", "netType", "ipVer", "address"],
                format: "%s %s %d %s IP%d %s"
            }],
            s: [{
                name: "name"
            }],
            i: [{
                name: "description"
            }],
            u: [{
                name: "uri"
            }],
            e: [{
                name: "email"
            }],
            p: [{
                name: "phone"
            }],
            z: [{
                name: "timezones"
            }],
            r: [{
                name: "repeats"
            }],
            t: [{
                name: "timing",
                reg: /^(\d*) (\d*)/,
                names: ["start", "stop"],
                format: "%d %d"
            }],
            c: [{
                name: "connection",
                reg: /^IN IP(\d) (\S*)/,
                names: ["version", "ip"],
                format: "IN IP%d %s"
            }],
            b: [{
                push: "bandwidth",
                reg: /^(TIAS|AS|CT|RR|RS):(\d*)/,
                names: ["type", "limit"],
                format: "%s:%s"
            }],
            m: [{
                reg: /^(\w*) (\d*) ([\w/]*)(?: (.*))?/,
                names: ["type", "port", "protocol", "payloads"],
                format: "%s %d %s %s"
            }],
            a: [{
                push: "rtp",
                reg: /^rtpmap:(\d*) ([\w\-.]*)(?:\s*\/(\d*)(?:\s*\/(\S*))?)?/,
                names: ["payload", "codec", "rate", "encoding"],
                format: function(e) {
                    return e.encoding ? "rtpmap:%d %s/%s/%s" : e.rate ? "rtpmap:%d %s/%s" : "rtpmap:%d %s"
                }
            }, {
                push: "fmtp",
                reg: /^fmtp:(\d*) ([\S| ]*)/,
                names: ["payload", "config"],
                format: "fmtp:%d %s"
            }, {
                name: "control",
                reg: /^control:(.*)/,
                format: "control:%s"
            }, {
                name: "rtcp",
                reg: /^rtcp:(\d*)(?: (\S*) IP(\d) (\S*))?/,
                names: ["port", "netType", "ipVer", "address"],
                format: function(e) {
                    return null != e.address ? "rtcp:%d %s IP%d %s" : "rtcp:%d"
                }
            }, {
                push: "rtcpFbTrrInt",
                reg: /^rtcp-fb:(\*|\d*) trr-int (\d*)/,
                names: ["payload", "value"],
                format: "rtcp-fb:%s trr-int %d"
            }, {
                push: "rtcpFb",
                reg: /^rtcp-fb:(\*|\d*) ([\w-_]*)(?: ([\w-_]*))?/,
                names: ["payload", "type", "subtype"],
                format: function(e) {
                    return null != e.subtype ? "rtcp-fb:%s %s %s" : "rtcp-fb:%s %s"
                }
            }, {
                push: "ext",
                reg: /^extmap:(\d+)(?:\/(\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\S*)(?: (\S*))?/,
                names: ["value", "direction", "encrypt-uri", "uri", "config"],
                format: function(e) {
                    return "extmap:%d" + (e.direction ? "/%s" : "%v") + (e["encrypt-uri"] ? " %s" : "%v") + " %s" + (e.config ? " %s" : "")
                }
            }, {
                name: "extmapAllowMixed",
                reg: /^(extmap-allow-mixed)/
            }, {
                push: "crypto",
                reg: /^crypto:(\d*) ([\w_]*) (\S*)(?: (\S*))?/,
                names: ["id", "suite", "config", "sessionConfig"],
                format: function(e) {
                    return null != e.sessionConfig ? "crypto:%d %s %s %s" : "crypto:%d %s %s"
                }
            }, {
                name: "setup",
                reg: /^setup:(\w*)/,
                format: "setup:%s"
            }, {
                name: "connectionType",
                reg: /^connection:(new|existing)/,
                format: "connection:%s"
            }, {
                name: "mid",
                reg: /^mid:([^\s]*)/,
                format: "mid:%s"
            }, {
                name: "msid",
                reg: /^msid:(.*)/,
                format: "msid:%s"
            }, {
                name: "ptime",
                reg: /^ptime:(\d*(?:\.\d*)*)/,
                format: "ptime:%d"
            }, {
                name: "maxptime",
                reg: /^maxptime:(\d*(?:\.\d*)*)/,
                format: "maxptime:%d"
            }, {
                name: "direction",
                reg: /^(sendrecv|recvonly|sendonly|inactive)/
            }, {
                name: "icelite",
                reg: /^(ice-lite)/
            }, {
                name: "iceUfrag",
                reg: /^ice-ufrag:(\S*)/,
                format: "ice-ufrag:%s"
            }, {
                name: "icePwd",
                reg: /^ice-pwd:(\S*)/,
                format: "ice-pwd:%s"
            }, {
                name: "fingerprint",
                reg: /^fingerprint:(\S*) (\S*)/,
                names: ["type", "hash"],
                format: "fingerprint:%s %s"
            }, {
                push: "candidates",
                reg: /^candidate:(\S*) (\d*) (\S*) (\d*) (\S*) (\d*) typ (\S*)(?: raddr (\S*) rport (\d*))?(?: tcptype (\S*))?(?: generation (\d*))?(?: network-id (\d*))?(?: network-cost (\d*))?/,
                names: ["foundation", "component", "transport", "priority", "ip", "port", "type", "raddr", "rport", "tcptype", "generation", "network-id", "network-cost"],
                format: function(e) {
                    var t = "candidate:%s %d %s %d %s %d typ %s";
                    return t += null != e.raddr ? " raddr %s rport %d" : "%v%v", t += null != e.tcptype ? " tcptype %s" : "%v", null != e.generation && (t += " generation %d"), t += null != e["network-id"] ? " network-id %d" : "%v", t += null != e["network-cost"] ? " network-cost %d" : "%v"
                }
            }, {
                name: "endOfCandidates",
                reg: /^(end-of-candidates)/
            }, {
                name: "remoteCandidates",
                reg: /^remote-candidates:(.*)/,
                format: "remote-candidates:%s"
            }, {
                name: "iceOptions",
                reg: /^ice-options:(\S*)/,
                format: "ice-options:%s"
            }, {
                push: "ssrcs",
                reg: /^ssrc:(\d*) ([\w_-]*)(?::(.*))?/,
                names: ["id", "attribute", "value"],
                format: function(e) {
                    var t = "ssrc:%d";
                    return null != e.attribute && (t += " %s", null != e.value && (t += ":%s")), t
                }
            }, {
                push: "ssrcGroups",
                reg: /^ssrc-group:([\x21\x23\x24\x25\x26\x27\x2A\x2B\x2D\x2E\w]*) (.*)/,
                names: ["semantics", "ssrcs"],
                format: "ssrc-group:%s %s"
            }, {
                name: "msidSemantic",
                reg: /^msid-semantic:\s?(\w*) (\S*)/,
                names: ["semantic", "token"],
                format: "msid-semantic: %s %s"
            }, {
                push: "groups",
                reg: /^group:(\w*) (.*)/,
                names: ["type", "mids"],
                format: "group:%s %s"
            }, {
                name: "rtcpMux",
                reg: /^(rtcp-mux)/
            }, {
                name: "rtcpRsize",
                reg: /^(rtcp-rsize)/
            }, {
                name: "sctpmap",
                reg: /^sctpmap:([\w_/]*) (\S*)(?: (\S*))?/,
                names: ["sctpmapNumber", "app", "maxMessageSize"],
                format: function(e) {
                    return null != e.maxMessageSize ? "sctpmap:%s %s %s" : "sctpmap:%s %s"
                }
            }, {
                name: "xGoogleFlag",
                reg: /^x-google-flag:([^\s]*)/,
                format: "x-google-flag:%s"
            }, {
                push: "rids",
                reg: /^rid:([\d\w]+) (\w+)(?: ([\S| ]*))?/,
                names: ["id", "direction", "params"],
                format: function(e) {
                    return e.params ? "rid:%s %s %s" : "rid:%s %s"
                }
            }, {
                push: "imageattrs",
                reg: new RegExp("^imageattr:(\\d+|\\*)[\\s\\t]+(send|recv)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*)(?:[\\s\\t]+(recv|send)[\\s\\t]+(\\*|\\[\\S+\\](?:[\\s\\t]+\\[\\S+\\])*))?"),
                names: ["pt", "dir1", "attrs1", "dir2", "attrs2"],
                format: function(e) {
                    return "imageattr:%s %s %s" + (e.dir2 ? " %s %s" : "")
                }
            }, {
                name: "simulcast",
                reg: new RegExp("^simulcast:(send|recv) ([a-zA-Z0-9\\-_~;,]+)(?:\\s?(send|recv) ([a-zA-Z0-9\\-_~;,]+))?$"),
                names: ["dir1", "list1", "dir2", "list2"],
                format: function(e) {
                    return "simulcast:%s %s" + (e.dir2 ? " %s %s" : "")
                }
            }, {
                name: "simulcast_03",
                reg: /^simulcast:[\s\t]+([\S+\s\t]+)$/,
                names: ["value"],
                format: "simulcast: %s"
            }, {
                name: "framerate",
                reg: /^framerate:(\d+(?:$|\.\d+))/,
                format: "framerate:%s"
            }, {
                name: "sourceFilter",
                reg: /^source-filter: *(excl|incl) (\S*) (IP4|IP6|\*) (\S*) (.*)/,
                names: ["filterMode", "netType", "addressTypes", "destAddress", "srcList"],
                format: "source-filter: %s %s %s %s %s"
            }, {
                name: "bundleOnly",
                reg: /^(bundle-only)/
            }, {
                name: "label",
                reg: /^label:(.+)/,
                format: "label:%s"
            }, {
                name: "sctpPort",
                reg: /^sctp-port:(\d+)$/,
                format: "sctp-port:%s"
            }, {
                name: "maxMessageSize",
                reg: /^max-message-size:(\d+)$/,
                format: "max-message-size:%s"
            }, {
                push: "tsRefClocks",
                reg: /^ts-refclk:([^\s=]*)(?:=(\S*))?/,
                names: ["clksrc", "clksrcExt"],
                format: function(e) {
                    return "ts-refclk:%s" + (null != e.clksrcExt ? "=%s" : "")
                }
            }, {
                name: "mediaClk",
                reg: /^mediaclk:(?:id=(\S*))? *([^\s=]*)(?:=(\S*))?(?: *rate=(\d+)\/(\d+))?/,
                names: ["id", "mediaClockName", "mediaClockValue", "rateNumerator", "rateDenominator"],
                format: function(e) {
                    var t = "mediaclk:";
                    return t += null != e.id ? "id=%s %s" : "%v%s", t += null != e.mediaClockValue ? "=%s" : "", t += null != e.rateNumerator ? " rate=%s" : "", t += null != e.rateDenominator ? "/%s" : ""
                }
            }, {
                name: "keywords",
                reg: /^keywds:(.+)$/,
                format: "keywds:%s"
            }, {
                name: "content",
                reg: /^content:(.+)/,
                format: "content:%s"
            }, {
                name: "bfcpFloorCtrl",
                reg: /^floorctrl:(c-only|s-only|c-s)/,
                format: "floorctrl:%s"
            }, {
                name: "bfcpConfId",
                reg: /^confid:(\d+)/,
                format: "confid:%s"
            }, {
                name: "bfcpUserId",
                reg: /^userid:(\d+)/,
                format: "userid:%s"
            }, {
                name: "bfcpFloorId",
                reg: /^floorid:(.+) (?:m-stream|mstrm):(.+)/,
                names: ["id", "mStream"],
                format: "floorid:%s mstrm:%s"
            }, {
                push: "invalid",
                names: ["value"]
            }]
        };
        Object.keys(r).forEach((function(e) {
            r[e].forEach((function(e) {
                e.reg || (e.reg = /(.*)/), e.format || (e.format = "%s")
            }))
        }))
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            },
            s = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.applyCodecParameters = t.getCname = t.extractDtlsParameters = t.extractRtpCapabilities = void 0;
        const a = o(r(47)),
            d = s(r(1)),
            c = s(r(0));
        t.extractRtpCapabilities = function({
            sdpObject: e
        }) {
            const t = new Map,
                r = [];
            let i = !1,
                n = !1;
            for (const o of e.media) {
                const e = o.type;
                switch (e) {
                    case "audio":
                        if (i) continue;
                        i = !0;
                        break;
                    case "video":
                        if (n) continue;
                        n = !0;
                        break;
                    default:
                        continue
                }
                for (const r of o.rtp) {
                    const i = {
                        kind: e,
                        mimeType: `${e}/${r.codec}`,
                        preferredPayloadType: r.payload,
                        clockRate: r.rate,
                        channels: r.encoding,
                        parameters: {},
                        rtcpFeedback: []
                    };
                    t.set(i.preferredPayloadType, i)
                }
                for (const e of o.fmtp || []) {
                    const r = a.parseParams(e.config),
                        i = t.get(e.payload);
                    i && (r && r.hasOwnProperty("profile-level-id") && (r["profile-level-id"] = String(r["profile-level-id"])), i.parameters = r)
                }
                for (const e of o.rtcpFb || []) {
                    const r = t.get(e.payload);
                    if (!r) continue;
                    const i = {
                        type: e.type,
                        parameter: e.subtype
                    };
                    i.parameter || delete i.parameter, r.rtcpFeedback.push(i)
                }
                for (const t of o.ext || []) {
                    if (t["encrypt-uri"]) continue;
                    const i = {
                        kind: e,
                        uri: t.uri,
                        preferredId: t.value
                    };
                    r.push(i)
                }
            }
            return {
                codecs: Array.from(t.values()),
                headerExtensions: r
            }
        }, t.extractDtlsParameters = function({
            sdpObject: e
        }) {
            const t = (e.media || []).find(e => e.iceUfrag && 0 !== e.port);
            if (!t) throw new d.default({
                code: c.default.NOT_FOUND,
                message: "no active media section found"
            });
            const r = t.fingerprint || e.fingerprint;
            let i;
            switch (t.setup) {
                case "active":
                    i = "client";
                    break;
                case "passive":
                    i = "server";
                    break;
                case "actpass":
                    i = "auto"
            }
            return {
                role: i,
                fingerprints: [{
                    algorithm: r.type,
                    value: r.hash
                }]
            }
        }, t.getCname = function({
            offerMediaObject: e
        }) {
            const t = (e.ssrcs || []).find(e => "cname" === e.attribute);
            return t ? t.value : ""
        }, t.applyCodecParameters = function({
            offerRtpParameters: e,
            answerMediaObject: t
        }) {
            for (const r of e.codecs) {
                const e = r.mimeType.toLowerCase();
                if ("audio/opus" !== e) continue;
                if (!(t.rtp || []).find(e => e.payload === r.payloadType)) continue;
                t.fmtp = t.fmtp || [];
                let i = t.fmtp.find(e => e.payload === r.payloadType);
                i || (i = {
                    payload: r.payloadType,
                    config: ""
                }, t.fmtp.push(i));
                const n = a.parseParams(i.config);
                switch (e) {
                    case "audio/opus": {
                        const e = r.parameters["sprop-stereo"];
                        void 0 !== e && (n.stereo = e ? 1 : 0);
                        break
                    }
                }
                i.config = "";
                for (const e of Object.keys(n)) i.config && (i.config += ";"), i.config += `${e}=${n[e]}`
            }
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.addLegacySimulcast = t.getRtpEncodings = void 0;
        const n = i(r(1)),
            o = i(r(0));
        t.getRtpEncodings = function({
            offerMediaObject: e
        }) {
            const t = new Set;
            for (const r of e.ssrcs || []) {
                const e = r.id;
                t.add(e)
            }
            if (0 === t.size) throw new n.default({
                code: o.default.NOT_FOUND,
                message: "no a=ssrc lines found"
            });
            const r = new Map;
            for (const i of e.ssrcGroups || []) {
                if ("FID" !== i.semantics) continue;
                let [e, n] = i.ssrcs.split(/\s+/);
                e = Number(e), n = Number(n), t.has(e) && (t.delete(e), t.delete(n), r.set(e, n))
            }
            for (const e of t) r.set(e, null);
            const i = [];
            for (const [e, t] of r) {
                const r = {
                    ssrc: e
                };
                t && (r.rtx = {
                    ssrc: t
                }), i.push(r)
            }
            return i
        }, t.addLegacySimulcast = function({
            offerMediaObject: e,
            numStreams: t
        }) {
            if (t <= 1) throw new TypeError("numStreams must be greater than 1");
            const r = (e.ssrcs || []).find(e => "msid" === e.attribute);
            if (!r) throw new n.default({
                code: o.default.NOT_FOUND,
                message: "a=ssrc line with msid information not found"
            });
            const [i, s] = r.value.split(" "), a = r.id;
            let d;
            (e.ssrcGroups || []).some(e => {
                if ("FID" !== e.semantics) return !1;
                const t = e.ssrcs.split(/\s+/);
                return Number(t[0]) === a && (d = Number(t[1]), !0)
            });
            const c = e.ssrcs.find(e => "cname" === e.attribute);
            if (!c) throw new n.default({
                code: o.default.NOT_FOUND,
                message: "a=ssrc line with cname information not found"
            });
            const u = c.value,
                l = [],
                p = [];
            for (let e = 0; e < t; ++e) l.push(a + e), d && p.push(d + e);
            e.ssrcGroups = [], e.ssrcs = [], e.ssrcGroups.push({
                semantics: "SIM",
                ssrcs: l.join(" ")
            });
            for (let t = 0; t < l.length; ++t) {
                const r = l[t];
                e.ssrcs.push({
                    id: r,
                    attribute: "cname",
                    value: u
                }), e.ssrcs.push({
                    id: r,
                    attribute: "msid",
                    value: `${i} ${s}`
                })
            }
            for (let t = 0; t < p.length; ++t) {
                const r = l[t],
                    n = p[t];
                e.ssrcs.push({
                    id: n,
                    attribute: "cname",
                    value: u
                }), e.ssrcs.push({
                    id: n,
                    attribute: "msid",
                    value: `${i} ${s}`
                }), e.ssrcGroups.push({
                    semantics: "FID",
                    ssrcs: `${r} ${n}`
                })
            }
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            },
            s = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.RemoteSdp = void 0;
        const a = o(r(47)),
            d = r(10),
            c = r(206),
            u = s(r(1)),
            l = s(r(0));
        t.RemoteSdp = class {
            constructor({
                iceParameters: e,
                iceCandidates: t,
                dtlsParameters: r,
                sctpParameters: i,
                plainRtpParameters: n,
                planB: o = !1
            }) {
                if (this._mediaSections = [], this._midToIndex = new Map, this._iceParameters = e, this._iceCandidates = t, this._dtlsParameters = r, this._sctpParameters = i, this._plainRtpParameters = n, this._planB = o, this._sdpObject = {
                        version: 0,
                        origin: {
                            address: "0.0.0.0",
                            ipVer: 4,
                            netType: "IN",
                            sessionId: 1e4,
                            sessionVersion: 0,
                            username: "mediasoup-client"
                        },
                        name: "-",
                        timing: {
                            start: 0,
                            stop: 0
                        },
                        media: []
                    }, e && e.iceLite && (this._sdpObject.icelite = "ice-lite"), r) {
                    this._sdpObject.msidSemantic = {
                        semantic: "WMS",
                        token: "*"
                    };
                    const e = this._dtlsParameters.fingerprints.length;
                    this._sdpObject.fingerprint = {
                        type: r.fingerprints[e - 1].algorithm,
                        hash: r.fingerprints[e - 1].value
                    }, this._sdpObject.groups = [{
                        type: "BUNDLE",
                        mids: ""
                    }]
                }
                n && (this._sdpObject.origin.address = n.ip, this._sdpObject.origin.ipVer = n.ipVersion)
            }
            updateIceParameters(e) {
                d.Logger.debug("RemoteSdp", "updateIceParameters() [iceParameters:%o]", e), this._iceParameters = e, this._sdpObject.icelite = e.iceLite ? "ice-lite" : void 0;
                for (const t of this._mediaSections) t.setIceParameters(e)
            }
            updateDtlsRole(e) {
                d.Logger.debug("RemoteSdp", "updateDtlsRole() [role:%s]", e), this._dtlsParameters.role = e;
                for (const t of this._mediaSections) t.setDtlsRole(e)
            }
            getNextMediaSectionIdx() {
                for (let e = 0; e < this._mediaSections.length; ++e) {
                    const t = this._mediaSections[e];
                    if (t.closed) return {
                        idx: e,
                        reuseMid: t.mid
                    }
                }
                return {
                    idx: this._mediaSections.length
                }
            }
            send({
                offerMediaObject: e,
                reuseMid: t,
                offerRtpParameters: r,
                answerRtpParameters: i,
                codecOptions: n,
                extmapAllowMixed: o = !1
            }) {
                if (!e) return;
                const s = new c.AnswerMediaSection({
                    iceParameters: this._iceParameters,
                    iceCandidates: this._iceCandidates,
                    dtlsParameters: this._dtlsParameters,
                    plainRtpParameters: this._plainRtpParameters,
                    planB: this._planB,
                    offerMediaObject: e,
                    offerRtpParameters: r,
                    answerRtpParameters: i,
                    codecOptions: n,
                    extmapAllowMixed: o
                });
                t ? this._replaceMediaSection(s, t) : this._midToIndex.has(s.mid) ? this._replaceMediaSection(s) : this._addMediaSection(s)
            }
            receive({
                mid: e,
                kind: t,
                offerRtpParameters: r,
                streamId: i,
                trackId: n,
                reuseMid: o = null
            }) {
                const s = this._midToIndex.get(e);
                let a;
                void 0 !== s && (a = this._mediaSections[s]), a ? (a = new c.OfferMediaSection({
                    iceParameters: this._iceParameters,
                    iceCandidates: this._iceCandidates,
                    dtlsParameters: this._dtlsParameters,
                    plainRtpParameters: this._plainRtpParameters,
                    planB: this._planB,
                    mid: e,
                    kind: t,
                    offerRtpParameters: r,
                    streamId: i,
                    trackId: n
                }), this._replaceMediaSection(a, e)) : (a = new c.OfferMediaSection({
                    iceParameters: this._iceParameters,
                    iceCandidates: this._iceCandidates,
                    dtlsParameters: this._dtlsParameters,
                    plainRtpParameters: this._plainRtpParameters,
                    planB: this._planB,
                    mid: e,
                    kind: t,
                    offerRtpParameters: r,
                    streamId: i,
                    trackId: n
                }), null === o ? this._addMediaSection(a) : this._replaceMediaSection(a, o))
            }
            disableMediaSection(e) {
                const t = this._midToIndex.get(e);
                if (void 0 === t) throw new u.default({
                    code: l.default.NOT_FOUND,
                    message: `no media section found with mid '${e}'`
                });
                this._mediaSections[t].disable()
            }
            closeMediaSection(e) {
                const t = this._midToIndex.get(e);
                if (void 0 === t) throw new u.default({
                    code: l.default.NOT_FOUND,
                    message: `no media section found with mid '${e}'`
                });
                const r = this._mediaSections[t];
                e === this._firstMid && d.Logger.debug("RemoteSdp", "closeMediaSection() | cannot close first media section, disabling it instead [mid:%s]", e), r.close()
            }
            planBStopReceiving({
                mid: e,
                offerRtpParameters: t
            }) {
                const r = this._midToIndex.get(e);
                if (void 0 === r) throw new u.default({
                    code: l.default.NOT_FOUND,
                    message: `no media section found with mid '${e}'`
                });
                const i = this._mediaSections[r];
                i.planBStopReceiving({
                    offerRtpParameters: t
                }), this._replaceMediaSection(i)
            }
            sendSctpAssociation({
                offerMediaObject: e
            }) {
                const t = new c.AnswerMediaSection({
                    iceParameters: this._iceParameters,
                    iceCandidates: this._iceCandidates,
                    dtlsParameters: this._dtlsParameters,
                    sctpParameters: this._sctpParameters,
                    plainRtpParameters: this._plainRtpParameters,
                    offerMediaObject: e
                });
                this._addMediaSection(t)
            }
            receiveSctpAssociation({
                oldDataChannelSpec: e = !1
            } = {}) {
                const t = new c.OfferMediaSection({
                    iceParameters: this._iceParameters,
                    iceCandidates: this._iceCandidates,
                    dtlsParameters: this._dtlsParameters,
                    sctpParameters: this._sctpParameters,
                    plainRtpParameters: this._plainRtpParameters,
                    mid: "datachannel",
                    kind: "application",
                    oldDataChannelSpec: e
                });
                this._addMediaSection(t)
            }
            getSdp() {
                return this._sdpObject.origin.sessionVersion++, this._sdpObject.media.sort((function(e, t) {
                    return e.mid - t.mid
                })), a.write(this._sdpObject)
            }
            _addMediaSection(e) {
                this._firstMid || (this._firstMid = e.mid), this._mediaSections.push(e), this._midToIndex.set(e.mid, this._mediaSections.length - 1), this._sdpObject.media.push(e.getObject()), this._regenerateBundleMids()
            }
            _replaceMediaSection(e, t) {
                if ("string" == typeof t) {
                    const r = this._midToIndex.get(t);
                    if (void 0 === r) throw new u.default({
                        code: l.default.NOT_FOUND,
                        message: `no media section found for reuseMid '${t}'`
                    });
                    const i = this._mediaSections[r];
                    this._mediaSections[r] = e, this._midToIndex.delete(i.mid), this._midToIndex.set(e.mid, r), this._sdpObject.media[r] = e.getObject(), this._regenerateBundleMids()
                } else {
                    const t = this._midToIndex.get(e.mid);
                    if (void 0 === t) throw new u.default({
                        code: l.default.NOT_FOUND,
                        message: `no media section found with mid '${e.mid}'`
                    });
                    this._mediaSections[t] = e, this._sdpObject.media[t] = e.getObject()
                }
            }
            _regenerateBundleMids() {
                this._dtlsParameters && (this._sdpObject.groups[0].mids = this._mediaSections.filter(e => !e.closed).map(e => e.mid).join(" "))
            }
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.DataReport = void 0;
        const i = r(36),
            n = r(37),
            o = r(12),
            s = r(38);
        let a = "https://statistic.live.126.net/statics/report/common/form";
        t.DataReport = class {
            constructor(e) {
                this.configs = e || {};
                const t = e.adapterRef;
                e.sdkRef;
                this.adapterRef = t;
                let r = t.instance,
                    i = t.channelInfo || {},
                    {
                        sessionConfig: o = {}
                    } = i;
                this.cid = i.cid || i.channelId || 0, this.uid = i.uid || 0;
                let s = this.adapterRef.state.startSessionTime || Date.now();
                const a = r._params && r._params.appkey;
                this.time = i.clientNtpTime - i.T4, this.common = {
                    name: "common",
                    ver: "2.0",
                    sdk_type: "nrtc2",
                    session_id: n(this.cid + ":" + this.uid + ":" + s),
                    app_key: a
                }, this.eventKeys = [], this.eventMap = {}, this.api = [], this.heartbeat = null
            }
            addEvent(e, t) {
                return -1 == this.eventKeys.indexOf(e) && this.eventKeys.push(e), t.time ? t.time = t.time + this.time : (this.adapterRef.logger.warn(`addEvent:事件${e}没有time属性。使用当前时间戳`), t.time = Date.now()), this.eventMap[e] = t, this
            }
            updateCommon(e) {
                return Object.assign(this.common, e), this
            }
            setHeartbeat(e) {
                this.heartbeat = e;
                const t = Object.keys(this.adapterRef.apiEvent),
                    r = Object.keys(this.adapterRef.apiEvents),
                    i = t.concat(r.filter(e => !t.includes(e)));
                let n = [];
                for (let e in i) {
                    const t = i[e];
                    this.adapterRef.apiEvents[t] && this.adapterRef.apiEvents[t].length ? (n = n.concat(this.adapterRef.apiEvents[t]), this.adapterRef.apiEvents[t] = []) : this.adapterRef.apiEvent[t] && this.adapterRef.apiEvent[t].length && (n = n.concat(this.adapterRef.apiEvent[t]), this.adapterRef.apiEvent[t] = [])
                }
                return this.api = this.api.concat(n), this
            }
            setNetworkChange(e) {
                return this.addEvent("networkChange", e), this
            }
            setLogin(e) {
                var t, r, i;
                e.sdk_ver = e.sdk_ver || o.SDK_VERSION, e.platform = e.platform || "Web", e.app_key = e.app_key || this.common.app_key, e.meeting_mode = e.meeting_mode || 1, e.model = e.model, e.build = o.BUILD, e.supported_codec_send = null === (t = this.adapterRef.mediaCapability.supportedCodecSend) || void 0 === t ? void 0 : t.join(","), e.supported_codec_recv = null === (r = this.adapterRef.mediaCapability.supportedCodecRecv) || void 0 === r ? void 0 : r.join(","), e.preferred_codec_send = null === (i = this.adapterRef.mediaCapability.preferredCodecSend.video) || void 0 === i ? void 0 : i.join(","), e.extra_info = JSON.stringify({
                    userAgent: s.USER_AGENT
                }), this.addEvent("login", e)
            }
            setRelogin(e) {
                this.addEvent("relogin", e)
            }
            setLogout(e) {
                this.addEvent("logout", e)
            }
            deviceAbnormal(e) {
                this.addEvent("deviceAbnormal", e)
            }
            setDisconnect(e) {
                this.addEvent("disconnect", e)
            }
            setRecvFirstFrame(e) {
                this.addEvent("recvFirstFrame", e)
            }
            setSendFirstPackage(e) {
                this.addEvent("firstPacketSent", e)
            }
            setRecvFirstPackage(e) {
                this.addEvent("recvFirstPackage", e)
            }
            setFunction(e) {
                this.addEvent("function", e)
            }
            reset() {
                this.eventKeys = [], this.api = [], this.heartbeat = null
            }
            send(e) {
                let t = {
                    common: this.common
                };
                if (e || (e = this.eventKeys), this.heartbeat && (t.heartbeat = this.heartbeat, this.api.length && (this.api.forEach(e => {
                        e.uid || (e.uid = this.adapterRef.channelInfo && this.adapterRef.channelInfo.uid), e.cid || (e.cid = this.adapterRef.channelInfo && this.adapterRef.channelInfo.cid)
                    }), t.event = {
                        apiEvent: this.api
                    }, this.api = [])), e) {
                    if (e.length) {
                        let r = 0,
                            i = {};
                        for (let t = e.length - 1; t >= 0; t--) {
                            const n = e[t];
                            this.eventMap[n] && (r++, i[n] = this.eventMap[n], delete this.eventMap[n], e.splice(t, 1))
                        }
                        r && (t.event = i)
                    }
                } else if (!this.heartbeat) return this;
                return this.adapterRef.instance._params.neRtcServerAddresses.statisticsServer && (a = this.adapterRef.instance._params.neRtcServerAddresses.statisticsServer), i.ajax({
                    type: "post",
                    url: a,
                    data: t,
                    header: {
                        sdktype: this.common.sdk_type,
                        appkey: this.common.app_key,
                        platform: "web",
                        sdkver: o.SDK_VERSION
                    }
                }).then(t => {
                    e === this.eventKeys && this.reset()
                }).catch(e => {
                    this.adapterRef.logger.log("dataReport, send error: ", e.name, e.message, e), this.reset()
                }), this
            }
        }
    }, function(e, t, r) {
        "use strict";
        var i = e.exports = r(223);
        i.build = "light", i.load = function(e, t, r) {
            return "function" == typeof t ? (r = t, t = new i.Root) : t || (t = new i.Root), t.load(e, r)
        }, i.loadSync = function(e, t) {
            return t || (t = new i.Root), t.loadSync(e)
        }, i.encoder = r(121), i.decoder = r(122), i.verifier = r(123), i.converter = r(124), i.ReflectionObject = r(23), i.Namespace = r(34), i.Root = r(76), i.Enum = r(6), i.Type = r(71), i.Field = r(19), i.OneOf = r(35), i.MapField = r(72), i.Service = r(73), i.Method = r(74), i.Message = r(75), i.wrappers = r(125), i.types = r(24), i.util = r(2), i.ReflectionObject._configure(i.Root), i.Namespace._configure(i.Type, i.Service, i.Enum), i.Root._configure(i.Type), i.Field._configure(i.Type)
    }, function(e, t, r) {
        "use strict";
        e.exports = function(e, t) {
            var r = new Array(arguments.length - 1),
                i = 0,
                n = 2,
                o = !0;
            for (; n < arguments.length;) r[i++] = arguments[n++];
            return new Promise((function(n, s) {
                r[i] = function(e) {
                    if (o)
                        if (o = !1, e) s(e);
                        else {
                            for (var t = new Array(arguments.length - 1), r = 0; r < t.length;) t[r++] = arguments[r];
                            n.apply(null, t)
                        }
                };
                try {
                    e.apply(t || null, r)
                } catch (e) {
                    o && (o = !1, s(e))
                }
            }))
        }
    }, function(module, exports, __webpack_require__) {
        "use strict";

        function inquire(moduleName) {
            try {
                var mod = eval("quire".replace(/^/, "re"))(moduleName);
                if (mod && (mod.length || Object.keys(mod).length)) return mod
            } catch (e) {}
            return null
        }
        module.exports = inquire
    }, function(e, t, r) {
        "use strict";
        t.Service = r(232)
    }, function(e, t, r) {
        "use strict";
        e.exports = {}
    }, function(e, t, r) {
        "use strict";
        e.exports = function(e) {
            for (var t, r = o.codegen(["m", "w"], e.name + "$encode")("if(!w)")("w=Writer.create()"), a = e.fieldsArray.slice().sort(o.compareFieldsById), d = 0; d < a.length; ++d) {
                var c = a[d].resolve(),
                    u = e._fieldsArray.indexOf(c),
                    l = c.resolvedType instanceof i ? "int32" : c.type,
                    p = n.basic[l];
                t = "m" + o.safeProp(c.name), c.map ? (r("if(%s!=null&&Object.hasOwnProperty.call(m,%j)){", t, c.name)("for(var ks=Object.keys(%s),i=0;i<ks.length;++i){", t)("w.uint32(%i).fork().uint32(%i).%s(ks[i])", (c.id << 3 | 2) >>> 0, 8 | n.mapKey[c.keyType], c.keyType), void 0 === p ? r("types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()", u, t) : r(".uint32(%i).%s(%s[ks[i]]).ldelim()", 16 | p, l, t), r("}")("}")) : c.repeated ? (r("if(%s!=null&&%s.length){", t, t), c.packed && void 0 !== n.packed[l] ? r("w.uint32(%i).fork()", (c.id << 3 | 2) >>> 0)("for(var i=0;i<%s.length;++i)", t)("w.%s(%s[i])", l, t)("w.ldelim()") : (r("for(var i=0;i<%s.length;++i)", t), void 0 === p ? s(r, c, u, t + "[i]") : r("w.uint32(%i).%s(%s[i])", (c.id << 3 | p) >>> 0, l, t)), r("}")) : (c.optional && r("if(%s!=null&&Object.hasOwnProperty.call(m,%j))", t, c.name), void 0 === p ? s(r, c, u, t) : r("w.uint32(%i).%s(%s)", (c.id << 3 | p) >>> 0, l, t))
            }
            return r("return w")
        };
        var i = r(6),
            n = r(24),
            o = r(2);

        function s(e, t, r, i) {
            return t.resolvedType.group ? e("types[%i].encode(%s,w.uint32(%i)).uint32(%i)", r, i, (t.id << 3 | 3) >>> 0, (t.id << 3 | 4) >>> 0) : e("types[%i].encode(%s,w.uint32(%i).fork()).ldelim()", r, i, (t.id << 3 | 2) >>> 0)
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = function(e) {
            var t = o.codegen(["r", "l"], e.name + "$decode")("if(!(r instanceof Reader))")("r=Reader.create(r)")("var c=l===undefined?r.len:r.pos+l,m=new this.ctor" + (e.fieldsArray.filter((function(e) {
                return e.map
            })).length ? ",k,value" : ""))("while(r.pos<c){")("var t=r.uint32()");
            e.group && t("if((t&7)===4)")("break");
            t("switch(t>>>3){");
            for (var r = 0; r < e.fieldsArray.length; ++r) {
                var a = e._fieldsArray[r].resolve(),
                    d = a.resolvedType instanceof i ? "int32" : a.type,
                    c = "m" + o.safeProp(a.name);
                t("case %i:", a.id), a.map ? (t("if(%s===util.emptyObject)", c)("%s={}", c)("var c2 = r.uint32()+r.pos"), void 0 !== n.defaults[a.keyType] ? t("k=%j", n.defaults[a.keyType]) : t("k=null"), void 0 !== n.defaults[d] ? t("value=%j", n.defaults[d]) : t("value=null"), t("while(r.pos<c2){")("var tag2=r.uint32()")("switch(tag2>>>3){")("case 1: k=r.%s(); break", a.keyType)("case 2:"), void 0 === n.basic[d] ? t("value=types[%i].decode(r,r.uint32())", r) : t("value=r.%s()", d), t("break")("default:")("r.skipType(tag2&7)")("break")("}")("}"), void 0 !== n.long[a.keyType] ? t('%s[typeof k==="object"?util.longToHash(k):k]=value', c) : t("%s[k]=value", c)) : a.repeated ? (t("if(!(%s&&%s.length))", c, c)("%s=[]", c), void 0 !== n.packed[d] && t("if((t&7)===2){")("var c2=r.uint32()+r.pos")("while(r.pos<c2)")("%s.push(r.%s())", c, d)("}else"), void 0 === n.basic[d] ? t(a.resolvedType.group ? "%s.push(types[%i].decode(r))" : "%s.push(types[%i].decode(r,r.uint32()))", c, r) : t("%s.push(r.%s())", c, d)) : void 0 === n.basic[d] ? t(a.resolvedType.group ? "%s=types[%i].decode(r)" : "%s=types[%i].decode(r,r.uint32())", c, r) : t("%s=r.%s()", c, d), t("break")
            }
            for (t("default:")("r.skipType(t&7)")("break")("}")("}"), r = 0; r < e._fieldsArray.length; ++r) {
                var u = e._fieldsArray[r];
                u.required && t("if(!m.hasOwnProperty(%j))", u.name)("throw util.ProtocolError(%j,{instance:m})", s(u))
            }
            return t("return m")
        };
        var i = r(6),
            n = r(24),
            o = r(2);

        function s(e) {
            return "missing required '" + e.name + "'"
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = function(e) {
            var t = n.codegen(["m"], e.name + "$verify")('if(typeof m!=="object"||m===null)')("return%j", "object expected"),
                r = e.oneofsArray,
                i = {};
            r.length && t("var p={}");
            for (var d = 0; d < e.fieldsArray.length; ++d) {
                var c = e._fieldsArray[d].resolve(),
                    u = "m" + n.safeProp(c.name);
                if (c.optional && t("if(%s!=null&&m.hasOwnProperty(%j)){", u, c.name), c.map) t("if(!util.isObject(%s))", u)("return%j", o(c, "object"))("var k=Object.keys(%s)", u)("for(var i=0;i<k.length;++i){"), a(t, c, "k[i]"), s(t, c, d, u + "[k[i]]")("}");
                else if (c.repeated) t("if(!Array.isArray(%s))", u)("return%j", o(c, "array"))("for(var i=0;i<%s.length;++i){", u), s(t, c, d, u + "[i]")("}");
                else {
                    if (c.partOf) {
                        var l = n.safeProp(c.partOf.name);
                        1 === i[c.partOf.name] && t("if(p%s===1)", l)("return%j", c.partOf.name + ": multiple values"), i[c.partOf.name] = 1, t("p%s=1", l)
                    }
                    s(t, c, d, u)
                }
                c.optional && t("}")
            }
            return t("return null")
        };
        var i = r(6),
            n = r(2);

        function o(e, t) {
            return e.name + ": " + t + (e.repeated && "array" !== t ? "[]" : e.map && "object" !== t ? "{k:" + e.keyType + "}" : "") + " expected"
        }

        function s(e, t, r, n) {
            if (t.resolvedType)
                if (t.resolvedType instanceof i) {
                    e("switch(%s){", n)("default:")("return%j", o(t, "enum value"));
                    for (var s = Object.keys(t.resolvedType.values), a = 0; a < s.length; ++a) e("case %i:", t.resolvedType.values[s[a]]);
                    e("break")("}")
                } else e("{")("var e=types[%i].verify(%s);", r, n)("if(e)")("return%j+e", t.name + ".")("}");
            else switch (t.type) {
                case "int32":
                case "uint32":
                case "sint32":
                case "fixed32":
                case "sfixed32":
                    e("if(!util.isInteger(%s))", n)("return%j", o(t, "integer"));
                    break;
                case "int64":
                case "uint64":
                case "sint64":
                case "fixed64":
                case "sfixed64":
                    e("if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))", n, n, n, n)("return%j", o(t, "integer|Long"));
                    break;
                case "float":
                case "double":
                    e('if(typeof %s!=="number")', n)("return%j", o(t, "number"));
                    break;
                case "bool":
                    e('if(typeof %s!=="boolean")', n)("return%j", o(t, "boolean"));
                    break;
                case "string":
                    e("if(!util.isString(%s))", n)("return%j", o(t, "string"));
                    break;
                case "bytes":
                    e('if(!(%s&&typeof %s.length==="number"||util.isString(%s)))', n, n, n)("return%j", o(t, "buffer"))
            }
            return e
        }

        function a(e, t, r) {
            switch (t.keyType) {
                case "int32":
                case "uint32":
                case "sint32":
                case "fixed32":
                case "sfixed32":
                    e("if(!util.key32Re.test(%s))", r)("return%j", o(t, "integer key"));
                    break;
                case "int64":
                case "uint64":
                case "sint64":
                case "fixed64":
                case "sfixed64":
                    e("if(!util.key64Re.test(%s))", r)("return%j", o(t, "integer|Long key"));
                    break;
                case "bool":
                    e("if(!util.key2Re.test(%s))", r)("return%j", o(t, "boolean key"))
            }
            return e
        }
    }, function(e, t, r) {
        "use strict";
        var i = t,
            n = r(6),
            o = r(2);

        function s(e, t, r, i) {
            if (t.resolvedType)
                if (t.resolvedType instanceof n) {
                    e("switch(d%s){", i);
                    for (var o = t.resolvedType.values, s = Object.keys(o), a = 0; a < s.length; ++a) t.repeated && o[s[a]] === t.typeDefault && e("default:"), e("case%j:", s[a])("case %i:", o[s[a]])("m%s=%j", i, o[s[a]])("break");
                    e("}")
                } else e('if(typeof d%s!=="object")', i)("throw TypeError(%j)", t.fullName + ": object expected")("m%s=types[%i].fromObject(d%s)", i, r, i);
            else {
                var d = !1;
                switch (t.type) {
                    case "double":
                    case "float":
                        e("m%s=Number(d%s)", i, i);
                        break;
                    case "uint32":
                    case "fixed32":
                        e("m%s=d%s>>>0", i, i);
                        break;
                    case "int32":
                    case "sint32":
                    case "sfixed32":
                        e("m%s=d%s|0", i, i);
                        break;
                    case "uint64":
                        d = !0;
                    case "int64":
                    case "sint64":
                    case "fixed64":
                    case "sfixed64":
                        e("if(util.Long)")("(m%s=util.Long.fromValue(d%s)).unsigned=%j", i, i, d)('else if(typeof d%s==="string")', i)("m%s=parseInt(d%s,10)", i, i)('else if(typeof d%s==="number")', i)("m%s=d%s", i, i)('else if(typeof d%s==="object")', i)("m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)", i, i, i, d ? "true" : "");
                        break;
                    case "bytes":
                        e('if(typeof d%s==="string")', i)("util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)", i, i, i)("else if(d%s.length)", i)("m%s=d%s", i, i);
                        break;
                    case "string":
                        e("m%s=String(d%s)", i, i);
                        break;
                    case "bool":
                        e("m%s=Boolean(d%s)", i, i)
                }
            }
            return e
        }

        function a(e, t, r, i) {
            if (t.resolvedType) t.resolvedType instanceof n ? e("d%s=o.enums===String?types[%i].values[m%s]:m%s", i, r, i, i) : e("d%s=types[%i].toObject(m%s,o)", i, r, i);
            else {
                var o = !1;
                switch (t.type) {
                    case "double":
                    case "float":
                        e("d%s=o.json&&!isFinite(m%s)?String(m%s):m%s", i, i, i, i);
                        break;
                    case "uint64":
                        o = !0;
                    case "int64":
                    case "sint64":
                    case "fixed64":
                    case "sfixed64":
                        e('if(typeof m%s==="number")', i)("d%s=o.longs===String?String(m%s):m%s", i, i, i)("else")("d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s", i, i, i, i, o ? "true" : "", i);
                        break;
                    case "bytes":
                        e("d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s", i, i, i, i, i);
                        break;
                    default:
                        e("d%s=m%s", i, i)
                }
            }
            return e
        }
        i.fromObject = function(e) {
            var t = e.fieldsArray,
                r = o.codegen(["d"], e.name + "$fromObject")("if(d instanceof this.ctor)")("return d");
            if (!t.length) return r("return new this.ctor");
            r("var m=new this.ctor");
            for (var i = 0; i < t.length; ++i) {
                var a = t[i].resolve(),
                    d = o.safeProp(a.name);
                a.map ? (r("if(d%s){", d)('if(typeof d%s!=="object")', d)("throw TypeError(%j)", a.fullName + ": object expected")("m%s={}", d)("for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){", d), s(r, a, i, d + "[ks[i]]")("}")("}")) : a.repeated ? (r("if(d%s){", d)("if(!Array.isArray(d%s))", d)("throw TypeError(%j)", a.fullName + ": array expected")("m%s=[]", d)("for(var i=0;i<d%s.length;++i){", d), s(r, a, i, d + "[i]")("}")("}")) : (a.resolvedType instanceof n || r("if(d%s!=null){", d), s(r, a, i, d), a.resolvedType instanceof n || r("}"))
            }
            return r("return m")
        }, i.toObject = function(e) {
            var t = e.fieldsArray.slice().sort(o.compareFieldsById);
            if (!t.length) return o.codegen()("return {}");
            for (var r = o.codegen(["m", "o"], e.name + "$toObject")("if(!o)")("o={}")("var d={}"), i = [], s = [], d = [], c = 0; c < t.length; ++c) t[c].partOf || (t[c].resolve().repeated ? i : t[c].map ? s : d).push(t[c]);
            if (i.length) {
                for (r("if(o.arrays||o.defaults){"), c = 0; c < i.length; ++c) r("d%s=[]", o.safeProp(i[c].name));
                r("}")
            }
            if (s.length) {
                for (r("if(o.objects||o.defaults){"), c = 0; c < s.length; ++c) r("d%s={}", o.safeProp(s[c].name));
                r("}")
            }
            if (d.length) {
                for (r("if(o.defaults){"), c = 0; c < d.length; ++c) {
                    var u = d[c],
                        l = o.safeProp(u.name);
                    if (u.resolvedType instanceof n) r("d%s=o.enums===String?%j:%j", l, u.resolvedType.valuesById[u.typeDefault], u.typeDefault);
                    else if (u.long) r("if(util.Long){")("var n=new util.Long(%i,%i,%j)", u.typeDefault.low, u.typeDefault.high, u.typeDefault.unsigned)("d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n", l)("}else")("d%s=o.longs===String?%j:%i", l, u.typeDefault.toString(), u.typeDefault.toNumber());
                    else if (u.bytes) {
                        var p = "[" + Array.prototype.slice.call(u.typeDefault).join(",") + "]";
                        r("if(o.bytes===String)d%s=%j", l, String.fromCharCode.apply(String, u.typeDefault))("else{")("d%s=%s", l, p)("if(o.bytes!==Array)d%s=util.newBuffer(d%s)", l, l)("}")
                    } else r("d%s=%j", l, u.typeDefault)
                }
                r("}")
            }
            var f = !1;
            for (c = 0; c < t.length; ++c) {
                u = t[c];
                var h = e._fieldsArray.indexOf(u);
                l = o.safeProp(u.name);
                u.map ? (f || (f = !0, r("var ks2")), r("if(m%s&&(ks2=Object.keys(m%s)).length){", l, l)("d%s={}", l)("for(var j=0;j<ks2.length;++j){"), a(r, u, h, l + "[ks2[j]]")("}")) : u.repeated ? (r("if(m%s&&m%s.length){", l, l)("d%s=[]", l)("for(var j=0;j<m%s.length;++j){", l), a(r, u, h, l + "[j]")("}")) : (r("if(m%s!=null&&m.hasOwnProperty(%j)){", l, u.name), a(r, u, h, l), u.partOf && r("if(o.oneofs)")("d%s=%j", o.safeProp(u.partOf.name), u.name)), r("}")
            }
            return r("return d")
        }
    }, function(e, t, r) {
        "use strict";
        var i = t,
            n = r(75);
        i[".google.protobuf.Any"] = {
            fromObject: function(e) {
                if (e && e["@type"]) {
                    var t = e["@type"].substring(e["@type"].lastIndexOf("/") + 1),
                        r = this.lookup(t);
                    if (r) {
                        var i = "." === e["@type"].charAt(0) ? e["@type"].substr(1) : e["@type"];
                        return -1 === i.indexOf("/") && (i = "/" + i), this.create({
                            type_url: i,
                            value: r.encode(r.fromObject(e)).finish()
                        })
                    }
                }
                return this.fromObject(e)
            },
            toObject: function(e, t) {
                var r = "",
                    i = "";
                if (t && t.json && e.type_url && e.value) {
                    i = e.type_url.substring(e.type_url.lastIndexOf("/") + 1), r = e.type_url.substring(0, e.type_url.lastIndexOf("/") + 1);
                    var o = this.lookup(i);
                    o && (e = o.decode(e.value))
                }
                if (!(e instanceof this.ctor) && e instanceof n) {
                    var s = e.$type.toObject(e, t);
                    return "" === r && (r = "type.googleapis.com/"), i = r + ("." === e.$type.fullName[0] ? e.$type.fullName.substr(1) : e.$type.fullName), s["@type"] = i, s
                }
                return this.toObject(e, t)
            }
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = f;
        var i = /[\s{}=;:[\],'"()<>]/g,
            n = /(?:"([^"\\]*(?:\\.[^"\\]*)*)")/g,
            o = /(?:'([^'\\]*(?:\\.[^'\\]*)*)')/g,
            s = /^ *[*/]+ */,
            a = /^\s*\*?\/*/,
            d = /\n/g,
            c = /\s/,
            u = /\\(.?)/g,
            l = {
                0: "\0",
                r: "\r",
                n: "\n",
                t: "\t"
            };

        function p(e) {
            return e.replace(u, (function(e, t) {
                switch (t) {
                    case "\\":
                    case "":
                        return t;
                    default:
                        return l[t] || ""
                }
            }))
        }

        function f(e, t) {
            e = e.toString();
            var r = 0,
                u = e.length,
                l = 1,
                f = null,
                h = null,
                m = 0,
                g = !1,
                v = !1,
                y = [],
                _ = null;

            function S(e) {
                return Error("illegal " + e + " (line " + l + ")")
            }

            function b(t) {
                return e.charAt(t)
            }

            function R(r, i, n) {
                f = e.charAt(r++), m = l, g = !1, v = n;
                var o, c = r - (t ? 2 : 3);
                do {
                    if (--c < 0 || "\n" === (o = e.charAt(c))) {
                        g = !0;
                        break
                    }
                } while (" " === o || "\t" === o);
                for (var u = e.substring(r, i).split(d), p = 0; p < u.length; ++p) u[p] = u[p].replace(t ? a : s, "").trim();
                h = u.join("\n").trim()
            }

            function w(t) {
                var r = T(t),
                    i = e.substring(t, r);
                return /^\s*\/{1,2}/.test(i)
            }

            function T(e) {
                for (var t = e; t < u && "\n" !== b(t);) t++;
                return t
            }

            function E() {
                if (y.length > 0) return y.shift();
                if (_) return function() {
                    var t = "'" === _ ? o : n;
                    t.lastIndex = r - 1;
                    var i = t.exec(e);
                    if (!i) throw S("string");
                    return r = t.lastIndex, A(_), _ = null, p(i[1])
                }();
                var s, a, d, f, h, m = 0 === r;
                do {
                    if (r === u) return null;
                    for (s = !1; c.test(d = b(r));)
                        if ("\n" === d && (m = !0, ++l), ++r === u) return null;
                    if ("/" === b(r)) {
                        if (++r === u) throw S("comment");
                        if ("/" === b(r))
                            if (t) {
                                if (f = r, h = !1, w(r)) {
                                    h = !0;
                                    do {
                                        if ((r = T(r)) === u) break;
                                        r++
                                    } while (w(r))
                                } else r = Math.min(u, T(r) + 1);
                                h && R(f, r, m), l++, s = !0
                            } else {
                                for (h = "/" === b(f = r + 1);
                                    "\n" !== b(++r);)
                                    if (r === u) return null;
                                ++r, h && R(f, r - 1, m), ++l, s = !0
                            }
                        else {
                            if ("*" !== (d = b(r))) return "/";
                            f = r + 1, h = t || "*" === b(f);
                            do {
                                if ("\n" === d && ++l, ++r === u) throw S("comment");
                                a = d, d = b(r)
                            } while ("*" !== a || "/" !== d);
                            ++r, h && R(f, r - 2, m), s = !0
                        }
                    }
                } while (s);
                var g = r;
                if (i.lastIndex = 0, !i.test(b(g++)))
                    for (; g < u && !i.test(b(g));) ++g;
                var v = e.substring(r, r = g);
                return '"' !== v && "'" !== v || (_ = v), v
            }

            function A(e) {
                y.push(e)
            }

            function O() {
                if (!y.length) {
                    var e = E();
                    if (null === e) return null;
                    A(e)
                }
                return y[0]
            }
            return Object.defineProperty({
                next: E,
                peek: O,
                push: A,
                skip: function(e, t) {
                    var r = O();
                    if (r === e) return E(), !0;
                    if (!t) throw S("token '" + r + "', '" + e + "' expected");
                    return !1
                },
                cmnt: function(e) {
                    var r = null;
                    return void 0 === e ? m === l - 1 && (t || "*" === f || g) && (r = v ? h : null) : (m < e && O(), m !== e || g || !t && "/" !== f || (r = v ? null : h)), r
                }
            }, "line", {
                get: function() {
                    return l
                }
            })
        }
        f.unescape = p
    }, function(module, exports, __webpack_require__) {
        (function(process, global) {
            var __WEBPACK_AMD_DEFINE_RESULT__;
            /*
             * [js-sha1]{@link https://github.com/emn178/js-sha1}
             *
             * @version 0.6.0
             * @author Chen, Yi-Cyuan [emn178@gmail.com]
             * @copyright Chen, Yi-Cyuan 2014-2017
             * @license MIT
             */
            ! function() {
                "use strict";
                var root = "object" == typeof window ? window : {},
                    NODE_JS = !root.JS_SHA1_NO_NODE_JS && "object" == typeof process && process.versions && process.versions.node;
                NODE_JS && (root = global);
                var COMMON_JS = !root.JS_SHA1_NO_COMMON_JS && "object" == typeof module && module.exports,
                    AMD = __webpack_require__(241),
                    HEX_CHARS = "0123456789abcdef".split(""),
                    EXTRA = [-2147483648, 8388608, 32768, 128],
                    SHIFT = [24, 16, 8, 0],
                    OUTPUT_TYPES = ["hex", "array", "digest", "arrayBuffer"],
                    blocks = [],
                    createOutputMethod = function(e) {
                        return function(t) {
                            return new Sha1(!0).update(t)[e]()
                        }
                    },
                    createMethod = function() {
                        var e = createOutputMethod("hex");
                        NODE_JS && (e = nodeWrap(e)), e.create = function() {
                            return new Sha1
                        }, e.update = function(t) {
                            return e.create().update(t)
                        };
                        for (var t = 0; t < OUTPUT_TYPES.length; ++t) {
                            var r = OUTPUT_TYPES[t];
                            e[r] = createOutputMethod(r)
                        }
                        return e
                    },
                    nodeWrap = function(method) {
                        var crypto = eval("require('crypto')"),
                            Buffer = eval("require('buffer').Buffer"),
                            nodeMethod = function(e) {
                                if ("string" == typeof e) return crypto.createHash("sha1").update(e, "utf8").digest("hex");
                                if (e.constructor === ArrayBuffer) e = new Uint8Array(e);
                                else if (void 0 === e.length) return method(e);
                                return crypto.createHash("sha1").update(new Buffer(e)).digest("hex")
                            };
                        return nodeMethod
                    };

                function Sha1(e) {
                    e ? (blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0, this.blocks = blocks) : this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], this.h0 = 1732584193, this.h1 = 4023233417, this.h2 = 2562383102, this.h3 = 271733878, this.h4 = 3285377520, this.block = this.start = this.bytes = this.hBytes = 0, this.finalized = this.hashed = !1, this.first = !0
                }
                Sha1.prototype.update = function(e) {
                    if (!this.finalized) {
                        var t = "string" != typeof e;
                        t && e.constructor === root.ArrayBuffer && (e = new Uint8Array(e));
                        for (var r, i, n = 0, o = e.length || 0, s = this.blocks; n < o;) {
                            if (this.hashed && (this.hashed = !1, s[0] = this.block, s[16] = s[1] = s[2] = s[3] = s[4] = s[5] = s[6] = s[7] = s[8] = s[9] = s[10] = s[11] = s[12] = s[13] = s[14] = s[15] = 0), t)
                                for (i = this.start; n < o && i < 64; ++n) s[i >> 2] |= e[n] << SHIFT[3 & i++];
                            else
                                for (i = this.start; n < o && i < 64; ++n)(r = e.charCodeAt(n)) < 128 ? s[i >> 2] |= r << SHIFT[3 & i++] : r < 2048 ? (s[i >> 2] |= (192 | r >> 6) << SHIFT[3 & i++], s[i >> 2] |= (128 | 63 & r) << SHIFT[3 & i++]) : r < 55296 || r >= 57344 ? (s[i >> 2] |= (224 | r >> 12) << SHIFT[3 & i++], s[i >> 2] |= (128 | r >> 6 & 63) << SHIFT[3 & i++], s[i >> 2] |= (128 | 63 & r) << SHIFT[3 & i++]) : (r = 65536 + ((1023 & r) << 10 | 1023 & e.charCodeAt(++n)), s[i >> 2] |= (240 | r >> 18) << SHIFT[3 & i++], s[i >> 2] |= (128 | r >> 12 & 63) << SHIFT[3 & i++], s[i >> 2] |= (128 | r >> 6 & 63) << SHIFT[3 & i++], s[i >> 2] |= (128 | 63 & r) << SHIFT[3 & i++]);
                            this.lastByteIndex = i, this.bytes += i - this.start, i >= 64 ? (this.block = s[16], this.start = i - 64, this.hash(), this.hashed = !0) : this.start = i
                        }
                        return this.bytes > 4294967295 && (this.hBytes += this.bytes / 4294967296 << 0, this.bytes = this.bytes % 4294967296), this
                    }
                }, Sha1.prototype.finalize = function() {
                    if (!this.finalized) {
                        this.finalized = !0;
                        var e = this.blocks,
                            t = this.lastByteIndex;
                        e[16] = this.block, e[t >> 2] |= EXTRA[3 & t], this.block = e[16], t >= 56 && (this.hashed || this.hash(), e[0] = this.block, e[16] = e[1] = e[2] = e[3] = e[4] = e[5] = e[6] = e[7] = e[8] = e[9] = e[10] = e[11] = e[12] = e[13] = e[14] = e[15] = 0), e[14] = this.hBytes << 3 | this.bytes >>> 29, e[15] = this.bytes << 3, this.hash()
                    }
                }, Sha1.prototype.hash = function() {
                    var e, t, r = this.h0,
                        i = this.h1,
                        n = this.h2,
                        o = this.h3,
                        s = this.h4,
                        a = this.blocks;
                    for (e = 16; e < 80; ++e) t = a[e - 3] ^ a[e - 8] ^ a[e - 14] ^ a[e - 16], a[e] = t << 1 | t >>> 31;
                    for (e = 0; e < 20; e += 5) r = (t = (i = (t = (n = (t = (o = (t = (s = (t = r << 5 | r >>> 27) + (i & n | ~i & o) + s + 1518500249 + a[e] << 0) << 5 | s >>> 27) + (r & (i = i << 30 | i >>> 2) | ~r & n) + o + 1518500249 + a[e + 1] << 0) << 5 | o >>> 27) + (s & (r = r << 30 | r >>> 2) | ~s & i) + n + 1518500249 + a[e + 2] << 0) << 5 | n >>> 27) + (o & (s = s << 30 | s >>> 2) | ~o & r) + i + 1518500249 + a[e + 3] << 0) << 5 | i >>> 27) + (n & (o = o << 30 | o >>> 2) | ~n & s) + r + 1518500249 + a[e + 4] << 0, n = n << 30 | n >>> 2;
                    for (; e < 40; e += 5) r = (t = (i = (t = (n = (t = (o = (t = (s = (t = r << 5 | r >>> 27) + (i ^ n ^ o) + s + 1859775393 + a[e] << 0) << 5 | s >>> 27) + (r ^ (i = i << 30 | i >>> 2) ^ n) + o + 1859775393 + a[e + 1] << 0) << 5 | o >>> 27) + (s ^ (r = r << 30 | r >>> 2) ^ i) + n + 1859775393 + a[e + 2] << 0) << 5 | n >>> 27) + (o ^ (s = s << 30 | s >>> 2) ^ r) + i + 1859775393 + a[e + 3] << 0) << 5 | i >>> 27) + (n ^ (o = o << 30 | o >>> 2) ^ s) + r + 1859775393 + a[e + 4] << 0, n = n << 30 | n >>> 2;
                    for (; e < 60; e += 5) r = (t = (i = (t = (n = (t = (o = (t = (s = (t = r << 5 | r >>> 27) + (i & n | i & o | n & o) + s - 1894007588 + a[e] << 0) << 5 | s >>> 27) + (r & (i = i << 30 | i >>> 2) | r & n | i & n) + o - 1894007588 + a[e + 1] << 0) << 5 | o >>> 27) + (s & (r = r << 30 | r >>> 2) | s & i | r & i) + n - 1894007588 + a[e + 2] << 0) << 5 | n >>> 27) + (o & (s = s << 30 | s >>> 2) | o & r | s & r) + i - 1894007588 + a[e + 3] << 0) << 5 | i >>> 27) + (n & (o = o << 30 | o >>> 2) | n & s | o & s) + r - 1894007588 + a[e + 4] << 0, n = n << 30 | n >>> 2;
                    for (; e < 80; e += 5) r = (t = (i = (t = (n = (t = (o = (t = (s = (t = r << 5 | r >>> 27) + (i ^ n ^ o) + s - 899497514 + a[e] << 0) << 5 | s >>> 27) + (r ^ (i = i << 30 | i >>> 2) ^ n) + o - 899497514 + a[e + 1] << 0) << 5 | o >>> 27) + (s ^ (r = r << 30 | r >>> 2) ^ i) + n - 899497514 + a[e + 2] << 0) << 5 | n >>> 27) + (o ^ (s = s << 30 | s >>> 2) ^ r) + i - 899497514 + a[e + 3] << 0) << 5 | i >>> 27) + (n ^ (o = o << 30 | o >>> 2) ^ s) + r - 899497514 + a[e + 4] << 0, n = n << 30 | n >>> 2;
                    this.h0 = this.h0 + r << 0, this.h1 = this.h1 + i << 0, this.h2 = this.h2 + n << 0, this.h3 = this.h3 + o << 0, this.h4 = this.h4 + s << 0
                }, Sha1.prototype.hex = function() {
                    this.finalize();
                    var e = this.h0,
                        t = this.h1,
                        r = this.h2,
                        i = this.h3,
                        n = this.h4;
                    return HEX_CHARS[e >> 28 & 15] + HEX_CHARS[e >> 24 & 15] + HEX_CHARS[e >> 20 & 15] + HEX_CHARS[e >> 16 & 15] + HEX_CHARS[e >> 12 & 15] + HEX_CHARS[e >> 8 & 15] + HEX_CHARS[e >> 4 & 15] + HEX_CHARS[15 & e] + HEX_CHARS[t >> 28 & 15] + HEX_CHARS[t >> 24 & 15] + HEX_CHARS[t >> 20 & 15] + HEX_CHARS[t >> 16 & 15] + HEX_CHARS[t >> 12 & 15] + HEX_CHARS[t >> 8 & 15] + HEX_CHARS[t >> 4 & 15] + HEX_CHARS[15 & t] + HEX_CHARS[r >> 28 & 15] + HEX_CHARS[r >> 24 & 15] + HEX_CHARS[r >> 20 & 15] + HEX_CHARS[r >> 16 & 15] + HEX_CHARS[r >> 12 & 15] + HEX_CHARS[r >> 8 & 15] + HEX_CHARS[r >> 4 & 15] + HEX_CHARS[15 & r] + HEX_CHARS[i >> 28 & 15] + HEX_CHARS[i >> 24 & 15] + HEX_CHARS[i >> 20 & 15] + HEX_CHARS[i >> 16 & 15] + HEX_CHARS[i >> 12 & 15] + HEX_CHARS[i >> 8 & 15] + HEX_CHARS[i >> 4 & 15] + HEX_CHARS[15 & i] + HEX_CHARS[n >> 28 & 15] + HEX_CHARS[n >> 24 & 15] + HEX_CHARS[n >> 20 & 15] + HEX_CHARS[n >> 16 & 15] + HEX_CHARS[n >> 12 & 15] + HEX_CHARS[n >> 8 & 15] + HEX_CHARS[n >> 4 & 15] + HEX_CHARS[15 & n]
                }, Sha1.prototype.toString = Sha1.prototype.hex, Sha1.prototype.digest = function() {
                    this.finalize();
                    var e = this.h0,
                        t = this.h1,
                        r = this.h2,
                        i = this.h3,
                        n = this.h4;
                    return [e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, r >> 24 & 255, r >> 16 & 255, r >> 8 & 255, 255 & r, i >> 24 & 255, i >> 16 & 255, i >> 8 & 255, 255 & i, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n]
                }, Sha1.prototype.array = Sha1.prototype.digest, Sha1.prototype.arrayBuffer = function() {
                    this.finalize();
                    var e = new ArrayBuffer(20),
                        t = new DataView(e);
                    return t.setUint32(0, this.h0), t.setUint32(4, this.h1), t.setUint32(8, this.h2), t.setUint32(12, this.h3), t.setUint32(16, this.h4), e
                };
                var exports = createMethod();
                COMMON_JS ? module.exports = exports : (root.sha1 = exports, AMD && (__WEBPACK_AMD_DEFINE_RESULT__ = function() {
                    return exports
                }.call(exports, __webpack_require__, exports, module), void 0 === __WEBPACK_AMD_DEFINE_RESULT__ || (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)))
            }()
        }).call(this, __webpack_require__(99), __webpack_require__(50))
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        const n = r(129),
            o = r(79),
            s = r(81),
            a = r(248),
            d = r(12),
            c = r(80),
            u = r(249),
            l = r(250),
            p = r(25),
            f = r(20),
            h = r(105),
            m = i(r(251)),
            g = i(r(1)),
            v = i(r(0)),
            y = r(13);
        let _;
        const S = {
            Logger: {
                enableLogUpload() {
                    m.default.enableLogUpload()
                },
                disableLogUpload() {
                    m.default.disableLogUpload()
                }
            },
            createClient(e) {
                p.checkExists({
                    tag: "createClient:ClientOptions",
                    value: e
                }), p.checkExists({
                    tag: "createClient:ClientOptions.appkey",
                    value: e.appkey
                });
                const t = new n.Client(Object.assign(e, {
                    apiList: [],
                    ref: S
                }));
                return y.getParameters().clients.push(t), _ || (_ = t), t
            },
            createStream(e) {
                if (p.checkExists({
                        tag: "createStream:options",
                        value: e
                    }), e.screenAudio && !e.screen) throw new g.default({
                    code: v.default.INVALID_OPERATION,
                    message: "createStream:screenAudio要与screen一起开启"
                });
                if (!e.client && _ && _.adapterRef.logger.warn("createStream: 未传入client参数。使用默认Client。"), _ || e.client) {
                    const t = new o.Stream(Object.assign(e, {
                        isRemote: !1,
                        client: e.client || _
                    }));
                    return y.getParameters().localStreams.push(t), t
                }
                return a.clientNotYetUninitialized
            },
            getDevices: (e = !1) => s.Device.getDevices({
                audioinput: !0,
                audiooutput: !0,
                videoinput: !0,
                requestPerm: e
            }),
            getCameras: (e = !1) => s.Device.getCameras(e),
            getMicrophones: (e = !1) => s.Device.getMicrophones(e),
            getSpeakers: (e = !1) => s.Device.getSpeakers(e),
            checkSystemRequirements() {
                var e = window.RTCPeerConnection || window.webkitRTCPeerConnection,
                    t = navigator.mediaDevices && navigator.mediaDevices.getUserMedia,
                    r = window.WebSocket;
                return !!e && !!t && !!r
            },
            getSupportedCodec: async () => await f.getSupportedCodecs(),
            getHandler: () => h.detectDevice(),
            getParameters: y.getParameters,
            setParameters: y.setParameters,
            destroy(e) {
                let t = e || _;
                t && t.destroy(), e || (_ = null)
            },
            CHAT_VIDEO_FRAME_RATE_NORMAL: c.VIDEO_FRAME_RATE.CHAT_VIDEO_FRAME_RATE_NORMAL,
            CHAT_VIDEO_FRAME_RATE_5: c.VIDEO_FRAME_RATE.CHAT_VIDEO_FRAME_RATE_5,
            CHAT_VIDEO_FRAME_RATE_10: c.VIDEO_FRAME_RATE.CHAT_VIDEO_FRAME_RATE_10,
            CHAT_VIDEO_FRAME_RATE_15: c.VIDEO_FRAME_RATE.CHAT_VIDEO_FRAME_RATE_15,
            CHAT_VIDEO_FRAME_RATE_20: c.VIDEO_FRAME_RATE.CHAT_VIDEO_FRAME_RATE_20,
            CHAT_VIDEO_FRAME_RATE_25: c.VIDEO_FRAME_RATE.CHAT_VIDEO_FRAME_RATE_25,
            VIDEO_QUALITY_180p: c.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_180p,
            VIDEO_QUALITY_480p: c.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_480p,
            VIDEO_QUALITY_720p: c.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_720p,
            VIDEO_QUALITY_1080p: c.NERTC_VIDEO_QUALITY.VIDEO_QUALITY_1080p,
            LIVE_STREAM_AUDIO_CODEC_PROFILE: u.LIVE_STREAM_AUDIO_CODEC_PROFILE,
            LIVE_STREAM_AUDIO_SAMPLE_RATE: u.LIVE_STREAM_AUDIO_SAMPLE_RATE,
            VIDEO_FRAME_RATE: c.VIDEO_FRAME_RATE,
            VIDEO_QUALITY: c.NERTC_VIDEO_QUALITY,
            NETWORK_STATUS: l.NETWORK_STATUS,
            VERSION: d.SDK_VERSION,
            BUILD: d.BUILD,
            ENV: d.ENV
        };
        e.exports = S, window.WebRTC2 = S
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Client = void 0;
        const n = r(130),
            o = r(25),
            s = r(52),
            a = r(77),
            d = i(r(1)),
            c = i(r(0)),
            u = r(12);
        r(11);
        class l extends n.Base {
            constructor(e) {
                super(e), window.addEventListener("pagehide", () => {
                    this.adapterRef.logger.log("离开页面之前，离开房间"), this.leave()
                }), this._roleInfo = {
                    userRole: 0,
                    audienceList: {}
                }, this._init(e), this.adapterRef.logger.info(`NERTC ${u.SDK_VERSION} ${u.BUILD}: 客户端创建成功。`)
            }
            _init(e) {
                const {
                    appkey: t = "",
                    token: r
                } = e;
                if (!t) throw this.adapterRef.logger.error("Client: init error: 请传入appkey"), new d.default({
                    code: c.default.INVALID_PARAMETER,
                    message: "请传入appkey"
                });
                this._params.appkey = t, this._params.token = r, this._roleInfo = {
                    userRole: 0,
                    audienceList: {}
                }
            }
            getUid() {
                return this.adapterRef.channelInfo && this.adapterRef.channelInfo.uid
            }
            getChannelInfo() {
                return this.adapterRef.channelInfo || {}
            }
            setLocalMediaPriority(e) {
                if (this.adapterRef.logger.log("setLocalMediaPriority, options: ", JSON.stringify(e)), "join" === this.adapterRef.channelStatus || "connectioning" === this.adapterRef.channelStatus) return this.adapterRef.logger.error("setLocalMediaPriority: 请在加入房间前调用"), "INVALID_OPERATION";
                const {
                    priority: t = 100,
                    preemtiveMode: r = !1
                } = e;
                if ("number" != typeof t || isNaN(t)) throw new d.default({
                    code: c.default.INVALID_PARAMETER,
                    message: "setLocalMediaPriority: priority is not Number"
                });
                this.adapterRef.userPriority = e
            }
            async join(e) {
                if (this.adapterRef.logger.log("加入频道, options: ", JSON.stringify(e, null, " ")), "join" === this.adapterRef.channelStatus || "connectioning" === this.adapterRef.channelStatus) return Promise.reject(new d.default({
                    code: c.default.REPEAT_JOIN,
                    message: "repeatedly join"
                }));
                if (!e.channelName) throw new d.default({
                    code: c.default.INVALID_PARAMETER,
                    message: "请填写房间名称"
                });
                if ("string" == typeof e.uid) this.adapterRef.logger.log("uid是string类型"), this.adapterRef.channelInfo.uidType = "string";
                else {
                    if ("number" != typeof e.uid) return this.adapterRef.logger.error("uid参数格式非法"), Promise.reject(new d.default({
                        code: c.default.INVALID_PARAMETER,
                        message: "uid is invalid"
                    }));
                    if (this.adapterRef.logger.log("uid是number类型"), this.adapterRef.channelInfo.uidType = "number", e.uid > Number.MAX_SAFE_INTEGER) throw new d.default({
                        code: c.default.INVALID_PARAMETER,
                        message: "uid is exceeds the scope of Number"
                    })
                }
                if (this.adapterRef.connectState.curState = "CONNECTING", this.adapterRef.connectState.prevState = "DISCONNECTED", this.adapterRef.instance.emit("connection-state-change", this.adapterRef.connectState), e.token && (this._params.token = e.token), this._params.JoinChannelRequestParam4WebRTC2 = {
                        startJoinTime: Date.now(),
                        appkey: this._params.appkey,
                        userRole: this._roleInfo.userRole,
                        channelName: e.channelName,
                        wssArr: e.wssArr,
                        uid: e.uid,
                        token: this._params.token,
                        joinChannelLiveConfig: e.joinChannelLiveConfig || {
                            liveEnable: !1
                        },
                        joinChannelRecordConfig: e.joinChannelRecordConfig || {
                            recordAudio: !1,
                            recordVideo: !1,
                            recordType: 0,
                            isHostSpeaker: !1
                        }
                    }, e.neRtcServerAddresses && (this._params.neRtcServerAddresses = {
                        channelServer: e.neRtcServerAddresses.channelServer || "",
                        statisticsServer: e.neRtcServerAddresses.statisticsServer || "",
                        roomServer: e.neRtcServerAddresses.roomServer || ""
                    }), this.setStartSessionTime(), this.initMode(), !this.adapterRef.mediaCapability.supportedCodecRecv || !this.adapterRef.mediaCapability.supportedCodecSend) try {
                    await this.adapterRef.mediaCapability.detect()
                } catch (e) {
                    this.adapterRef.logger.error("Failed to detect mediaCapability", e.name, e.message)
                }
                if (!this.adapterRef._meetings) throw new d.default({
                    code: c.default.NO_MEETINGS,
                    message: "meetings error"
                });
                return this.adapterRef._meetings.joinChannel(this._params.JoinChannelRequestParam4WebRTC2)
            }
            async leave() {
                this.adapterRef.logger.log("离开频道"), "join" !== this.adapterRef.channelStatus && "connectioning" !== this.adapterRef.channelStatus && this.adapterRef.logger.log(" 状态: ", this.adapterRef.channelStatus), this.adapterRef.connectState.prevState = this.adapterRef.connectState.curState, this.adapterRef.connectState.curState = "DISCONNECTING", this.adapterRef.instance.emit("connection-state-change", this.adapterRef.connectState), this.setEndSessionTime(), this.adapterRef._meetings && this.adapterRef._meetings.leaveChannel(), Number(sessionStorage.getItem("uploadLogEnabled")) && (this.upLoadParam = {
                    uploadAppkey: this.adapterRef.channelInfo.appkey,
                    uploadUid: this.adapterRef.channelInfo.uid,
                    uploadCid: this.adapterRef.channelInfo.cid
                }, setTimeout(this.startUpload, 3e3, this.upLoadParam))
            }
            startUpload(e) {
                a.logController.startUploadLog(e)
            }
            async leaveRts() {
                this.adapterRef.logger.log("离开频道"), "join" !== this.adapterRef.channelStatus && "connectioning" !== this.adapterRef.channelStatus && this.adapterRef.logger.log(" 状态: ", this.adapterRef.channelStatus), this.adapterRef.connectState.prevState = this.adapterRef.connectState.curState, this.adapterRef.connectState.curState = "DISCONNECTING", this.adapterRef.instance.emit("connection-state-change", this.adapterRef.connectState), this.setEndSessionTime(), this.adapterRef._meetings && this.adapterRef._meetings.leaveChannel()
            }
            async publish(e) {
                o.checkExists({
                    tag: "client.publish:stream",
                    value: e
                });
                let t = "";
                "CONNECTED" !== this.adapterRef.connectState.curState ? (this.adapterRef.logger.error("publish: 当前不在频道中，可能是没有加入频道或者是网络波动导致暂时断开连接"), t = "INVALID_OPERATION") : e && (e.audio || e.video || e.screen || e.screenAudio) ? 1 === this._roleInfo.userRole && (this.adapterRef.logger.error("publish：观众禁止Publish，请先使用setClientRole设为主播"), t = "INVALID_OPERATION") : (this.adapterRef.logger.error("publish: 传入的 stream 格式非法，没有媒体数据"), t = "INVALID_LOCAL_STREAM");
                const r = JSON.stringify({
                    videoProfile: e.videoProfile,
                    audio: e.audio,
                    screenAudio: e.screenAudio,
                    audioProfile: e.audioProfile,
                    cameraId: e.cameraId,
                    microphoneId: e.microphoneId,
                    pubStatus: e.pubStatus,
                    renderMode: e.renderMode,
                    screen: e.screen,
                    screenProfile: e.screenProfile,
                    reason: t
                }, null, " ");
                if (t) {
                    if (this.apiFrequencyControl({
                            name: "publish",
                            code: -1,
                            param: r
                        }), "INVALID_OPERATION" === t) return Promise.reject(new d.default({
                        code: c.default.INVALID_OPERATION,
                        message: "invalid operation"
                    }));
                    if ("INVALID_LOCAL_STREAM" === t) return Promise.reject(new d.default({
                        code: c.default.NO_LOCALSTREAM,
                        message: "no localStream"
                    }))
                }
                try {
                    if (!this.adapterRef._mediasoup) throw new d.default({
                        code: c.default.NO_MEDIASERVER,
                        message: "media server error 4"
                    });
                    this.bindLocalStream(e), await this.adapterRef._mediasoup.createProduce(e), this.apiFrequencyControl({
                        name: "publish",
                        code: 0,
                        param: r
                    })
                } catch (e) {
                    this.adapterRef.logger.error("API调用失败：Client:publish", e.name, e.message, e.stack, ...arguments), this.apiFrequencyControl({
                        name: "publish",
                        code: -1,
                        param: r
                    })
                }
            }
            async unpublish(e) {
                o.checkExists({
                    tag: "client.unpublish:stream",
                    value: e
                });
                let t = "";
                "CONNECTED" !== this.adapterRef.connectState.curState && (this.adapterRef.logger.error("publish: 当前不在频道中，可能是没有加入频道或者是网络波动导致暂时断开连接"), t = "INVALID_OPERATION");
                const r = JSON.stringify({
                    videoProfile: e && e.videoProfile,
                    audio: e && e.audio,
                    audioProfile: e && e.audioProfile,
                    cameraId: e && e.cameraId,
                    microphoneId: e && e.microphoneId,
                    pubStatus: e && e.pubStatus,
                    renderMode: e && e.renderMode,
                    screen: e && e.screen,
                    screenProfile: e && e.screenProfile,
                    reason: t
                }, null, " ");
                if (t) {
                    if (this.apiFrequencyControl({
                            name: "publish",
                            code: -1,
                            param: r
                        }), "INVALID_OPERATION" === t) return Promise.reject(new d.default({
                        code: c.default.INVALID_OPERATION,
                        message: "invalid operation"
                    }));
                    if ("INVALID_LOCAL_STREAM" === t) return Promise.reject(new d.default({
                        code: c.default.NO_LOCALSTREAM,
                        message: "no localStream"
                    }))
                }
                this.adapterRef.logger.log("开始取消发布本地流");
                try {
                    if (!this.adapterRef._mediasoup) throw new d.default({
                        code: c.default.NO_MEDIASERVER,
                        message: "media server error 5"
                    });
                    await this.adapterRef._mediasoup.destroyProduce("audio"), await this.adapterRef._mediasoup.destroyProduce("video"), await this.adapterRef._mediasoup.destroyProduce("screen"), this.apiFrequencyControl({
                        name: "unpublish",
                        code: 0,
                        param: JSON.stringify({
                            videoProfile: e && e.videoProfile,
                            audio: e && e.audio,
                            audioProfile: e && e.audioProfile,
                            cameraId: e && e.cameraId,
                            microphoneId: e && e.microphoneId,
                            pubStatus: e && e.pubStatus,
                            renderMode: e && e.renderMode,
                            screen: e && e.screen,
                            screenProfile: e && e.screenProfile
                        }, null, " ")
                    })
                } catch (t) {
                    this.adapterRef.logger.error("API调用失败：Client:unpublish", t, ...arguments), this.apiFrequencyControl({
                        name: "unpublish",
                        code: -1,
                        param: JSON.stringify({
                            reason: t,
                            videoProfile: e && e.videoProfile,
                            audio: e && e.audio,
                            audioProfile: e && e.audioProfile,
                            cameraId: e && e.cameraId,
                            microphoneId: e && e.microphoneId,
                            pubStatus: e && e.pubStatus,
                            renderMode: e && e.renderMode,
                            screen: e && e.screen,
                            screenProfile: e && e.screenProfile
                        }, null, " ")
                    })
                }
            }
            async subscribe(e) {
                return this.subscribeRts(e)
            }
            async subscribeRts(e) {
                o.checkExists({
                    tag: "client.subscribe:stream",
                    value: e
                }), this.adapterRef.logger.log(`subscribe() [订阅远端: ${e.stringStreamID}]`);
                const t = e.getId();
                if (!t) throw new d.default({
                    code: c.default.INVALID_PARAMETER,
                    message: "No uid"
                });
                if (!this.adapterRef._mediasoup) throw new d.default({
                    code: c.default.NO_MEDIASERVER,
                    message: "media server error 6"
                });
                try {
                    if (e.subConf.audio) e.pubStatus.audio.audio && !e.pubStatus.audio.consumerId && "start" !== e.pubStatus.audio.consumerStatus && (this.adapterRef.logger.log("subscribe() [开始订阅 %s 音频流]", e.getId()), e.pubStatus.audio.consumerStatus = "start", await this.adapterRef._mediasoup.createConsumer(t, "audio", "audio", e.pubStatus.audio.producerId), e.pubStatus.audio.consumerStatus = "end", this.adapterRef.logger.log("subscribe() [订阅 %s 音频流完成]", e.getId()));
                    else if (e.pubStatus.audio.consumerId && "start" !== e.pubStatus.audio.stopconsumerStatus) {
                        if (this.adapterRef.logger.log("开始取消订阅音频流"), e.pubStatus.audio.stopconsumerStatus = "start", !this.adapterRef._mediasoup) throw new d.default({
                            code: c.default.NO_MEDIASERVER,
                            message: "media server error 7"
                        });
                        await this.adapterRef._mediasoup.destroyConsumer(e.pubStatus.audio.consumerId), this.adapterRef.instance.removeSsrc(e.getId(), "audio"), e.pubStatus.audio.consumerId = "", e.stop("audio"), e.pubStatus.audio.stopconsumerStatus = "end", e.subStatus.audio = !1;
                        const t = e.getId();
                        if (t) {
                            delete this.adapterRef.remoteAudioStats[t];
                            const e = this.adapterRef._statsReport && this.adapterRef._statsReport.formativeStatsReport && this.adapterRef._statsReport.formativeStatsReport.firstData.recvFirstData[t];
                            e && (e.recvFirstAudioFrame = !1, e.recvFirstAudioPackage = !1)
                        }
                        this.adapterRef.logger.log("取消订阅音频流完成")
                    }
                    if (e.subConf.video)
                        if (e.pubStatus.video.video && !e.pubStatus.video.consumerId)
                            if (this.adapterRef.logger.log("应该订阅视频 stream.pubStatus.video.consumerStatus: ", e.pubStatus.video.consumerStatus), "start" !== e.pubStatus.video.consumerStatus) {
                                this.adapterRef.logger.log("subscribe() [开始订阅 %s 视频流]", e.getId()), e.pubStatus.video.consumerStatus = "start";
                                const r = e.pubStatus.video.simulcastEnable ? e.subConf.highOrLow : 0;
                                await this.adapterRef._mediasoup.createConsumer(t, "video", "video", e.pubStatus.video.producerId, r), e.pubStatus.video.consumerStatus = "end", this.adapterRef.logger.log("subscribe() [订阅 %s 视频流完成]", e.getId())
                            } else this.adapterRef.logger.log("stream.pubStatus.video.consumerStatus: ", JSON.stringify(e.pubStatus.video.consumerStatus));
                    else this.adapterRef.logger.log("stream.pubStatus.video: ", JSON.stringify(e.pubStatus.video));
                    else if (e.pubStatus.video.consumerId && "start" !== e.pubStatus.video.stopconsumerStatus) {
                        if (this.adapterRef.logger.log("开始取消订阅视频流"), e.pubStatus.video.stopconsumerStatus = "start", !this.adapterRef._mediasoup) throw new d.default({
                            code: c.default.NO_MEDIASERVER,
                            message: "media server error 8"
                        });
                        await this.adapterRef._mediasoup.destroyConsumer(e.pubStatus.video.consumerId), this.adapterRef.instance.removeSsrc(e.getId(), "video"), e.pubStatus.video.consumerId = "", e.stop("video"), e.pubStatus.video.stopconsumerStatus = "end", e.subStatus.video = !1;
                        const t = e.getId();
                        if (t) {
                            delete this.adapterRef.remoteVideoStats[t];
                            const e = this.adapterRef._statsReport && this.adapterRef._statsReport.formativeStatsReport && this.adapterRef._statsReport.formativeStatsReport.firstData.recvFirstData[t];
                            e && (e.recvFirstVideoFrame = !1, e.recvFirstVideoPackage = !1, e.videoTotalPlayDuration = 0)
                        }
                        this.adapterRef.logger.log("取消订阅视频流完成")
                    }
                    if (e.subConf.screen) {
                        if (e.pubStatus.screen.screen && !e.pubStatus.screen.consumerId && "start" !== e.pubStatus.screen.consumerStatus) {
                            this.adapterRef.logger.log("subscribe() [开始订阅 %s 辅流]", e.getId()), e.pubStatus.screen.consumerStatus = "start";
                            const r = e.pubStatus.screen.simulcastEnable ? e.subConf.highOrLow : 0;
                            await this.adapterRef._mediasoup.createConsumer(t, "video", "screenShare", e.pubStatus.screen.producerId, r), e.pubStatus.screen.consumerStatus = "end", this.adapterRef.logger.log("subscribe() [订阅 %s 辅流完成]", e.getId())
                        }
                    } else if (e.pubStatus.screen.consumerId && "start" !== e.pubStatus.screen.stopconsumerStatus) {
                        if (this.adapterRef.logger.log("开始取消订阅辅流"), e.pubStatus.screen.stopconsumerStatus = "start", !this.adapterRef._mediasoup) throw new d.default({
                            code: c.default.NO_MEDIASERVER,
                            message: "media server error 9"
                        });
                        await this.adapterRef._mediasoup.destroyConsumer(e.pubStatus.screen.consumerId), this.adapterRef.instance.removeSsrc(e.getId(), "screen"), e.pubStatus.screen.consumerId = "", e.stop("screen"), e.pubStatus.screen.stopconsumerStatus = "end", e.subStatus.screen = !1;
                        const t = e.getId();
                        if (t) {
                            delete this.adapterRef.remoteScreenStats[t];
                            const e = this.adapterRef._statsReport && this.adapterRef._statsReport.formativeStatsReport && this.adapterRef._statsReport.formativeStatsReport.firstData.recvFirstData[t];
                            e && (e.recvFirstScreenFrame = !1, e.recvFirstScreenPackage = !1, e.screenTotalPlayDuration = 0)
                        }
                        this.adapterRef.logger.log("取消订阅辅助流完成")
                    }
                    this.apiFrequencyControl({
                        name: "subscribe",
                        code: 0,
                        param: JSON.stringify({
                            reason: "",
                            videoProfile: e.videoProfile,
                            audio: e.audio,
                            audioProfile: e.audioProfile,
                            cameraId: e.cameraId,
                            subStatus: e.subStatus,
                            microphoneId: e.microphoneId,
                            subConf: e.subConf,
                            pubStatus: e.pubStatus,
                            renderMode: e.renderMode,
                            screen: e.screen,
                            screenProfile: e.screenProfile
                        }, null, " ")
                    })
                } catch (t) {
                    if ("resetConsumeRequestStatus" === t) return void this.adapterRef.logger.warn("API调用被打断：Client:subscribe", t);
                    this.adapterRef.logger.error("API调用失败：Client:subscribe", t, t.name, t.message, ...arguments), this.apiFrequencyControl({
                        name: "subscribe",
                        code: -1,
                        param: JSON.stringify({
                            reason: t,
                            videoProfile: e.videoProfile,
                            audio: e.audio,
                            audioProfile: e.audioProfile,
                            cameraId: e.cameraId,
                            subStatus: e.subStatus,
                            microphoneId: e.microphoneId,
                            subConf: e.subConf,
                            pubStatus: e.pubStatus,
                            renderMode: e.renderMode,
                            screen: e.screen,
                            screenProfile: e.screenProfile
                        }, null, " ")
                    })
                }
            }
            async unsubscribe(e) {
                return this.unsubscribeRts(e)
            }
            async unsubscribeRts(e) {
                o.checkExists({
                    tag: "client.unsubscribe:stream",
                    value: e
                }), this.adapterRef.logger.log("取消订阅远端音视频流: ", e);
                try {
                    if (e.pubStatus.audio.consumerId && "start" !== e.pubStatus.audio.stopconsumerStatus) {
                        if (this.adapterRef.logger.log("开始取消订阅音频流"), e.pubStatus.audio.stopconsumerStatus = "start", !this.adapterRef._mediasoup) throw new d.default({
                            code: c.default.NO_MEDIASERVER,
                            message: "media server error 10"
                        });
                        await this.adapterRef._mediasoup.destroyConsumer(e.pubStatus.audio.consumerId), this.adapterRef.instance.removeSsrc(e.getId(), "audio"), e.pubStatus.audio.consumerId = "", e.stop("audio"), e.pubStatus.audio.stopconsumerStatus = "end", e.subStatus.audio = !1;
                        const t = e.getId();
                        if (t) {
                            delete this.adapterRef.remoteAudioStats[t];
                            const e = this.adapterRef._statsReport && this.adapterRef._statsReport.formativeStatsReport && this.adapterRef._statsReport.formativeStatsReport.firstData.recvFirstData[t];
                            e && (e.recvFirstAudioFrame = !1, e.recvFirstAudioPackage = !1)
                        }
                        this.adapterRef.logger.log("取消订阅音频流完成")
                    }
                    if (e.pubStatus.video.consumerId && "start" !== e.pubStatus.video.stopconsumerStatus) {
                        if (this.adapterRef.logger.log("开始取消订阅视频流"), e.pubStatus.video.stopconsumerStatus = "start", !this.adapterRef._mediasoup) throw new d.default({
                            code: c.default.NO_MEDIASERVER,
                            message: "media server error 11"
                        });
                        await this.adapterRef._mediasoup.destroyConsumer(e.pubStatus.video.consumerId), this.adapterRef.instance.removeSsrc(e.getId(), "video"), e.pubStatus.video.consumerId = "", e.stop("video"), e.pubStatus.video.stopconsumerStatus = "end", e.subStatus.video = !1;
                        const t = e.getId();
                        if (t) {
                            delete this.adapterRef.remoteVideoStats[t];
                            const e = this.adapterRef._statsReport && this.adapterRef._statsReport.formativeStatsReport && this.adapterRef._statsReport.formativeStatsReport.firstData.recvFirstData[t];
                            e && (e.recvFirstVideoFrame = !1, e.recvFirstVideoPackage = !1, e.videoTotalPlayDuration = 0)
                        }
                        this.adapterRef.logger.log("取消订阅视频流完成")
                    }
                    if (e.pubStatus.screen.consumerId && "start" !== e.pubStatus.screen.stopconsumerStatus) {
                        if (this.adapterRef.logger.log("开始取消订阅辅流"), e.pubStatus.screen.stopconsumerStatus = "start", !this.adapterRef._mediasoup) throw new d.default({
                            code: c.default.NO_MEDIASERVER,
                            message: "media server error 12"
                        });
                        await this.adapterRef._mediasoup.destroyConsumer(e.pubStatus.screen.consumerId), this.adapterRef.instance.removeSsrc(e.getId(), "screen"), e.pubStatus.screen.consumerId = "", e.stop("screen"), e.pubStatus.screen.stopconsumerStatus = "end", e.subStatus.screen = !1;
                        const t = e.getId();
                        if (t) {
                            delete this.adapterRef.remoteScreenStats[t];
                            const e = this.adapterRef._statsReport && this.adapterRef._statsReport.formativeStatsReport && this.adapterRef._statsReport.formativeStatsReport.firstData.recvFirstData[t];
                            e && (e.recvFirstScreenFrame = !1, e.recvFirstScreenPackage = !1, e.screenTotalPlayDuration = 0)
                        }
                        this.adapterRef.logger.log("取消订阅辅助流完成")
                    }
                    this.apiFrequencyControl({
                        name: "unsubscribe",
                        code: 0,
                        param: JSON.stringify({
                            reason: "",
                            videoProfile: e.videoProfile,
                            audio: e.audio,
                            audioProfile: e.audioProfile,
                            cameraId: e.cameraId,
                            subStatus: e.subStatus,
                            microphoneId: e.microphoneId,
                            subConf: e.subConf,
                            pubStatus: e.pubStatus,
                            renderMode: e.renderMode,
                            screen: e.screen,
                            screenProfile: e.screenProfile
                        }, null, " ")
                    })
                } catch (t) {
                    this.adapterRef.logger.error("API调用失败：Client:unsubscribe", t.name, t.message, t, ...arguments), this.apiFrequencyControl({
                        name: "unsubscribe",
                        code: -1,
                        param: JSON.stringify({
                            reason: t,
                            videoProfile: e.videoProfile,
                            audio: e.audio,
                            audioProfile: e.audioProfile,
                            cameraId: e.cameraId,
                            subStatus: e.subStatus,
                            microphoneId: e.microphoneId,
                            subConf: e.subConf,
                            pubStatus: e.pubStatus,
                            renderMode: e.renderMode,
                            screen: e.screen,
                            screenProfile: e.screenProfile
                        }, null, " ")
                    })
                }
            }
            async setRemoteVideoStreamType(e, t) {
                this.adapterRef.logger.log(`订阅${e.getId()}成员的${t?"大":"小"}流`);
                try {
                    if (!this.adapterRef._mediasoup) throw new d.default({
                        code: c.default.NO_MEDIASERVER,
                        message: "media server error 13"
                    });
                    const r = e.getId();
                    if (!r) throw new d.default({
                        code: c.default.INVALID_PARAMETER,
                        message: "No stream Id"
                    });
                    if (await this.adapterRef._mediasoup.destroyConsumer(e.pubStatus.video.consumerId), e.pubStatus.video.consumerId = "", e.subConf.video && "start" !== e.pubStatus.audio.consumerStatus) {
                        this.adapterRef.logger.log("开始订阅 %s 视频流", e.getId()), e.pubStatus.video.consumerStatus = "start", e.subConf.highOrLow = t;
                        const i = e.pubStatus.video.simulcastEnable ? e.subConf.highOrLow : 0;
                        await this.adapterRef._mediasoup.createConsumer(r, "video", "video", e.pubStatus.video.producerId, i), e.pubStatus.video.consumerStatus = "end", this.adapterRef.logger.log("订阅 %s 视频流完成", e.getId())
                    }
                    this.apiFrequencyControl({
                        name: "setRemoteVideoStreamType",
                        param: JSON.stringify({
                            highOrLow: t,
                            uid: e.stringStreamID
                        }, null, " ")
                    })
                } catch (r) {
                    this.adapterRef.logger.error("API调用失败：Client:setRemoteVideoStreamType", r.name, r.message, r, ...arguments), this.apiFrequencyControl({
                        name: "setRemoteVideoStreamType",
                        code: -1,
                        param: JSON.stringify({
                            reason: r,
                            highOrLow: t,
                            uid: e.stringStreamID
                        }, null, " ")
                    })
                }
            }
            enableAudioVolumeIndicator() {
                this.adapterRef.logger.log("开启双流模式")
            }
            enableDualStream() {
                this.adapterRef.logger.log("开启双流模式")
            }
            disableDualStream() {
                this.adapterRef.logger.log("关闭双流模式")
            }
            async setClientRole(e) {
                let t, r;
                if ("host" === e || "broadcaster" === e ? t = 0 : "audience" === e ? t = 1 : (this.adapterRef.logger.error("setClientRole: 无法识别的角色：" + e), r = "INVALID_OPERATION", t = -1), !r) {
                    const i = this.adapterRef.channelInfo && this.adapterRef.channelInfo.uid || "";
                    if (t === this._roleInfo.userRole) this.adapterRef.logger.warn(`setClientRole: 用户${i}的角色已经是${e}了`);
                    else switch (this.adapterRef.connectState.curState) {
                        case "CONNECTED":
                            if (1 === t && this.adapterRef.localStream && this.isPublished(this.adapterRef.localStream) && (this.adapterRef.logger.info(`setClientRole：主播 ${i}将设为观众，自动Unpublish中`), await this.unpublish(this.adapterRef.localStream)), !this.adapterRef._mediasoup) throw new d.default({
                                code: c.default.NO_MEDIASERVER,
                                message: "media server error 14"
                            });
                            await this.adapterRef._mediasoup.updateUserRole(t), this._roleInfo.userRole !== t && (this._roleInfo.userRole = t, this.adapterRef.logger.info(`setClientRole：本地用户${i} 设置角色为 ${e}`), this.emit("client-role-changed", {
                                role: e
                            }));
                            break;
                        case "DISCONNECTED":
                            this._roleInfo.userRole !== t && (this._roleInfo.userRole = t, this.adapterRef.logger.info(`setClientRole：本地用户${i}设置角色为 ${e}`), this.emit("client-role-changed", {
                                role: e
                            }));
                            break;
                        default:
                            this.adapterRef.logger.error(`setClientRole: 本地用户${i}当前不在频道中，可能是网络波动导致暂时断开连接`), r = "USER_NOT_IN_CHANNEL"
                    }
                }
                const i = {
                    reason: r,
                    role: t
                };
                if (this.apiFrequencyControl({
                        name: "setClientRole",
                        code: r ? -1 : 0,
                        param: JSON.stringify(i, null, " ")
                    }), r) {
                    if ("INVALID_OPERATION" === r) return Promise.reject(new d.default({
                        code: c.default.INVALID_OPERATION,
                        message: "invalid operation"
                    }));
                    if ("USER_NOT_IN_CHANNEL" === r) return Promise.reject(new d.default({
                        code: c.default.NO_LOCALSTREAM,
                        message: "user not in channel"
                    }))
                }
            }
            bindLocalStream(e) {
                this.adapterRef.localStream = e, e.client = this;
                const t = this.getUid();
                e.streamID !== t && (this.adapterRef.logger.warn("localStream更换streamID", e.streamID, "=>", t), e.streamID = t, e.stringStreamID = t.toString())
            }
            getConnectionState() {
                return this.apiFrequencyControl({
                    name: "getConnectionState",
                    code: 0,
                    param: JSON.stringify({}, null, " ")
                }), this.adapterRef.connectState.curState
            }
            getSystemStats() {
                return navigator.getBattery ? new Promise((e, t) => {
                    navigator.getBattery().then((function(t) {
                        e(100 * t.level)
                    }))
                }) : Promise.reject(new d.default({
                    code: c.default.NOT_SUPPORTED_YET,
                    message: "navigator.getBattery is not support in your browser",
                    url: "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/getBattery"
                }))
            }
            getSessionStats() {
                return new Promise((e, t) => {
                    this.adapterRef.sessionStats.Duration = (Date.now() - this.adapterRef.state.startSessionTime) / 1e3, this.adapterRef.sessionStats.UserCount = Object.keys(this.adapterRef.memberMap).length + 1, e(this.adapterRef.sessionStats)
                })
            }
            getTransportStats() {
                return new Promise((e, t) => {
                    e(this.adapterRef.transportStats)
                })
            }
            getLocalAudioStats() {
                return new Promise((e, t) => {
                    e(this.adapterRef.localAudioStats)
                })
            }
            getLocalVideoStats(e) {
                let t = [];
                return e && "video" !== e || (t = t.concat(this.adapterRef.localVideoStats)), e && "screen" !== e || (t = t.concat(this.adapterRef.localScreenStats)), Promise.resolve(t)
            }
            getRemoteAudioStats() {
                return new Promise((e, t) => {
                    e(this.adapterRef.remoteAudioStats)
                })
            }
            getRemoteVideoStats(e) {
                let t = {};
                return e && "screen" !== e || (t = Object.assign(t, this.adapterRef.remoteScreenStats)), e && "video" !== e || (t = Object.assign(t, this.adapterRef.remoteVideoStats)), Promise.resolve(t)
            }
            setChannelProfile(e) {
                let t;
                if (this.adapterRef.logger.log("设置房间模型, options: ", JSON.stringify(e, null, " ")), "DISCONNECTED" !== this.adapterRef.connectState.curState) this.adapterRef.logger.warn("已经在频道中"), t = "INVALID_OPERATION";
                else {
                    const t = e.mode || "rtc";
                    this.adapterRef.localStream && ("live" === t ? this.adapterRef.localStream.audioProfile = "music_standard" : "rtc" === t && (this.adapterRef.localStream.audioProfile = "speech_low_quality")), this._params.mode = t
                }
                const r = {
                    reason: t,
                    channelProfile: "live" === e.mode ? 1 : 0
                };
                if (this.apiFrequencyControl({
                        name: "setChannelProfile",
                        code: t ? -1 : 0,
                        param: JSON.stringify(r, null, " ")
                    }), t) throw new d.default({
                    code: c.default.INVALID_OPERATION,
                    message: "invalid operation"
                })
            }
            addTasks(e) {
                if (1 === this._roleInfo.userRole) return this.adapterRef.logger.error("addTasks: 观众不允许进行直播推流操作"), Promise.reject(new d.default({
                    code: c.default.INVALID_OPERATION,
                    message: "audience is not allowed to operate task"
                }));
                if (this.adapterRef.logger.log("增加互动直播推流任务, options: ", JSON.stringify(e)), !this.adapterRef._meetings) throw new d.default({
                    code: c.default.NO_MEETINGS,
                    message: "meetings error"
                });
                return this.adapterRef._meetings.addTasks(e)
            }
            deleteTasks(e) {
                if (1 === this._roleInfo.userRole) return this.adapterRef.logger.error("deleteTasks: 观众不允许进行直播推流操作"), Promise.reject(new d.default({
                    code: c.default.INVALID_OPERATION,
                    message: "audience is not allowed to operate task"
                }));
                if (this.adapterRef.logger.log("删除互动直播推流任务, options: ", e), !this.adapterRef._meetings) throw new d.default({
                    code: c.default.NO_MEETINGS,
                    message: "meetings error"
                });
                return this.adapterRef._meetings.deleteTasks(e)
            }
            updateTasks(e) {
                if (1 === this._roleInfo.userRole) return this.adapterRef.logger.error("updateTasks: 观众不允许进行直播推流操作"), Promise.reject(new d.default({
                    code: c.default.INVALID_OPERATION,
                    message: "audience is not allowed to operate task"
                }));
                if (this.adapterRef.logger.log("更新互动直播推流任务, options: ", e), !this.adapterRef._meetings) throw new d.default({
                    code: c.default.NO_MEETINGS,
                    message: "meetings error"
                });
                return this.adapterRef._meetings.updateTasks(e)
            }
            setEncryptionMode(e) {
                o.checkValidInteger({
                    tag: "Valid encryptionModes are: " + Object.keys(s.EncryptionModes).join(","),
                    value: s.encryptionModeToInt(e)
                }), this.adapterRef.logger.log("设置加密模式：", e), this.adapterRef.encryption.setEncryptionMode(e);
                const t = {
                    enable: "none" !== e,
                    mode: s.encryptionModeToInt(e)
                };
                this.apiFrequencyControl({
                    name: "enableEncryption",
                    code: 0,
                    param: JSON.stringify(t, null, " ")
                })
            }
            setEncryptionSecret(e) {
                switch (this.adapterRef.encryption.encryptionMode) {
                    case "none":
                        throw new d.default({
                            code: c.default.INVALID_OPERATION,
                            message: "Client.setEncryptionSecret: please set encryptionMode first"
                        });
                    case "sm4-128-ecb":
                        o.checkValidString({
                            tag: "client.setEncryptionSecret:encryptionSecret",
                            value: e,
                            min: 1,
                            max: 128
                        })
                }
                this.adapterRef.logger.log("设置加密密钥"), this.adapterRef.encryption.setEncryptionSecret(e)
            }
            destroy() {
                this.adapterRef.logger && this.adapterRef.logger.warn("清除 Client 实例"), this._reset()
            }
        }
        t.Client = l
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Base = void 0;
        const n = r(3),
            o = r(131),
            s = r(137),
            a = r(200),
            d = r(215),
            c = r(115),
            u = r(242),
            l = r(244),
            p = r(20),
            f = r(52),
            h = r(77),
            m = i(r(1)),
            g = i(r(0));
        class v extends n.EventEmitter {
            constructor(e) {
                super(), this._params = {
                    appkey: "",
                    mode: "rtc"
                }, this.adapterRef = {
                    channelInfo: {
                        sessionConfig: {}
                    },
                    apiEvent: {},
                    apiEvents: {},
                    requestId: {},
                    logController: h.logController,
                    instance: this,
                    report: !0
                }, this.adapterRef.mediaCapability = new l.MediaCapability(this.adapterRef), this.adapterRef.encryption = new f.Encryption(this.adapterRef), this._reset(), this.adapterRef.logger = new u.Logger({
                    adapterRef: this.adapterRef,
                    debug: e.debug,
                    prefix: "WEBRTC"
                }), window.debugG2 = !!e.debug, this.adapterRef.testConf = {}, this.sdkRef = e.ref, void 0 === e.report ? this.adapterRef.report = !0 : this.adapterRef.report = e.report
            }
            _reset() {
                this.sdkRef = null, this.adapterRef = {
                    channelInfo: {
                        sessionConfig: {}
                    },
                    userPriority: {
                        priority: 100,
                        preemtiveMode: !1
                    },
                    apiEvent: {},
                    apiEvents: {},
                    requestId: {},
                    instance: this,
                    logger: console,
                    _enableRts: !1
                }, this.adapterRef.mediaCapability = new l.MediaCapability(this.adapterRef), this.adapterRef.encryption = new f.Encryption(this.adapterRef), this._resetState(), this._destroyModule()
            }
            _getSupportedCodecs() {
                return p.getSupportedCodecs(...arguments)
            }
            initMode() {
                this.adapterRef._meetings || (this.adapterRef._meetings = new o.Meeting({
                    sdkRef: this.sdkRef,
                    adapterRef: this.adapterRef
                })), this.adapterRef._signalling || (this.adapterRef._signalling = new s.Signalling({
                    sdkRef: this.sdkRef,
                    adapterRef: this.adapterRef
                })), this.adapterRef._mediasoup || (this.adapterRef._mediasoup = new a.Mediasoup({
                    sdkRef: this.sdkRef,
                    adapterRef: this.adapterRef
                })), this.adapterRef._statsReport || (this.adapterRef._statsReport = new d.StatsReport({
                    sdkRef: this.sdkRef,
                    adapterRef: this.adapterRef
                }))
            }
            _destroyModule() {
                this.adapterRef._meetings && (this.adapterRef._meetings.destroy(), this.adapterRef._meetings = null), this.adapterRef._signalling && (this.adapterRef._signalling.destroy(), this.adapterRef._signalling = null), this.adapterRef._rtsTransport && (this.adapterRef._rtsTransport.destroy(), this.adapterRef._rtsTransport = null), this.adapterRef._mediasoup && (this.adapterRef._mediasoup.destroy(), this.adapterRef._mediasoup = null), this.adapterRef._statsReport && (this.adapterRef._statsReport.destroy(), this.adapterRef._statsReport = null)
            }
            _resetState() {
                this._params.neRtcServerAddresses = {}, this.adapterRef.channelStatus = "init", this.adapterRef.connectState = {
                    prevState: "DISCONNECTED",
                    curState: "DISCONNECTED"
                }, this.adapterRef.networkQuality = {}, this.adapterRef.localStream = null, this.adapterRef.memberMap = {}, this.adapterRef.remoteStreamMap = {}, this.adapterRef.netStatusList = [], this.adapterRef.netStatusTimer && (clearInterval(this.adapterRef.netStatusTimer), this.adapterRef.netStatusTimer = null), this.adapterRef.uid2SscrList = {}, this.adapterRef.state = {
                    lastDeviceStatus: {
                        audio: {
                            type: null,
                            device: null
                        },
                        video: {
                            type: null,
                            device: null
                        }
                    },
                    audioDeviceHasOpened: !1,
                    videoDeviceHasOpened: !1,
                    chromeScreenShareOpened: !1,
                    startSessionTime: 0,
                    endSessionTime: 0,
                    startPubVideoTime: 0,
                    startPubScreenTime: 0
                }, Object.assign(this.adapterRef, {
                    transportStats: {
                        NetworkType: "unknown",
                        OutgoingAvailableBandwidth: 0,
                        txRtt: 0,
                        rxRtt: 0
                    },
                    sessionStats: {
                        Duration: 0,
                        RecvBitrate: 0,
                        RecvBytes: 0,
                        SendBitrate: 0,
                        SendBytes: 0,
                        UserCount: 0
                    },
                    localAudioStats: [],
                    localVideoStats: [],
                    localScreenStats: [],
                    remoteAudioStats: {},
                    remoteVideoStats: {},
                    remoteScreenStats: {}
                })
            }
            setSessionConfig(e = {}) {
                this.adapterRef.channelInfo || (this.adapterRef.channelInfo = {}), this.adapterRef.channelInfo.sessionConfig || (this.adapterRef.channelInfo.sessionConfig = {}), this.adapterRef.channelInfo.sessionConfig = Object.assign(this.adapterRef.channelInfo.sessionConfig, e)
            }
            resetChannel() {
                this.adapterRef.networkQuality = {}, this.adapterRef.netStatusList = [];
                for (let e in this.adapterRef.remoteStreamMap) {
                    this.adapterRef.remoteStreamMap[e].destroy()
                }
                this.adapterRef.remoteStreamMap = {}, this.adapterRef.memberMap = {}, this.adapterRef.uid2SscrList = {}, this.adapterRef._mediasoup && this.adapterRef._mediasoup.destroy()
            }
            startSession() {
                this.adapterRef.logger.log("开始音视频会话");
                let {
                    wssArr: e,
                    cid: t
                } = this.adapterRef.channelInfo;
                if (!e || 0 === e.length) return this.adapterRef.logger.error("没有找到服务器地址"), this.adapterRef.channelStatus = "leave", Promise.reject(new m.default({
                    code: g.default.NO_SERVER_ADDRESS,
                    message: "no server address"
                }));
                if (!t) return this.adapterRef.logger.error("服务器没有分配cid"), this.adapterRef.channelStatus = "leave", Promise.reject(new m.default({
                    code: g.default.INVALID_PARAMETER,
                    message: "no cid"
                }));
                if (this.adapterRef.logger.log("开始连接服务器: %s, url: %o", this.adapterRef.channelInfo.wssArrIndex, e), this.adapterRef.channelInfo.wssArrIndex >= e.length) return this.adapterRef.logger.error("所有的服务器地址都连接失败"), this.adapterRef.channelInfo.wssArrIndex = 0, this.adapterRef.channelStatus = "leave", Promise.reject(new m.default({
                    code: g.default.SOCKET_ERROR,
                    message: "socket error"
                }));
                const r = e[this.adapterRef.channelInfo.wssArrIndex];
                if (!this.adapterRef._signalling) return Promise.reject(new m.default({
                    code: g.default.NO_SIGNALLING,
                    message: "signalling error"
                }));
                const i = this.adapterRef._signalling.init(r).then(() => {
                    const t = e[this.adapterRef.channelInfo.wssArrIndex];
                    return e.splice(this.adapterRef.channelInfo.wssArrIndex, 1), e.unshift(t), this.adapterRef.channelInfo.wssArrIndex = 0, this.adapterRef._statsReport ? (this.adapterRef._statsReport.start(), this.adapterRef._statsReport.startHeartbeat(), Promise.resolve()) : Promise.reject(new m.default({
                        code: g.default.NO_STATS,
                        message: "no stats"
                    }))
                });
                return i.catch(e => (this.adapterRef.logger.warn("startSession error: ", e), "timeout" === e ? (this.adapterRef.channelInfo.wssArrIndex++, this.startSession()) : (this.adapterRef.channelStatus = "leave", Promise.reject(e)))), i
            }
            stopSession() {
                this.adapterRef.logger.log("开始清除音视频会话"), this._destroyModule(), this.adapterRef.localStream && this.adapterRef.localStream.destroy(), Object.values(this.adapterRef.remoteStreamMap).forEach(e => {
                    e.destroy()
                }), this.adapterRef.remoteStreamMap = {}, this.adapterRef.memberMap = {}, this.adapterRef.uid2SscrList = {}, this._resetState()
            }
            async clearMember(e) {
                this.adapterRef.logger.log("%s 离开房间", e);
                const t = this.adapterRef.remoteStreamMap[e];
                if (t) {
                    if (t.pubStatus.audio) {
                        if (!this.adapterRef._mediasoup) throw new m.default({
                            code: g.default.NO_MEDIASERVER,
                            message: "media server error 1"
                        });
                        this.adapterRef._mediasoup.destroyConsumer(t.pubStatus.audio.consumerId)
                    }
                    if (t.pubStatus.video) {
                        if (!this.adapterRef._mediasoup) throw new m.default({
                            code: g.default.NO_MEDIASERVER,
                            message: "media server error 2"
                        });
                        this.adapterRef._mediasoup.destroyConsumer(t.pubStatus.video.consumerId)
                    }
                    t.destroy(), delete this.adapterRef.remoteStreamMap[e], delete this.adapterRef.memberMap[e], delete this.adapterRef.remoteAudioStats[e], delete this.adapterRef.remoteVideoStats[e], delete this.adapterRef.remoteScreenStats[e];
                    const r = this.adapterRef._statsReport && this.adapterRef._statsReport.formativeStatsReport && this.adapterRef._statsReport.formativeStatsReport.firstData.recvFirstData;
                    r && r[e] && delete r[e]
                }
                this.adapterRef.netStatusList = this.adapterRef.netStatusList.filter((t, r, i) => t.uid !== e), this.adapterRef.logger.log("%s 离开房间 通知用户", e), this.adapterRef._enableRts ? this.adapterRef.instance.emit("rts-peer-leave", {
                    uid: e
                }) : this.adapterRef.instance.emit("peer-leave", {
                    uid: e
                })
            }
            setStartSessionTime() {
                this.adapterRef.state.startSessionTime = Date.now()
            }
            setEndSessionTime() {
                if (!this.adapterRef.state.startSessionTime) return void this.adapterRef.logger.log("AbstractAdapter: setEndSessionTime: startSessionTime为空");
                this.adapterRef.state.endSessionTime = Date.now();
                const e = this.adapterRef.state.endSessionTime - this.adapterRef.state.startSessionTime;
                this.emit("sessionDuration", e), this.adapterRef.state.startSessionTime = 0, this.adapterRef.state.endSessionTime = 0
            }
            async reBuildRecvTransport() {
                if (this.adapterRef.logger.warn("下行通道异常，重新建立"), !this.adapterRef._mediasoup) throw new m.default({
                    code: g.default.NO_MEDIASERVER,
                    message: "media server error 3"
                });
                this.adapterRef._mediasoup.init(), this.adapterRef.logger.log("下行通道异常, remoteStreamMap", this.adapterRef.remoteStreamMap), this.adapterRef.logger.log("this._eventQueue: ", this.adapterRef._mediasoup._eventQueue);
                for (const e in this.adapterRef.remoteStreamMap) {
                    const t = this.adapterRef.remoteStreamMap[e];
                    t.pubStatus.audio.consumerStatus = "init", t.pubStatus.video.consumerStatus = "init", t.pubStatus.screen.consumerStatus = "init", t.pubStatus.audio.consumerId = "", t.pubStatus.video.consumerId = "", t.pubStatus.screen.consumerId = "", this.adapterRef.logger.log("重连逻辑订阅 start：", t.stringStreamID);
                    try {
                        await this.subscribe(t)
                    } catch (e) {
                        this.adapterRef.logger.log("重连逻辑订阅 error: ", e, e.name, e.message);
                        break
                    }
                    this.adapterRef.logger.log("重连逻辑订阅 over: ", t.stringStreamID)
                }
            }
            async rtsRequestKeyFrame(e) {
                this.adapterRef.logger.log("请求关键帧: ", e.pubStatus.video.consumerId), this.adapterRef._signalling && await this.adapterRef._signalling.rtsRequestKeyFrame(e.pubStatus.video.consumerId)
            }
            apiFrequencyControl(e) {
                const {
                    name: t,
                    code: r,
                    param: i
                } = e;
                if (!t) return;
                this.adapterRef.apiEvent[t] || (this.adapterRef.apiEvent[t] = [], this.adapterRef.apiEvents[t] = [], this.adapterRef.requestId[t] = 0);
                let n = this.adapterRef.channelInfo.clientNtpTime - this.adapterRef.channelInfo.T4;
                if (n > 0 || (n = 0), this.adapterRef.apiEvent[t].length < 10) this.adapterRef.apiEvent[t].push({
                    cid: this.adapterRef.channelInfo && this.adapterRef.channelInfo.cid,
                    uid: this.adapterRef.channelInfo && this.adapterRef.channelInfo.uid,
                    code: r,
                    name: t,
                    time: Date.now() + n,
                    param: i,
                    request_id: this.adapterRef.requestId[t]++
                });
                else {
                    if (!this.adapterRef.apiEvent || !this.adapterRef.apiEvent[t] || !this.adapterRef.apiEvent[t].length) throw new m.default({
                        code: g.default.NOT_FOUND,
                        message: "No apiEvent Named " + t
                    });
                    if (!this.adapterRef.apiEvent[t][0].time) throw new m.default({
                        code: g.default.NOT_FOUND,
                        message: "Invalid time for "
                    });
                    Date.now() - this.adapterRef.apiEvent[t][0].time < 1e4 ? this.adapterRef.requestId[t]++ : (this.adapterRef.apiEvents[t] = this.adapterRef.apiEvents[t].concat(this.adapterRef.apiEvent[t]), this.adapterRef.apiEvent[t] = [])
                }
            }
            apiEventReport(e, t) {
                if (!this.adapterRef.report) return;
                if (!e) return;
                let r = new c.DataReport({
                    adapterRef: this.adapterRef,
                    sdkRef: this.sdkRef
                });
                r[e](Object.assign({
                    uid: "" + this.adapterRef.channelInfo.uid,
                    cid: "" + this.adapterRef.channelInfo.cid,
                    time: Date.now()
                }, t)), r.send()
            }
            getUidAndKindBySsrc(e) {
                for (let t in this.adapterRef.uid2SscrList) {
                    if (this.adapterRef.uid2SscrList[t].audio.ssrc == e) return {
                        uid: t,
                        kind: "audio"
                    };
                    if (this.adapterRef.uid2SscrList[t].video && this.adapterRef.uid2SscrList[t].video.ssrc == e) return {
                        uid: t,
                        kind: "video"
                    };
                    if (this.adapterRef.uid2SscrList[t].screen && this.adapterRef.uid2SscrList[t].screen.ssrc == e) return {
                        uid: t,
                        kind: "screen"
                    }
                }
                return {
                    uid: 0,
                    kind: ""
                }
            }
            getSsrcByUidAndKind(e, t) {
                return this.adapterRef.uid2SscrList[e] && this.adapterRef.uid2SscrList[e][t]
            }
            addSsrc(e, t, r) {
                this.adapterRef.uid2SscrList[e] || (this.adapterRef.uid2SscrList[e] = {
                    audio: {
                        ssrc: 0
                    },
                    video: {
                        ssrc: 0
                    },
                    screen: {
                        ssrc: 0
                    }
                }), this.adapterRef.uid2SscrList[e][t] ? this.adapterRef.uid2SscrList[e][t].ssrc = r : this.adapterRef.uid2SscrList[e][t] = {
                    ssrc: r
                }
            }
            removeSsrc(e, t) {
                this.adapterRef.uid2SscrList[e] && (t ? this.adapterRef.uid2SscrList[e][t] && (this.adapterRef.uid2SscrList[e][t].ssrc = 0) : delete this.adapterRef.uid2SscrList[e])
            }
            isPublished(e) {
                return e && (e.audio && e.pubStatus.audio.audio || e.video && e.pubStatus.video.video || e.screen && e.pubStatus.screen.screen)
            }
            isSubscribe(e) {
                return e && (e.subStatus.audio || e.subStatus.video)
            }
            getPeer(e) {
                return this.adapterRef._mediasoup ? "send" == e ? this.adapterRef._mediasoup._sendTransport && this.adapterRef._mediasoup._sendTransport.handler._pc : "recv" == e ? this.adapterRef._mediasoup._recvTransport && this.adapterRef._mediasoup._recvTransport.handler._pc : null : null
            }
            destroy() {
                this.adapterRef.logger.log("base: destroy!"), this._reset()
            }
        }
        t.Base = v
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Meeting = void 0;
        const n = r(3),
            o = r(36),
            s = r(12),
            a = r(37),
            d = i(r(11)),
            c = i(r(1)),
            u = i(r(0));
        class l extends n.EventEmitter {
            constructor(e) {
                super(), this._reset(), this.adapterRef = e.adapterRef, this.sdkRef = e.sdkRef
            }
            _reset() {}
            async joinChannel(e) {
                const {
                    appkey: t,
                    channelName: r,
                    uid: i,
                    wssArr: n = null,
                    sessionMode: c = "meeting",
                    joinChannelRecordConfig: u,
                    joinChannelLiveConfig: l,
                    token: p = ""
                } = e;
                let f = Date.now(),
                    h = +new Date;
                this.adapterRef.logger.log("getChannelInfoUrl: ", s.getChannelInfoUrl);
                let m = s.getChannelInfoUrl;
                this.adapterRef.instance._params.neRtcServerAddresses.channelServer && (m = this.adapterRef.instance._params.neRtcServerAddresses.channelServer, this.adapterRef.logger.log("私有化配置的 getChannelInfoUrl: ", m));
                let g = i;
                "string" === this.adapterRef.channelInfo.uidType && (g = new d.default(g)), Object.assign(this.adapterRef.channelInfo, {
                    uid: i,
                    sessionMode: c,
                    appkey: t
                });
                try {
                    const d = await o.ajax({
                        url: m,
                        type: "POST",
                        contentType: "application/x-www-form-urlencoded",
                        header: {
                            "X-Forwarded-For": this.adapterRef.testConf.ForwardedAddr || ""
                        },
                        data: {
                            uid: g,
                            appkey: t,
                            channelName: r,
                            secureType: p ? "1" : "2",
                            osType: "4",
                            mode: 2,
                            netType: "0",
                            version: s.SDK_VERSION + ".0" || !1,
                            curtime: h,
                            checksum: p || a(t + "." + i + "." + h),
                            webrtc: 1,
                            nrtcg2: 1,
                            t1: f
                        }
                    });
                    let v = !("0" == i || "0" != i && !Boolean(i));
                    if (this.adapterRef.logger.log("获取到房间信息:", JSON.stringify(d)), 200 === d.code) {
                        this.adapterRef.channelStatus = "join";
                        const {
                            ips: o,
                            time: s
                        } = d;
                        o && o.uid || this.adapterRef.logger.error("加入频道时服务端未返回uid");
                        const a = d.config && d.config.quality_level_limit || 16;
                        this.adapterRef.instance._params.JoinChannelRequestParam4WebRTC2.startWssTime = Date.now(), Object.assign(this.adapterRef.channelInfo, {
                            cid: +d.cid,
                            token: d.token,
                            turnToken: o.token,
                            channelName: r,
                            wssArr: n || o.webrtcarray || [],
                            relayaddrs: o.relayaddrs || null,
                            relaytoken: o.relaytoken || null,
                            wssArrIndex: 0,
                            maxVideoQuality: a,
                            netDetect: !1
                        }, {
                            uid: v ? i : o.uid,
                            sessionMode: c,
                            appkey: t
                        }), e.uid = e.uid ? e.uid : this.adapterRef.channelInfo.uid, this.adapterRef.testConf.relayaddrs = o.relayaddrs, this.adapterRef.testConf.relaytoken = o.relaytoken, this.adapterRef.instance._params.JoinChannelRequestParam4WebRTC2.token = d.token, this.adapterRef.channelInfo.T4 = Date.now();
                        let p = this.adapterRef.channelInfo.T4 - s.t1 - (s.t3 - s.t2);
                        return this.adapterRef.channelInfo.clientNtpTime = s.t3 + Math.round(p / 2), this.adapterRef.instance.setSessionConfig(Object.assign({
                            maxVideoQuality: a
                        }, l, u)), this.adapterRef.instance.startSession()
                    }
                    return this.adapterRef.channelStatus = "leave", this.adapterRef.connectState.prevState = this.adapterRef.connectState.curState, this.adapterRef.connectState.curState = "DISCONNECTED", this.adapterRef.instance.emit("connection-state-change", this.adapterRef.connectState), this.adapterRef.instance.apiEventReport("setLogin", {
                        a_record: u.recordAudio,
                        v_record: u.recordVideo,
                        record_type: u.recordType,
                        host_speaker: u.isHostSpeaker,
                        result: d.code,
                        serverIp: d.ips && d.ips.turnaddrs && d.ips.turnaddrs.length && d.ips.turnaddrs[0]
                    }), Promise.reject(`code: ${d.code}, reason: ${d.desc}`)
                } catch (e) {
                    throw this.adapterRef.logger.log("获取到房间失败:", e.name, e.message, e), this.adapterRef.channelStatus = "leave", this.adapterRef.connectState.prevState = this.adapterRef.connectState.curState, this.adapterRef.connectState.curState = "DISCONNECTED", this.adapterRef.instance.emit("connection-state-change", this.adapterRef.connectState), this.adapterRef.instance.apiEventReport("setLogin", {
                        a_record: u.recordAudio,
                        v_record: u.recordVideo,
                        record_type: u.recordType,
                        host_speaker: u.isHostSpeaker,
                        result: -2,
                        serverIp: ""
                    }), e
                }
            }
            leaveChannel() {
                if (this.adapterRef.instance.apiEventReport("setLogout", {
                        reason: this.adapterRef.instance._params.JoinChannelRequestParam4WebRTC2.logoutReason || 0
                    }), !this.adapterRef._signalling) throw new c.default({
                    code: u.default.NO_SIGNALLING,
                    message: "No _signalling"
                });
                return this.adapterRef._signalling.doSendLogout().then(() => (this.adapterRef.channelStatus = "leave", this.adapterRef.connectState.prevState = this.adapterRef.connectState.curState, this.adapterRef.connectState.curState = "DISCONNECTED", this.adapterRef.instance.emit("connection-state-change", this.adapterRef.connectState), this.adapterRef.instance.stopSession()))
            }
            async addTasks(e) {
                const {
                    rtmpTasks: t = []
                } = e;
                if (!this.adapterRef.channelInfo.cid) return this.adapterRef.instance.apiFrequencyControl({
                    name: "addTasks",
                    code: -1,
                    param: JSON.stringify({
                        error: "请先加入房间",
                        version: 1,
                        taskId: t.length ? t[0].taskId : ""
                    }, null, "")
                }), this.adapterRef.logger.error("请先加入房间"), Promise.reject(new c.default({
                    code: u.default.INVALID_OPERATION,
                    message: "invalid operation"
                }));
                if (!t || !Array.isArray(t) || !t.length) return this.adapterRef.logger.error("添加推流任务失败: 参数格式错误，rtmpTasks为空，或者该数组长度为空"), Promise.reject(new c.default({
                    code: u.default.INVALID_PARAMETER,
                    message: "invalid parameter"
                }));
                let r = s.roomsTaskUrl;
                this.adapterRef.logger.log("roomsTaskUrl: ", s.roomsTaskUrl), this.adapterRef.instance._params.neRtcServerAddresses.roomServer && (r = this.adapterRef.instance._params.neRtcServerAddresses.roomServer, this.adapterRef.logger.log("私有化配置的 roomsTaskUrl: ", r)), r = `${r}${this.adapterRef.channelInfo.cid}/tasks`;
                let i = this.adapterRef.channelInfo.uid;
                "string" === this.adapterRef.channelInfo.uidType && (i = new d.default(i));
                for (let e = 0; e < t.length; e++) {
                    t[e].hostUid = i, t[e].version = 1, this.adapterRef.logger.log("rtmpTask: ", JSON.stringify(t[e]));
                    const n = t[e].layout;
                    n.users.forEach(e => {
                        "string" == typeof e.uid && (e.uid = new d.default(e.uid))
                    });
                    try {
                        const i = await o.ajax({
                            url: r,
                            type: "POST",
                            contentType: "application/json;charset=utf-8",
                            header: {
                                Token: this.adapterRef.channelInfo.turnToken
                            },
                            data: {
                                version: 1,
                                taskId: t[e].taskId,
                                streamUrl: t[e].streamUrl,
                                record: t[e].record,
                                hostUid: t[e].hostUid,
                                layout: n,
                                config: t[e].config,
                                extraInfo: t[e].extraInfo
                            }
                        });
                        if (200 !== i.code) return this.adapterRef.logger.error("添加推流任务失败: ", i), this.adapterRef.instance.apiFrequencyControl({
                            name: "addTasks",
                            code: i.code,
                            param: JSON.stringify({
                                version: 1,
                                taskId: t[e].taskId,
                                streamUrl: t[e].streamUrl,
                                record: t[e].record,
                                hostUid: parseInt(t[e].hostUid),
                                layout: t[e].layout,
                                config: t[e].config
                            }, null, " ")
                        }), Promise.reject(new c.default({
                            code: u.default.ADD_TASK_FAILED,
                            message: "add task failed"
                        }));
                        this.adapterRef.logger.log("添加推流任务完成"), this.adapterRef.instance.apiFrequencyControl({
                            name: "addTasks",
                            code: 0,
                            param: JSON.stringify({
                                version: 1,
                                taskId: t[e].taskId,
                                streamUrl: t[e].streamUrl,
                                record: t[e].record,
                                hostUid: t[e].hostUid,
                                layout: t[e].layout,
                                config: t[e].config
                            }, null, " ")
                        })
                    } catch (r) {
                        return this.adapterRef.logger.error("addTasks: ", r.name, r.message, r), this.adapterRef.instance.apiFrequencyControl({
                            name: "addTasks",
                            code: -1,
                            param: JSON.stringify({
                                error: "code error",
                                version: 1,
                                taskId: t[e].taskId,
                                streamUrl: t[e].streamUrl,
                                record: t[e].record,
                                hostUid: parseInt(t[e].hostUid),
                                layout: t[e].layout,
                                config: t[e].config
                            }, null, " ")
                        }), Promise.reject(new c.default({
                            code: u.default.ADD_TASK_FAILED,
                            message: "add task failed"
                        }))
                    }
                }
            }
            async deleteTasks(e) {
                const {
                    taskIds: t = []
                } = e;
                if (!this.adapterRef.channelInfo.cid) return this.adapterRef.instance.apiFrequencyControl({
                    name: "deleteTasks",
                    code: -1,
                    param: JSON.stringify({
                        error: "请先加入房间",
                        version: 1,
                        taskId: t.length ? t[0] : ""
                    }, null, " ")
                }), this.adapterRef.logger.error("请先加入房间"), Promise.reject(new c.default({
                    code: u.default.INVALID_OPERATION,
                    message: "please join room first"
                }));
                if (!t || !Array.isArray(t) || !t.length) return this.adapterRef.logger.error("删除推流任务失败: 参数格式错误，taskIds为空，或者该数组长度为空"), Promise.reject(new c.default({
                    code: u.default.INVALID_PARAMETER,
                    message: "invalid parameter"
                }));
                let r = s.roomsTaskUrl;
                this.adapterRef.logger.log("roomsTaskUrl: ", s.roomsTaskUrl), this.adapterRef.instance._params.neRtcServerAddresses.roomServer && (r = this.adapterRef.instance._params.neRtcServerAddresses.roomServer, this.adapterRef.logger.log("私有化配置的 roomsTaskUrl: ", r)), r = `${r}${this.adapterRef.channelInfo.cid}/tasks/delete`;
                for (let e = 0; e < t.length; e++) {
                    this.adapterRef.logger.log("deleteTasks: ", t[e]);
                    try {
                        const i = await o.ajax({
                            url: r,
                            type: "POST",
                            contentType: "application/json;charset=utf-8",
                            header: {
                                Token: this.adapterRef.channelInfo.turnToken
                            },
                            data: {
                                taskId: t[e]
                            }
                        });
                        return 200 === i.code ? (this.adapterRef.logger.log("删除推流任务完成"), this.adapterRef.instance.apiFrequencyControl({
                            name: "deleteTasks",
                            code: 0,
                            param: JSON.stringify({
                                taskId: t[e]
                            }, null, " ")
                        }), Promise.resolve()) : (this.adapterRef.logger.log("删除推流任务请求失败: %o", i), this.adapterRef.instance.apiFrequencyControl({
                            name: "deleteTasks",
                            code: i.code,
                            param: JSON.stringify({
                                taskId: t[e]
                            }, null, " ")
                        }), Promise.reject(new c.default({
                            code: u.default.DELETE_TASK_FAILED,
                            message: "delete task failed"
                        })))
                    } catch (r) {
                        return this.adapterRef.logger.error("deleteTasks发生错误: ", r.name, r.message, r), this.adapterRef.instance.apiFrequencyControl({
                            name: "deleteTasks",
                            code: -1,
                            param: JSON.stringify({
                                error: "code error",
                                taskId: t[e]
                            }, null, " ")
                        }), Promise.reject(new c.default({
                            code: u.default.DELETE_TASK_FAILED,
                            message: "delete task failed"
                        }))
                    }
                }
            }
            async updateTasks(e) {
                const {
                    rtmpTasks: t = []
                } = e;
                if (!this.adapterRef.channelInfo.cid) return this.adapterRef.instance.apiFrequencyControl({
                    name: "updateTasks",
                    code: -1,
                    param: JSON.stringify({
                        error: "请先加入房间",
                        version: 1,
                        taskId: t.length ? t[0].taskId : ""
                    }, null, " ")
                }), this.adapterRef.logger.error("请先加入房间"), Promise.reject(new c.default({
                    code: u.default.INVALID_OPERATION,
                    message: "please join room first"
                }));
                if (!t || !Array.isArray(t) || !t.length) return this.adapterRef.logger.error("更新推流任务失败: 参数格式错误，rtmpTasks为空，或者该数组长度为空"), Promise.reject(new c.default({
                    code: u.default.INVALID_PARAMETER,
                    message: "invalid parameter"
                }));
                let r = s.roomsTaskUrl;
                this.adapterRef.logger.log("roomsTaskUrl: ", s.roomsTaskUrl), this.adapterRef.instance._params.neRtcServerAddresses.roomServer && (r = this.adapterRef.instance._params.neRtcServerAddresses.roomServer, this.adapterRef.logger.log("私有化配置的 roomsTaskUrl: ", r)), r = `${r}${this.adapterRef.channelInfo.cid}/task/update`;
                let i = this.adapterRef.channelInfo.uid;
                "string" === this.adapterRef.channelInfo.uidType && (i = new d.default(i));
                for (let e = 0; e < t.length; e++) {
                    const n = t[e].layout;
                    n.users.forEach(e => {
                        "string" == typeof e.uid && (e.uid = new d.default(e.uid))
                    });
                    try {
                        const s = await o.ajax({
                            url: r,
                            type: "POST",
                            contentType: "application/json;charset=utf-8",
                            header: {
                                Token: this.adapterRef.channelInfo.turnToken
                            },
                            data: {
                                version: 1,
                                taskId: t[e].taskId,
                                streamUrl: t[e].streamUrl,
                                record: t[e].record,
                                hostUid: i,
                                layout: n,
                                config: t[e].config
                            }
                        });
                        return 200 === s.code ? (this.adapterRef.logger.log("更新推流任务完成"), this.adapterRef.instance.apiFrequencyControl({
                            name: "updateTasks",
                            code: 0,
                            param: JSON.stringify({
                                version: 1,
                                taskId: t[e].taskId,
                                streamUrl: t[e].streamUrl,
                                record: t[e].record,
                                hostUid: parseInt(t[e].hostUid),
                                layout: t[e].layout,
                                config: t[e].config
                            }, null, " ")
                        }), Promise.resolve()) : (this.adapterRef.logger.log("更新推流任务失败： %o", s), this.adapterRef.instance.apiFrequencyControl({
                            name: "updateTasks",
                            code: s.code,
                            param: JSON.stringify({
                                version: 1,
                                taskId: t[e].taskId,
                                streamUrl: t[e].streamUrl,
                                record: t[e].record,
                                hostUid: parseInt(t[e].hostUid),
                                layout: t[e].layout,
                                config: t[e].config
                            }, null, " ")
                        }), Promise.reject(new c.default({
                            code: u.default.UPDATE_TASKS_FAILED,
                            message: "update task failed"
                        })))
                    } catch (r) {
                        return this.adapterRef.logger.error("updateTasks 发生错误: ", r.name, r.message, r), this.adapterRef.instance.apiFrequencyControl({
                            name: "updateTasks",
                            code: -1,
                            param: JSON.stringify({
                                error: "code error",
                                version: 1,
                                taskId: t[e].taskId,
                                streamUrl: t[e].streamUrl,
                                record: t[e].record,
                                hostUid: parseInt(t[e].hostUid),
                                layout: t[e].layout,
                                config: t[e].config
                            }, null, " ")
                        }), Promise.reject(new c.default({
                            code: u.default.UPDATE_TASKS_FAILED,
                            message: "update task failed"
                        }))
                    }
                }
            }
            destroy() {
                this.adapterRef.logger.log("清除 meeting"), this._reset()
            }
        }
        t.Meeting = l
    }, function(e, t, r) {
        var i = r(11),
            n = e.exports;
        ! function() {
            "use strict";
            var e, t, r, o = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
                s = {
                    "\b": "\\b",
                    "\t": "\\t",
                    "\n": "\\n",
                    "\f": "\\f",
                    "\r": "\\r",
                    '"': '\\"',
                    "\\": "\\\\"
                };

            function a(e) {
                return o.lastIndex = 0, o.test(e) ? '"' + e.replace(o, (function(e) {
                    var t = s[e];
                    return "string" == typeof t ? t : "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4)
                })) + '"' : '"' + e + '"'
            }
            "function" != typeof n.stringify && (n.stringify = function(n, o, s) {
                var d;
                if (e = "", t = "", "number" == typeof s)
                    for (d = 0; d < s; d += 1) t += " ";
                else "string" == typeof s && (t = s);
                if (r = o, o && "function" != typeof o && ("object" != typeof o || "number" != typeof o.length)) throw new Error("JSON.stringify");
                return function n(o, s) {
                    var d, c, u, l, p, f = e,
                        h = s[o],
                        m = null != h && (h instanceof i || i.isBigNumber(h));
                    switch (h && "object" == typeof h && "function" == typeof h.toJSON && (h = h.toJSON(o)), "function" == typeof r && (h = r.call(s, o, h)), typeof h) {
                        case "string":
                            return m ? h : a(h);
                        case "number":
                            return isFinite(h) ? String(h) : "null";
                        case "boolean":
                        case "null":
                        case "bigint":
                            return String(h);
                        case "object":
                            if (!h) return "null";
                            if (e += t, p = [], "[object Array]" === Object.prototype.toString.apply(h)) {
                                for (l = h.length, d = 0; d < l; d += 1) p[d] = n(d, h) || "null";
                                return u = 0 === p.length ? "[]" : e ? "[\n" + e + p.join(",\n" + e) + "\n" + f + "]" : "[" + p.join(",") + "]", e = f, u
                            }
                            if (r && "object" == typeof r)
                                for (l = r.length, d = 0; d < l; d += 1) "string" == typeof r[d] && (u = n(c = r[d], h)) && p.push(a(c) + (e ? ": " : ":") + u);
                            else Object.keys(h).forEach((function(t) {
                                var r = n(t, h);
                                r && p.push(a(t) + (e ? ": " : ":") + r)
                            }));
                            return u = 0 === p.length ? "{}" : e ? "{\n" + e + p.join(",\n" + e) + "\n" + f + "}" : "{" + p.join(",") + "}", e = f, u
                    }
                }("", {
                    "": n
                })
            })
        }()
    }, function(e, t, r) {
        var i = null;
        const n = /(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])/,
            o = /(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)/;
        e.exports = function(e) {
            "use strict";
            var t = {
                strict: !1,
                storeAsString: !1,
                alwaysParseAsBig: !1,
                useNativeBigInt: !1,
                protoAction: "error",
                constructorAction: "error"
            };
            if (null != e) {
                if (!0 === e.strict && (t.strict = !0), !0 === e.storeAsString && (t.storeAsString = !0), t.alwaysParseAsBig = !0 === e.alwaysParseAsBig && e.alwaysParseAsBig, t.useNativeBigInt = !0 === e.useNativeBigInt && e.useNativeBigInt, void 0 !== e.constructorAction) {
                    if ("error" !== e.constructorAction && "ignore" !== e.constructorAction && "preserve" !== e.constructorAction) throw new Error('Incorrect value for constructorAction option, must be "error", "ignore" or undefined but passed ' + e.constructorAction);
                    t.constructorAction = e.constructorAction
                }
                if (void 0 !== e.protoAction) {
                    if ("error" !== e.protoAction && "ignore" !== e.protoAction && "preserve" !== e.protoAction) throw new Error('Incorrect value for protoAction option, must be "error", "ignore" or undefined but passed ' + e.protoAction);
                    t.protoAction = e.protoAction
                }
            }
            var s, a, d, c, u = {
                    '"': '"',
                    "\\": "\\",
                    "/": "/",
                    b: "\b",
                    f: "\f",
                    n: "\n",
                    r: "\r",
                    t: "\t"
                },
                l = function(e) {
                    throw {
                        name: "SyntaxError",
                        message: e,
                        at: s,
                        text: d
                    }
                },
                p = function(e) {
                    return e && e !== a && l("Expected '" + e + "' instead of '" + a + "'"), a = d.charAt(s), s += 1, a
                },
                f = function() {
                    var e, n = "";
                    for ("-" === a && (n = "-", p("-")); a >= "0" && a <= "9";) n += a, p();
                    if ("." === a)
                        for (n += "."; p() && a >= "0" && a <= "9";) n += a;
                    if ("e" === a || "E" === a)
                        for (n += a, p(), "-" !== a && "+" !== a || (n += a, p()); a >= "0" && a <= "9";) n += a, p();
                    if (e = +n, isFinite(e)) return null == i && (i = r(11)), n.length > 15 ? t.storeAsString ? n : t.useNativeBigInt ? BigInt(n) : new i(n) : t.alwaysParseAsBig ? t.useNativeBigInt ? BigInt(e) : new i(e) : e;
                    l("Bad number")
                },
                h = function() {
                    var e, t, r, i = "";
                    if ('"' === a)
                        for (var n = s; p();) {
                            if ('"' === a) return s - 1 > n && (i += d.substring(n, s - 1)), p(), i;
                            if ("\\" === a) {
                                if (s - 1 > n && (i += d.substring(n, s - 1)), p(), "u" === a) {
                                    for (r = 0, t = 0; t < 4 && (e = parseInt(p(), 16), isFinite(e)); t += 1) r = 16 * r + e;
                                    i += String.fromCharCode(r)
                                } else {
                                    if ("string" != typeof u[a]) break;
                                    i += u[a]
                                }
                                n = s
                            }
                        }
                    l("Bad string")
                },
                m = function() {
                    for (; a && a <= " ";) p()
                };
            return c = function() {
                    switch (m(), a) {
                        case "{":
                            return function() {
                                var e, r = Object.create(null);
                                if ("{" === a) {
                                    if (p("{"), m(), "}" === a) return p("}"), r;
                                    for (; a;) {
                                        if (e = h(), m(), p(":"), !0 === t.strict && Object.hasOwnProperty.call(r, e) && l('Duplicate key "' + e + '"'), !0 === n.test(e) ? "error" === t.protoAction ? l("Object contains forbidden prototype property") : "ignore" === t.protoAction ? c() : r[e] = c() : !0 === o.test(e) ? "error" === t.constructorAction ? l("Object contains forbidden constructor property") : "ignore" === t.constructorAction ? c() : r[e] = c() : r[e] = c(), m(), "}" === a) return p("}"), r;
                                        p(","), m()
                                    }
                                }
                                l("Bad object")
                            }();
                        case "[":
                            return function() {
                                var e = [];
                                if ("[" === a) {
                                    if (p("["), m(), "]" === a) return p("]"), e;
                                    for (; a;) {
                                        if (e.push(c()), m(), "]" === a) return p("]"), e;
                                        p(","), m()
                                    }
                                }
                                l("Bad array")
                            }();
                        case '"':
                            return h();
                        case "-":
                            return f();
                        default:
                            return a >= "0" && a <= "9" ? f() : function() {
                                switch (a) {
                                    case "t":
                                        return p("t"), p("r"), p("u"), p("e"), !0;
                                    case "f":
                                        return p("f"), p("a"), p("l"), p("s"), p("e"), !1;
                                    case "n":
                                        return p("n"), p("u"), p("l"), p("l"), null
                                }
                                l("Unexpected '" + a + "'")
                            }()
                    }
                },
                function(e, t) {
                    var r;
                    return d = e + "", s = 0, a = " ", r = c(), m(), a && l("Syntax error"), "function" == typeof t ? function e(r, i) {
                        var n, o = r[i];
                        return o && "object" == typeof o && Object.keys(o).forEach((function(t) {
                            void 0 !== (n = e(o, t)) ? o[t] = n : delete o[t]
                        })), t.call(r, i, o)
                    }({
                        "": r
                    }, "") : r
                }
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Config = t.ENV = void 0;
        t.Config = {
            checkSumUrl: "https://nrtc.netease.im/demo/getChecksum.action",
            createChannelUrl: "https://nrtc.netease.im/nrtc/createChannel.action",
            getChannelInfoUrl: "https://nrtc.netease.im/nrtc/getChannelInfos.action",
            roomsTaskUrl: "https://roomserver.netease.im/v2/sdk/rooms/"
        };
        t.ENV = "production"
    }, function(e, t) {
        var r, i;
        r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", i = {
            rotl: function(e, t) {
                return e << t | e >>> 32 - t
            },
            rotr: function(e, t) {
                return e << 32 - t | e >>> t
            },
            endian: function(e) {
                if (e.constructor == Number) return 16711935 & i.rotl(e, 8) | 4278255360 & i.rotl(e, 24);
                for (var t = 0; t < e.length; t++) e[t] = i.endian(e[t]);
                return e
            },
            randomBytes: function(e) {
                for (var t = []; e > 0; e--) t.push(Math.floor(256 * Math.random()));
                return t
            },
            bytesToWords: function(e) {
                for (var t = [], r = 0, i = 0; r < e.length; r++, i += 8) t[i >>> 5] |= e[r] << 24 - i % 32;
                return t
            },
            wordsToBytes: function(e) {
                for (var t = [], r = 0; r < 32 * e.length; r += 8) t.push(e[r >>> 5] >>> 24 - r % 32 & 255);
                return t
            },
            bytesToHex: function(e) {
                for (var t = [], r = 0; r < e.length; r++) t.push((e[r] >>> 4).toString(16)), t.push((15 & e[r]).toString(16));
                return t.join("")
            },
            hexToBytes: function(e) {
                for (var t = [], r = 0; r < e.length; r += 2) t.push(parseInt(e.substr(r, 2), 16));
                return t
            },
            bytesToBase64: function(e) {
                for (var t = [], i = 0; i < e.length; i += 3)
                    for (var n = e[i] << 16 | e[i + 1] << 8 | e[i + 2], o = 0; o < 4; o++) 8 * i + 6 * o <= 8 * e.length ? t.push(r.charAt(n >>> 6 * (3 - o) & 63)) : t.push("=");
                return t.join("")
            },
            base64ToBytes: function(e) {
                e = e.replace(/[^A-Z0-9+\/]/gi, "");
                for (var t = [], i = 0, n = 0; i < e.length; n = ++i % 4) 0 != n && t.push((r.indexOf(e.charAt(i - 1)) & Math.pow(2, -2 * n + 8) - 1) << 2 * n | r.indexOf(e.charAt(i)) >>> 6 - 2 * n);
                return t
            }
        }, e.exports = i
    }, function(e, t) {
        function r(e) {
            return !!e.constructor && "function" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e)
        }
        /*!
         * Determine if an object is a Buffer
         *
         * @author   Feross Aboukhadijeh <https://feross.org>
         * @license  MIT
         */
        e.exports = function(e) {
            return null != e && (r(e) || function(e) {
                return "function" == typeof e.readFloatLE && "function" == typeof e.slice && r(e.slice(0, 0))
            }(e) || !!e._isBuffer)
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Signalling = void 0;
        const n = r(3),
            o = r(79),
            s = r(26),
            a = i(r(11)),
            d = r(12),
            c = r(49),
            u = r(52),
            l = r(147),
            p = r(148),
            f = i(r(1)),
            h = i(r(0)),
            m = r(27),
            g = r(150);
        class v extends n.EventEmitter {
            constructor(e) {
                super(), this._reconnectionTimer = null, this._protoo = null, this._times = 0, this._url = null, this._timeOut = 2e3, this._reconnectionTimeout = 3e4, this._resolve = null, this._reject = null, this.consumers = {}, this.keepAliveTimer = null, this.netStatusTimer = null, this._reset(), this.adapterRef = e.adapterRef, this.sdkRef = e.sdkRef
            }
            async _reset() {
                this._reconnectionTimer && clearTimeout(this._reconnectionTimer), this._reconnectionTimer = null, this._protoo && await this._protoo.close(), this._protoo = null, this._times = 0, this._timeOut = 2e3, this._reconnectionTimeout = 3e4, this._resolve = null, this._reject = null
            }
            init(e, t = !1, r = !1) {
                return this._reconnectionTimer ? Promise.resolve() : new Promise((i, n) => {
                    t || (this._resolve = i), t || (this._reject = n), this._init(e), this._reconnectionTimer = setTimeout(() => {
                        this._reconnectionTimer = null, r ? this._reconnection() : this._connection()
                    }, this._timeOut)
                })
            }
            async _connection() {
                this.adapterRef.logger.log("Signalling _connection, times: %o", this._times), this._unbindEvent(), this._protoo && (await this._protoo.close(), this._protoo = null), this._times < 3 ? (this.adapterRef.logger.warn("Signalling 第%s次重连", ++this._times), this.init(this.adapterRef.channelInfo._protooUrl, !0)) : (this.adapterRef.logger.warn("Signalling 3次重连结束"), this._times = 0, this._reject && this._reject("timeout"))
            }
            async _reconnection() {
                if (this.adapterRef.logger.log("Signalling _reconnection, times: %o", this._times), !this._reconnectionTimer) {
                    this.adapterRef.connectState.prevState = this.adapterRef.connectState.curState, this.adapterRef.connectState.curState = "CONNECTING", this.adapterRef.instance.emit("connection-state-change", this.adapterRef.connectState), this._unbindEvent(), this._protoo && (await this._protoo.close(), this._protoo = null);
                    for (let e in this.adapterRef.remoteStreamMap) {
                        const t = this.adapterRef.remoteStreamMap[e];
                        t._play && (this.adapterRef.logger.warn("Destroy Remote Player", e), t._play.destroy())
                    }
                    if (this._times < 3) this.adapterRef.logger.warn("Signalling 第%s次重连", ++this._times), this._timeOut = 2e3 * this._times, this.init(this.adapterRef.channelInfo._protooUrl, !0, !0);
                    else {
                        if (this.adapterRef.logger.warn("Signalling  url: %s, 当前服务器地址重连结束, 尝试下一个服务器地址", this.adapterRef.channelInfo._protooUrl), ++this.adapterRef.channelInfo.wssArrIndex >= this.adapterRef.channelInfo.wssArr.length) return this.adapterRef.logger.error("所有的服务器地址都连接失败, 主动离开房间"), this.adapterRef.channelInfo.wssArrIndex = 0, this.adapterRef.instance.leave(), void this.adapterRef.instance.emit("error", "SOCKET_ERROR");
                        const e = this.adapterRef.channelInfo.wssArr[this.adapterRef.channelInfo.wssArrIndex];
                        this._timeOut = 2e3, this._times = 0, this.adapterRef.logger.warn("Signalling 第%s次重连", ++this._times), this.init(e, !0, !0)
                    }
                }
            }
            _init(e) {
                this.adapterRef.logger.log("Signalling: init url=%o", e), this.adapterRef.channelInfo._protooUrl = e, this._url = `wss://${e}&cid=${this.adapterRef.channelInfo.cid}&uid=${this.adapterRef.channelInfo.uid}`, this.adapterRef.logger.log("连接的url: ", this._url);
                const t = new g.WebSocketTransport(this._url, {
                    retry: {
                        retries: 0,
                        factor: 2,
                        minTimeout: 1e3,
                        maxTimeout: 2e3,
                        forever: !1,
                        maxRetryTime: 2e3
                    }
                });
                this._protoo = new g.Peer(t), this._bindEvent()
            }
            _bindEvent() {
                if (!this._protoo) throw new f.default({
                    code: h.default.NOT_FOUND,
                    message: "No this._protoo 1"
                });
                this._protoo.on("open", this.join.bind(this)), this._protoo.on("failed", this._handleFailed.bind(this)), this._protoo.on("notification", this._handleMessage.bind(this)), this._protoo.on("close", this._handleClose.bind(this)), this._protoo.on("disconnected", this._handleDisconnected.bind(this))
            }
            _unbindEvent() {
                this._protoo && (this._protoo.removeListener("open", this.join.bind(this)), this._protoo.removeListener("failed", this._handleFailed.bind(this)), this._protoo.removeListener("notification", this._handleMessage.bind(this)), this._protoo.removeListener("close", this._handleClose.bind(this)), this._protoo.removeListener("disconnected", this._handleDisconnected.bind(this)))
            }
            async _handleMessage(e) {
                var t, r;
                switch (e.method) {
                    case "OnPeerJoin": {
                        const {
                            requestId: t,
                            externData: r
                        } = e.data;
                        this.adapterRef.logger.log("收到OnPeerJoin成员加入消息 uid = %o", r.uid);
                        let i = r.uid;
                        "string" === this.adapterRef.channelInfo.uidType && (i = new a.default(i), i = i.toString());
                        let n = this.adapterRef.remoteStreamMap[i];
                        n || (n = new o.Stream({
                            isRemote: !0,
                            uid: i,
                            audio: !1,
                            video: !1,
                            screen: !1,
                            client: this.adapterRef.instance
                        }), this.adapterRef.remoteStreamMap[i] = n, this.adapterRef.memberMap[i] = i), this.adapterRef.instance._roleInfo.audienceList[i] = !1, this.adapterRef.instance.emit("peer-online", {
                            uid: i
                        });
                        break
                    }
                    case "OnPeerLeave": {
                        const {
                            requestId: t,
                            externData: r
                        } = e.data;
                        this.adapterRef.logger.log("OnPeerLeave externData = %o", r), r.userList && r.userList.forEach(e => {
                            var t;
                            let r = e.uid;
                            "string" === this.adapterRef.channelInfo.uidType && (r = new a.default(r), r = r.toString()), null === (t = this.adapterRef._mediasoup) || void 0 === t || t.removeUselessConsumeRequest({
                                uid: r
                            }), this.adapterRef.instance.clearMember(r), this.adapterRef.instance.removeSsrc(r), delete this.adapterRef.instance._roleInfo.audienceList[r]
                        });
                        break
                    }
                    case "OnNewProducer": {
                        const {
                            requestId: i,
                            externData: n
                        } = e.data;
                        this.adapterRef.logger.log("收到OnNewProducer发布消息 externData = %o", JSON.stringify(n.producerInfo, null, " "));
                        let s, {
                            uid: d,
                            producerId: c,
                            mediaType: u,
                            mute: l,
                            simulcastEnable: p
                        } = n.producerInfo;
                        switch ("string" === this.adapterRef.channelInfo.uidType && (d = new a.default(d), d = d.toString()), u) {
                            case "video":
                                s = "video";
                                break;
                            case "screenShare":
                                s = "screen";
                                break;
                            case "audio":
                                s = "audio";
                                break;
                            default:
                                throw new f.default({
                                    code: h.default.UNKNOWN_TYPE,
                                    message: "Unrecognized mediaType " + u
                                })
                        }
                        let m = this.adapterRef.remoteStreamMap[d];
                        m || (m = new o.Stream({
                            isRemote: !0,
                            uid: d,
                            audio: "audio" === s,
                            video: "video" === s,
                            screen: "screen" === s,
                            client: this.adapterRef.instance
                        }), this.adapterRef.remoteStreamMap[d] = m, this.adapterRef.memberMap[d] = d), m.pubStatus[s].consumerId ? null === (t = this.adapterRef._mediasoup) || void 0 === t || t.destroyConsumer(m.pubStatus[s].consumerId) : null === (r = this.adapterRef._mediasoup) || void 0 === r || r.removeUselessConsumeRequest({
                            producerId: m.pubStatus[s].producerId
                        }), m[s] = !0, m.pubStatus[s][s] = !0, m.pubStatus[s].producerId = c, m.pubStatus[s].mute = l, m.pubStatus[s].simulcastEnable = p, m.pubStatus[s].consumerId = "", this.adapterRef._enableRts && this.adapterRef._rtsTransport ? this.adapterRef.instance.emit("rts-stream-added", {
                            stream: m,
                            kind: u
                        }) : this.adapterRef.instance.emit("stream-added", {
                            stream: m,
                            mediaType: s
                        }), l && this.adapterRef.instance.emit("mute-" + s, {
                            uid: d
                        });
                        break
                    }
                    case "OnProducerClose": {
                        const {
                            requestId: t,
                            code: r,
                            errMsg: i,
                            externData: n
                        } = e.data;
                        let o, {
                            uid: s,
                            producerId: d,
                            mediaType: u,
                            cid: l
                        } = n;
                        switch ("string" === this.adapterRef.channelInfo.uidType && (s = new a.default(s), s = s.toString()), this.adapterRef.logger.log("收到OnProducerClose消息 code = %d, errMsg = %s, uid = %s, mediaType = %s, producerId: %s", r, i, s, u, d), u) {
                            case "video":
                                o = "video";
                                break;
                            case "screenShare":
                                o = "screen";
                                break;
                            case "audio":
                                o = "audio";
                                break;
                            default:
                                throw new f.default({
                                    code: h.default.UNKNOWN_TYPE,
                                    message: "Unrecognized mediaType " + u
                                })
                        }
                        let p = this.adapterRef.remoteStreamMap[s];
                        if (!p) return;
                        if (p.pubStatus[o].producerId !== d) return void this.adapterRef.logger.log("该 producerId 已经无效，不处理");
                        if (!this.adapterRef._mediasoup) throw new f.default({
                            code: h.default.NO_MEDIASERVER,
                            message: "media server error 22"
                        });
                        this.adapterRef._mediasoup.removeUselessConsumeRequest({
                            producerId: d
                        }), p.pubStatus[o].consumerId && (this.adapterRef._mediasoup.destroyConsumer(p.pubStatus[o].consumerId), p.pubStatus[o].consumerId = ""), this.adapterRef.instance.removeSsrc(s, o), p.subStatus[o] = !1, p.pubStatus[o][o] = !1, p[o] = !1, p.pubStatus[o].consumerId = "", p.pubStatus[o].producerId = "";
                        const m = this.adapterRef._statsReport && this.adapterRef._statsReport.formativeStatsReport && this.adapterRef._statsReport.formativeStatsReport.firstData.recvFirstData[s];
                        "audio" === o ? (p.mediaHelper && (p.mediaHelper.micTrack = null, c.emptyStreamWith(p.mediaHelper.audioStream, null)), delete this.adapterRef.remoteAudioStats[s], m && (m.recvFirstAudioFrame = !1, m.recvFirstAudioPackage = !1)) : "video" === o ? (p.mediaHelper && (p.mediaHelper.cameraTrack = null, p.mediaHelper.videoStream = null), delete this.adapterRef.remoteVideoStats[s], m && (m.recvFirstVideoFrame = !1, m.recvFirstVideoPackage = !1, m.videoTotalPlayDuration = 0)) : "screen" === o && (p.mediaHelper && (p.mediaHelper.screenTrack = null, p.mediaHelper.screenStream = null), delete this.adapterRef.remoteScreenStats[s], m && (m.recvFirstScreenFrame = !1, m.recvFirstScreenPackage = !1, m.screenTotalPlayDuration = 0)), this.adapterRef._enableRts ? this.adapterRef.instance.emit("rts-stream-removed", {
                            stream: p
                        }) : this.adapterRef.instance.emit("stream-removed", {
                            stream: p,
                            mediaType: o
                        });
                        break
                    }
                    case "OnConsumerClose": {
                        const {
                            requestId: t,
                            code: r,
                            errMsg: i,
                            consumerId: n,
                            producerId: o
                        } = e.data;
                        this.adapterRef.logger.log("chence OnConsumerClose code = %d errMsg = %s producerId = %s", r, i, o);
                        const s = this.consumers[n];
                        if (!s) break;
                        s.close();
                        break
                    }
                    case "consumerPaused": {
                        const {
                            consumerId: t
                        } = e.data;
                        if (!this.consumers[t]) break;
                        this.adapterRef.instance.emit("stream-removed", {
                            stream: remoteStream
                        });
                        break
                    }
                    case "consumerResumed":
                    case "consumerScore":
                        break;
                    case "OnTransportClose": {
                        const {
                            requestId: t,
                            code: r,
                            errMsg: i,
                            transportId: n
                        } = e.data;
                        if (this.adapterRef.logger.warn("chence OnTransportClose: code = %d, errMsg = %s, transportId = %s", r, i, n), !this.adapterRef._mediasoup) throw new f.default({
                            code: h.default.NO_MEDIASERVER,
                            message: "media server error 23"
                        });
                        this.adapterRef._mediasoup._sendTransport && (this.adapterRef._mediasoup._micProducer || this.adapterRef._mediasoup._webcamProducer) ? (this.adapterRef.logger.warn("服务器媒体进程crash，上行媒体和下行媒体同时重连"), this.adapterRef.channelStatus = "connectioning", this.adapterRef.instance.apiEventReport("setDisconnect", {
                            reason: "OnTransportClose"
                        }), this._reconnection()) : this.adapterRef.logger.warn("服务器发送了错误信息");
                        break
                    }
                    case "OnConsumerClose": {
                        const {
                            requestId: t,
                            code: r,
                            errMsg: i,
                            consumerId: n,
                            producerId: o
                        } = e.data;
                        if (this.adapterRef.logger.warn("chence OnConsumerClose: code = %d, errMsg = %s consumerId = %s, producerId = %s", r, i, n, o), !this.adapterRef._mediasoup) throw new f.default({
                            code: h.default.NO_MEDIASERVER,
                            message: "media server error 24"
                        });
                        this.adapterRef._mediasoup._recvTransport ? (this.adapterRef.logger.warn("下行媒体同时重连"), this.adapterRef.channelStatus = "connectioning", this.adapterRef.instance.apiEventReport("setDisconnect", {
                            reason: "OnConsumerClose"
                        }), this._reconnection()) : this.adapterRef.logger.warn("服务器发送了错误信息");
                        break
                    }
                    case "OnSignalRestart": {
                        const {
                            requestId: t,
                            code: r,
                            errMsg: i
                        } = e.data;
                        if (this.adapterRef.logger.warn("chence OnSignalRestart code = %d errMsg = %s", r, i), this.adapterRef.logger.warn("服务器信令进程crash，重连"), this.adapterRef.channelStatus = "connectioning", this.adapterRef.instance.apiEventReport("setDisconnect", {
                                reason: "OnSignalRestart"
                            }), !this._protoo) throw new f.default({
                            code: h.default.NOT_FOUND,
                            message: "No this._protoo 2"
                        });
                        this.adapterRef.logger.log("connected: ", this._protoo.connected), this._protoo.connected ? setTimeout(() => {
                            this.join()
                        }, 3e3) : this._reconnection();
                        break
                    }
                    case "activeSpeaker":
                        break;
                    case "OnKickOff": {
                        let {
                            msg: t,
                            reason: r
                        } = e.data.externData;
                        this._handleKickedNotify(r);
                        break
                    }
                    case "OnUserData": {
                        let {
                            type: t,
                            data: r
                        } = e.data.externData;
                        if ("StreamStatus" === t) this._handleStreamStatusNotify(r);
                        else if ("NetStatus" === t) this._handleNetStatusNotify(r);
                        else if ("Mute" === t) this.adapterRef.logger.log("mute变更: ", JSON.stringify(r, null, "")), this._handleMuteNotify(r);
                        else if ("UserRole" === t) this.adapterRef.logger.log("UserRole变更: ", JSON.stringify(r, null, "")), this._handleUserRoleNotify(e.data.externData);
                        else if ("RtmpTaskStatus" === t) this.adapterRef.logger.log("RtmpTaskStatus变更: ", JSON.stringify(r, null, "")), this.adapterRef.instance.emit("rtmp-state", r);
                        else if ("MediaCapability" === t) {
                            if (this.adapterRef.logger.error("MediaCapability房间能力变更: ", JSON.stringify(r, null, "")), this.adapterRef.mediaCapability.parseRoom(r), this.adapterRef.instance.emit("mediaCapabilityChange"), this.adapterRef._mediasoup && this.adapterRef.mediaCapability.room.videoCodecType && this.adapterRef.localStream) {
                                const e = this.adapterRef.mediaCapability.getCodecSend("video", this.adapterRef._mediasoup._sendTransport.handler._sendingRtpParametersByKind.video),
                                    t = this.adapterRef.mediaCapability.getCodecSend("screen", this.adapterRef._mediasoup._sendTransport.handler._sendingRtpParametersByKind.video),
                                    r = this.adapterRef._mediasoup._webcamProducerCodec && this.adapterRef._mediasoup._webcamProducerCodec !== e.codecName;
                                r && this.adapterRef.logger.error("将视频的Codec切走：", this.adapterRef._mediasoup._webcamProducerCodec, "=>", e.codecName);
                                const i = this.adapterRef._mediasoup._screenProducerCodec && this.adapterRef._mediasoup._screenProducerCodec !== e.codecName;
                                i && this.adapterRef.logger.error("将辅流的Codec切走：", this.adapterRef._mediasoup._screenProducerCodec, "=>", t.codecName), r || i ? this._protoo && this._protoo._transport && this._protoo._transport._ws && this._protoo._transport._ws.close() : this.adapterRef.logger.log("Codec保持不动。video:", this.adapterRef._mediasoup._webcamProducerCodec, ", screen:", this.adapterRef._mediasoup._screenProducerCodec)
                            }
                        } else "Ability" === t ? this._handleAbility(e.data.externData.data) : this.adapterRef.logger.error("收到OnUserData通知消息 type = %s, data: %o", t, r)
                    }
                }
            }
            _handleFailed() {
                this.adapterRef.logger.log("Signalling:_handleFailed")
            }
            _handleClose() {}
            _handleDisconnected() {
                this.adapterRef.logger.log("Signalling:_handleDisconnected"), this.adapterRef.logger.log("Signalling:_handleClose"), this.adapterRef.channelStatus = "connectioning", this.adapterRef.instance.apiEventReport("setDisconnect", {
                    reason: "2"
                }), this._reconnection()
            }
            async join() {
                let e;
                e = !!this.adapterRef.encryption.encryptionSecret && ("none" !== this.adapterRef.encryption.encryptionMode && "encoded-transform-sm4-128-ecb" !== this.adapterRef.encryption.encryptionMode);
                const t = {
                    method: "Join",
                    requestId: "" + Math.ceil(1e9 * Math.random()),
                    externData: {
                        userName: "" + this.adapterRef.channelInfo.uid,
                        token: this.adapterRef.channelInfo.token,
                        cname: "" + this.adapterRef.channelInfo.channelName,
                        subType: "select",
                        role: "part",
                        version: "2.0",
                        sessionMode: "meeting",
                        engineVersion: d.ENGINE_VERSION,
                        userRole: this.adapterRef.instance._roleInfo.userRole,
                        userType: 3,
                        platformType: 16,
                        rtmp: {
                            support: this.adapterRef.channelInfo.sessionConfig.liveEnable
                        },
                        record: {
                            host: this.adapterRef.channelInfo.sessionConfig.isHostSpeaker,
                            supportVideo: this.adapterRef.channelInfo.sessionConfig.recordVideo,
                            supportAuido: this.adapterRef.channelInfo.sessionConfig.recordAudio,
                            recordType: this.adapterRef.channelInfo.sessionConfig.recordType - 0
                        },
                        mediaCapabilitySet: this.adapterRef.mediaCapability.stringify(),
                        browser: {
                            name: s.RtcSystem.browser.ua,
                            version: "" + s.RtcSystem.browser.version
                        },
                        gmEnable: e,
                        gmMode: u.encryptionModeToInt(this.adapterRef.encryption.encryptionMode),
                        gmKey: this.adapterRef.encryption.encryptionSecret,
                        userPriority: this.adapterRef.userPriority
                    }
                };
                if (this.adapterRef.logger.log("Signalling: edge连接成功，加入房间 -> ", JSON.stringify(t, null, "")), this._times = 0, !this._protoo) throw new f.default({
                    code: h.default.NOT_FOUND,
                    message: "No this._protoo 3"
                });
                try {
                    const e = await this._protoo.request("Join", {
                        requestId: t.requestId,
                        externData: t.externData
                    });
                    if (this.adapterRef.logger.log("Signalling:加入房间 ack ->  ", JSON.stringify(e, (e, t) => "edgeRtpCapabilities" === e ? null : t)), 200 != e.code) {
                        this.adapterRef.logger.error("Signalling: 加入房间失败, reason = %s", e.errMsg);
                        const t = e.externData ? e.externData.errMsg : e.errMsg;
                        return void this._joinFailed(e.code, t)
                    }
                    if (this._reconnectionTimer && (clearTimeout(this._reconnectionTimer), this._reconnectionTimer = null), this.adapterRef.logger.log("Signalling:加入房间成功"), this.adapterRef.connectState.prevState = this.adapterRef.connectState.curState, this.adapterRef.connectState.curState = "CONNECTED", this.adapterRef.channelStatus, "connectioning" === this.adapterRef.channelStatus) {
                        if (this.adapterRef.logger.log("重连成功，清除之前的媒体的通道"), this.adapterRef.instance.apiEventReport("setRelogin", {
                                a_record: this.adapterRef.channelInfo.sessionConfig.recordAudio,
                                v_record: this.adapterRef.channelInfo.sessionConfig.recordVideo,
                                record_type: this.adapterRef.channelInfo.sessionConfig.recordType,
                                host_speaker: this.adapterRef.channelInfo.sessionConfig.isHostSpeaker,
                                result: 0,
                                reason: 1,
                                server_ip: this.adapterRef.channelInfo._protooUrl
                            }), this.adapterRef.instance.resetChannel(), !this.adapterRef._mediasoup) throw new f.default({
                            code: h.default.NO_MEDIASERVER,
                            message: "media server error 25"
                        });
                        this.adapterRef._mediasoup._edgeRtpCapabilities = e.edgeRtpCapabilities, this.adapterRef.mediaCapability.parseRoom(e.externData.roomCapability), this.adapterRef.instance.emit("mediaCapabilityChange"), await this.adapterRef._mediasoup.init(), this.adapterRef.localStream && this.adapterRef.instance.isPublished(this.adapterRef.localStream) ? (this.adapterRef.logger.log("重连成功，重新publish本端流"), this.adapterRef.instance.publish(this.adapterRef.localStream)) : this.adapterRef.logger.log("重连成功")
                    } else {
                        const t = this.adapterRef.instance._params.JoinChannelRequestParam4WebRTC2,
                            r = Date.now();
                        if (this.adapterRef.instance._params.JoinChannelRequestParam4WebRTC2.joinedSuccessedTime = r, this.adapterRef.instance.apiEventReport("setLogin", {
                                a_record: this.adapterRef.channelInfo.sessionConfig.recordAudio,
                                v_record: this.adapterRef.channelInfo.sessionConfig.recordVideo,
                                record_type: this.adapterRef.channelInfo.sessionConfig.recordType,
                                host_speaker: this.adapterRef.channelInfo.sessionConfig.isHostSpeaker,
                                result: 0,
                                server_ip: this.adapterRef.channelInfo._protooUrl,
                                signal_time_elapsed: t.startWssTime - t.startJoinTime,
                                time_elapsed: r - t.startJoinTime,
                                model: m.platform.name + "-" + m.platform.version
                            }), !this.adapterRef._mediasoup) throw new f.default({
                            code: h.default.NO_MEDIASERVER,
                            message: "media server error 26"
                        });
                        this.adapterRef._mediasoup._edgeRtpCapabilities = e.edgeRtpCapabilities, this.adapterRef.mediaCapability.parseRoom(e.externData.roomCapability), this.adapterRef.instance.emit("mediaCapabilityChange"), await this.adapterRef._mediasoup.init()
                    }
                    if (this.adapterRef.instance.emit("connection-state-change", this.adapterRef.connectState), this.adapterRef._enableRts && (await this.createRTSTransport(), this.adapterRef.instance.emit("connected")), this.adapterRef.logger.log("加入房间成功, 查看房间其他人的发布信息: ", JSON.stringify(e.externData.userList)), void 0 !== e.externData && e.externData.userList && e.externData.userList.length)
                        for (const t of e.externData.userList) {
                            let e = t.uid;
                            "string" === this.adapterRef.channelInfo.uidType && (e = new a.default(e), e = e.toString());
                            let r = this.adapterRef.remoteStreamMap[e];
                            if (r || (r = new o.Stream({
                                    isRemote: !0,
                                    uid: e,
                                    audio: !1,
                                    video: !1,
                                    screen: !1,
                                    client: this.adapterRef.instance
                                }), this.adapterRef.remoteStreamMap[e] = r, this.adapterRef.memberMap[e] = "" + e, this.adapterRef.instance.emit("peer-online", {
                                    uid: e
                                })), t.producerInfoList)
                                for (const e of t.producerInfoList) {
                                    const {
                                        mediaType: t,
                                        producerId: i,
                                        mute: n,
                                        simulcastEnable: o
                                    } = e;
                                    let s;
                                    switch (t) {
                                        case "video":
                                            s = "video";
                                            break;
                                        case "screenShare":
                                            s = "screen";
                                            break;
                                        case "audio":
                                            s = "audio";
                                            break;
                                        default:
                                            throw new f.default({
                                                code: h.default.UNKNOWN_TYPE,
                                                message: "Unrecognized mediaType " + t
                                            })
                                    }
                                    r[s] = !0, r.pubStatus[s][s] = !0, r.pubStatus[s].producerId = i, r.pubStatus[s].mute = n, r.pubStatus[s].simulcastEnable = o;
                                    let a = this;
                                    setTimeout(() => {
                                        a.adapterRef.logger.log("通知房间成员发布信息: ", JSON.stringify(r.pubStatus, null, "")), a.adapterRef._enableRts && a.adapterRef._rtsTransport ? a.adapterRef.instance.emit("rts-stream-added", {
                                            stream: r,
                                            kind: s
                                        }) : (r.pubStatus.audio.audio || r.pubStatus.video.video || r.pubStatus.screen.screen) && a.adapterRef.instance.emit("stream-added", {
                                            stream: r,
                                            mediaType: s
                                        }), n && a.adapterRef.instance.emit("mute-" + s, {
                                            uid: r.getId()
                                        })
                                    }, 0)
                                }
                        }
                    this._resolve && (this.adapterRef.logger.log("加入房间成功, 反馈通知"), this._resolve(e), this._resolve = null), this.doSendKeepAliveTask()
                } catch (e) {
                    this.adapterRef.logger.error("join() 登录失败, " + e.name + ": " + e.message), this._joinFailed(-1, "LOGIN_ERROR")
                }
            }
            _joinFailed(e, t) {
                this.adapterRef.connectState.prevState = this.adapterRef.connectState.curState, this.adapterRef.connectState.curState = "DISCONNECTED", this.adapterRef.channelStatus = "init", this.adapterRef.instance.emit("connection-state-change", this.adapterRef.connectState), 4009 === e && this.adapterRef.instance.emit("crypt-error", {
                    cryptType: this.adapterRef.encryption.encryptionMode
                });
                const r = Date.now(),
                    i = this.adapterRef.instance._params.JoinChannelRequestParam4WebRTC2;
                this.adapterRef.instance.apiEventReport("setLogin", {
                    a_record: this.adapterRef.channelInfo.sessionConfig.recordAudio,
                    v_record: this.adapterRef.channelInfo.sessionConfig.recordVideo,
                    record_type: this.adapterRef.channelInfo.sessionConfig.recordType,
                    host_speaker: this.adapterRef.channelInfo.sessionConfig.isHostSpeaker,
                    result: e,
                    server_ip: this.adapterRef.channelInfo._protooUrl,
                    signal_time_elapsed: i.startWssTime - i.startJoinTime,
                    time_elapsed: r - i.startJoinTime,
                    model: m.platform.name + "-" + m.platform.version
                }), this._reject && "connectioning" !== this.adapterRef.channelStatus ? (this.adapterRef.logger.error("加入房间失败, 反馈通知"), this._reject(t), this._reject = null, this.keepAliveTimer && (clearInterval(this.keepAliveTimer), this.keepAliveTimer = null), this.adapterRef.channelStatus = "leave", this.adapterRef.instance.stopSession()) : (this.adapterRef.logger.error("网络重连时，加入房间失败，主动离开"), this.adapterRef.instance.emit("error", "RELOGIN_ERROR"), this.adapterRef.instance.leave())
            }
            doSendKeepAliveTask() {
                this.keepAliveTimer && (clearInterval(this.keepAliveTimer), this.keepAliveTimer = null), this.keepAliveTimer = setInterval(() => {
                    this.doSendKeepAlive()
                }, 6e3), this.netStatusTimer && (clearInterval(this.netStatusTimer), this.netStatusTimer = null), this.netStatusTimer = setInterval(() => {
                    this.adapterRef.instance.emit("network-quality", this.adapterRef.netStatusList)
                }, 2e3)
            }
            async doSendKeepAlive() {
                if (!this.adapterRef._signalling || !this.adapterRef._signalling._protoo) throw new f.default({
                    code: h.default.NOT_FOUND,
                    message: "No _protoo 15"
                });
                if (!1 !== this.adapterRef._signalling._protoo.connected) try {
                    if (!this._protoo) throw new f.default({
                        code: h.default.NOT_FOUND,
                        message: "No this._protoo 4"
                    });
                    await this._protoo.request("Heartbeat")
                } catch (e) {
                    this.adapterRef.logger.error("信令包活失败", e.name, e.message), this.keepAliveTimer && (clearInterval(this.keepAliveTimer), this.keepAliveTimer = null), this.netStatusTimer && (clearInterval(this.netStatusTimer), this.netStatusTimer = null)
                }
            }
            async createRTSTransport() {
                if (this.adapterRef.logger.log("createRTSTransport()"), !this._protoo) throw new f.default({
                    code: h.default.NOT_FOUND,
                    message: "createRTSTransport: _protoo is null"
                });
                if (!this._url) throw new f.default({
                    code: h.default.NOT_FOUND,
                    message: "createRTSTransport: _url is null"
                });
                try {
                    const e = await this._protoo.request("CreateWsTrasnport");
                    this.adapterRef.logger.warn("CreateWsTrasnport response: ", JSON.stringify(e, null, ""));
                    const {
                        code: t,
                        errMsg: r,
                        transportId: i,
                        wsPort: n = "6666"
                    } = e;
                    200 == t ? (this.adapterRef._rtsTransport && (this.adapterRef.logger.log("CreateWsTrasnport: 需要更新"), this.adapterRef._rtsTransport.destroy()), this.adapterRef.logger.log("CreateWsTrasnport: 开始创建"), this.adapterRef._rtsTransport = new l.RTSTransport({
                        url: this._url.replace(/:\d+/, ":" + n) + "&transportId=" + i,
                        transportId: i,
                        port: n,
                        adapterRef: this.adapterRef
                    })) : this.adapterRef.logger.error(`createWsTrasnport failed, code: ${t}, reason: ${r}`)
                } catch (e) {
                    throw this.adapterRef.logger.error("createRTSTransport failed: %o", e), e
                }
            }
            async rtsRequestKeyFrame(e) {
                if (this.adapterRef.logger.log("rtsRequestKeyFrame(): ", e), !this._protoo) throw new f.default({
                    code: h.default.NOT_FOUND,
                    message: "rtsRequestKeyFrame: no _proto"
                });
                if (!e) throw new f.default({
                    code: h.default.NOT_FOUND,
                    message: "rtsRequestKeyFrame: no consumerId"
                });
                try {
                    const t = await this._protoo.request("RequestKeyFrame", {
                        consumerId: e
                    });
                    this.adapterRef.logger.warn("rtsRequestKeyFrame response: ", t);
                    let {
                        code: r,
                        errMsg: i
                    } = t;
                    200 == r ? this.adapterRef.logger.log("RTS 关键帧请求完成") : this.adapterRef.logger.error(`RTS 关键帧请求失败, code: ${r}, reason: ${i}`)
                } catch (e) {
                    throw this.adapterRef.logger.error("rtsRequestKeyFrame failed: %o", e), e
                }
            }
            async doSendLogout() {
                if (this.adapterRef.logger.log("doSendLogout begin"), this.keepAliveTimer && (clearInterval(this.keepAliveTimer), this.keepAliveTimer = null), this.netStatusTimer && (clearInterval(this.netStatusTimer), this.netStatusTimer = null), !this._protoo || !this._protoo.connected) return;
                let e = {
                    requestId: "" + Math.ceil(1e9 * Math.random()),
                    externData: {
                        reason: 0
                    }
                };
                this._protoo.notify("Leave", e), this.adapterRef.logger.log("doSendLogout success")
            }
            _handleStreamStatusNotify(e) {}
            _handleNetStatusNotify(e) {
                const t = e.netStatusList;
                let r = p.parseBase64(t).toString(),
                    i = [],
                    n = r.substr(2, 2) + r.substr(0, 2);
                n = parseInt(n, 16), r = r.substr(4);
                for (let e = 0; e < n; e++) {
                    let e = r.substr(0, 16);
                    e = o(e);
                    const t = r.substr(16, 2),
                        n = r.substr(18, 2);
                    let a = 0,
                        d = null;
                    if ("00" != r.substr(20, 2)) {
                        const e = r.substr(22, 2);
                        a = parseInt(e, 16), d = r.substr(24, a), a++
                    }
                    const c = {
                        uid: "string" === this.adapterRef.channelInfo.uidType ? s(e) : parseInt(e, 16),
                        downlinkNetworkQuality: parseInt(t, 16),
                        uplinkNetworkQuality: parseInt(n, 16)
                    };
                    i.push(c), r = r.substr(22 + a)
                }

                function o(e) {
                    let t = [];
                    for (var r = e.length; r >= 1; r -= 2) t.push(e[r - 2], e[r - 1]);
                    return t.join("")
                }

                function s(e) {
                    const t = e.length;
                    let r, i = new Array(t),
                        n = new a.default(0);
                    for (let n = 0; n < t; n++) r = e.charCodeAt(n), 48 <= r && r < 58 ? r -= 48 : r = (223 & r) - 65 + 10, i[n] = r;
                    for (let e = 0; e < i.length; e++) {
                        const t = i[e];
                        n = c(d(n, 16), t)
                    }
                    return n.toString()
                }

                function d(e, t) {
                    if (0 == e.toNumber()) return e;
                    const r = e.multipliedBy(t);
                    return a.default("7e+500").times(t), e.multipliedBy("-a", 16), r
                }

                function c(e, t) {
                    return t = e.plus(t), a.default(.7).plus(e).plus(t), e.plus("0.1", 8), t
                }
                let u = !0,
                    l = [];
                i = i.filter(e => 0 != e.uid), this.adapterRef.netStatusList.map(e => {
                    u = !0, i.map(t => {
                        e.uid != t.uid && 0 != t.uid || (u = !1)
                    }), u && l.push(e)
                });
                let f = l.concat(i);
                f = f.filter(e => !0 !== this.adapterRef.instance._roleInfo.audienceList[e.uid]), this.adapterRef.netStatusList = f
            }
            _handleMuteNotify(e) {
                const t = e.producerId,
                    r = e.mute;
                Object.values(this.adapterRef.remoteStreamMap).forEach(e => {
                    e.pubStatus.audio.producerId === t ? (e.muteStatus.audioSend = r, r ? this.adapterRef.instance.emit("mute-audio", {
                        uid: e.getId()
                    }) : this.adapterRef.instance.emit("unmute-audio", {
                        uid: e.getId()
                    })) : e.pubStatus.video.producerId === t ? (e.muteStatus.videoSend = r, r ? this.adapterRef.instance.emit("mute-video", {
                        uid: e.getId()
                    }) : this.adapterRef.instance.emit("unmute-video", {
                        uid: e.getId()
                    })) : e.pubStatus.screen.producerId === t && (e.muteStatus.screenSend = r, r ? this.adapterRef.instance.emit("mute-screen", {
                        uid: e.getId()
                    }) : this.adapterRef.instance.emit("unmute-screen", {
                        uid: e.getId()
                    }))
                })
            }
            _handleUserRoleNotify(e) {
                let t = e.uid;
                "string" === this.adapterRef.channelInfo.uidType && (t = new a.default(t), t = t.toString());
                const r = e.data && e.data.userRole;
                this.adapterRef.logger.warn(`用户${t}角色变为${r?"观众":"主播"}`), t && 1 === r && (this.adapterRef.instance.clearMember(t), this.adapterRef.instance.removeSsrc(t), this.adapterRef.instance._roleInfo.audienceList[t] = !0), t && 0 === r && (this.adapterRef.instance.emit("peer-online", {
                    uid: t
                }), this.adapterRef.instance._roleInfo.audienceList[t] = !1)
            }
            _handleAbility(e) {
                this.adapterRef.instance.emit("warning", {
                    code: e.code,
                    msg: e.msg
                })
            }
            _handleKickedNotify(e, t = this.adapterRef.channelInfo.uid) {
                "string" === this.adapterRef.channelInfo.uidType && (t = (t = new a.default(t)).toString()), 1 == e ? (this.adapterRef.logger.warn("房间被关闭"), this.adapterRef.instance._params.JoinChannelRequestParam4WebRTC2.logoutReason = 30207, this.adapterRef.instance.leave(), this.adapterRef.instance.emit("channel-closed", {})) : 2 == e && (this.adapterRef.logger.warn(t + "被提出房间"), t.toString() == this.adapterRef.channelInfo.uid.toString() && (this.adapterRef.instance._params.JoinChannelRequestParam4WebRTC2.logoutReason = 30206, this.adapterRef.instance.leave()), this.adapterRef.instance.emit("client-banned", {
                    uid: t
                }))
            }
            destroy() {
                this.adapterRef.logger.log("清除 Signalling"), this._unbindEvent(), this._reset()
            }
        }
        t.Signalling = v
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Play = void 0;
        const n = r(3),
            o = r(139),
            s = i(r(1)),
            a = i(r(0));
        class d extends n.EventEmitter {
            constructor(e) {
                super(), this._reset(), this.adapterRef = e.adapterRef, this.sdkRef = e.sdkRef, this.uid = e.uid, this.videoDom = null, this.screenDom = null, this.audioDom = null, this.videoContainerDom = null, this.screenContainerDom = null, this.videoView = null, this.screenView = null, this.volume = null, this.index = 0, this.videoRenderMode = {
                    width: 0,
                    height: 0,
                    cut: !1
                }, this.screenRenderMode = {
                    width: 0,
                    height: 0,
                    cut: !1
                }, this.audioSinkId = "", this._watermarkControl = o.createWatermarkControl(this.adapterRef.logger), this._watermarkControlScreen = o.createWatermarkControl(this.adapterRef.logger), this.autoPlayType = 0
            }
            _reset() {
                this.sdkRef = null, this.videoDom = null, this.screenDom = null, this.videoContainerDom = null, this.screenContainerDom = null, this.videoView = null, this.screenView = null, this.audioDom = null, this.volume = null, this.index = 0, this.videoRenderMode = {
                    width: 0,
                    height: 0,
                    cut: !1
                }, this.screenRenderMode = {
                    width: 0,
                    height: 0,
                    cut: !1
                }
            }
            _initNodeVideo() {
                if (this._initVideoContainer(), this._initVideo(), this.videoDom && this.videoContainerDom) {
                    if (this.videoContainerDom == this.videoDom.parentNode) return void this.adapterRef.logger.log("Play: _initVideoNode: 节点已挂载，请勿重复挂载");
                    this.videoContainerDom.appendChild(this.videoDom), this.adapterRef.logger.log("Play: _initVideoNode, videoContainerDom: ", this.videoContainerDom.outerHTML)
                }
            }
            _initNodeScreen() {
                if (this._initScreenContainer(), this._initScreen(), this.screenDom && this.screenContainerDom) {
                    if (this.screenContainerDom == this.screenDom.parentNode) return void this.adapterRef.logger.log("Play: _initscreenNode: 节点已挂载，请勿重复挂载");
                    this.screenContainerDom.appendChild(this.screenDom), this.adapterRef.logger.log("Play: _initscreenNode, screenContainerDom: ", this.screenContainerDom.outerHTML)
                }
            }
            _initVideoContainer() {
                this.videoView && (this.videoContainerDom || (this.videoContainerDom = document.createElement("div"), this.videoContainerDom.className = "nertc-video-container", this.videoContainerDom.style.overflow = "hidden", this.videoContainerDom.style.position = "relative", this.videoContainerDom.style.width = this.videoView.clientWidth + "px", this.videoContainerDom.style.height = this.videoView.clientHeight + "px", this.videoContainerDom.style.display = "inline-block"))
            }
            _initScreenContainer() {
                this.screenContainerDom || (this.screenContainerDom = document.createElement("div"), this.screenContainerDom.className = "nertc-screen-container", this.screenContainerDom.style.overflow = "hidden", this.screenContainerDom.style.position = "relative", this.screenContainerDom.style.width = this.screenRenderMode.width + "px", this.screenContainerDom.style.height = this.screenRenderMode.height + "px", this.screenContainerDom.style.display = "inline-block")
            }
            _initVideo() {
                this.videoDom || (this.videoDom = document.createElement("video"), this.videoDom.style.position = "absolute", this.videoDom.style.left = "50%", this.videoDom.style.top = "50%", this.videoDom.style.transform = "translate(-50%,-50%)", this.videoDom.setAttribute("x-webkit-airplay", "x-webkit-airplay"), this.videoDom.setAttribute("playsinline", "playsinline"), this.videoDom.setAttribute("webkit-playsinline", "webkit-playsinline"), this.videoDom.preload = "auto", this.videoDom.dataset.uid = "" + this.uid, this.videoDom.autoplay = !0, this.videoDom.muted = !0, this.videoDom.addEventListener("resize", e => {
                    var t, r;
                    this.videoDom === e.target && this.videoRenderMode.width && this.videoRenderMode.height && (this.adapterRef.logger.info("setVideoRender on resize", null === (t = this.videoDom) || void 0 === t ? void 0 : t.videoWidth, null === (r = this.videoDom) || void 0 === r ? void 0 : r.videoHeight), this.setVideoRender())
                }))
            }
            _initScreen() {
                this.screenDom || (this.screenDom = document.createElement("video"), this.screenDom.style.position = "absolute", this.screenDom.style.left = "50%", this.screenDom.style.top = "50%", this.screenDom.style.transform = "translate(-50%,-50%)", this.screenDom.setAttribute("x-webkit-airplay", "x-webkit-airplay"), this.screenDom.setAttribute("playsinline", "playsinline"), this.screenDom.setAttribute("webkit-playsinline", "webkit-playsinline"), this.screenDom.preload = "auto", this.screenDom.dataset.uid = "" + this.uid, this.screenDom.autoplay = !0, this.screenDom.muted = !0, this.screenDom.addEventListener("resize", e => {
                    var t, r;
                    this.screenDom === e.target && this.screenRenderMode.width && this.screenRenderMode.height && (this.adapterRef.logger.info("setScreenRender on resize", null === (t = this.screenDom) || void 0 === t ? void 0 : t.videoWidth, null === (r = this.screenDom) || void 0 === r ? void 0 : r.videoHeight), this.setScreenRender())
                }))
            }
            _removeUselessDom() {
                if (!this.videoView) return;
                for (var e = this.videoView.children.length - 1; e >= 0; e--) this.videoView.children[e].outerHTML.indexOf("data-uid=") && (this.adapterRef.logger.log("删除多余的节点: ", this.videoView.children[e].outerHTML), this.videoView.removeChild(this.videoView.children[e]))
            }
            _mountVideoToDom() {
                if (this.videoContainerDom) {
                    if (this.videoView == this.videoContainerDom.parentNode) return void this.adapterRef.logger.log("Play: _mountVideoToDom: 节点已挂载，请勿重复挂载");
                    this.adapterRef.logger.log("Play: _mountVideoToDom: videoContainerDom: ", this.videoContainerDom.outerHTML), this.videoView && (this.videoView.appendChild(this.videoContainerDom), this._watermarkControl.start(this.videoContainerDom))
                }
            }
            _mountScreenToDom() {
                if (this.screenContainerDom) {
                    if (this.screenView == this.screenContainerDom.parentNode) return void this.adapterRef.logger.log("Play: _mountScreenToDom: 节点已挂载，请勿重复挂载");
                    this.adapterRef.logger.log("Play: _mountScreenToDom: screenContainerDom: ", this.screenContainerDom.outerHTML), this.screenView && (this.screenView.appendChild(this.screenContainerDom), this._watermarkControlScreen.start(this.screenContainerDom))
                }
            }
            async resume(e, t) {
                if (e) {
                    if (1 === this.autoPlayType && this.audioDom) try {
                        this.audioDom.muted = !1, await this.audioDom.play(), this.autoPlayType = 0
                    } catch (e) {
                        if (this.adapterRef.logger.warn("播放 %o 的音频出现问题:", this.uid, e.name, e.message, e), this.autoPlayType = 1, "NotAllowedError" === e.name) throw new s.default({
                            code: a.default.AUTO_PLAY_NOT_ALLOWED,
                            message: e.message
                        })
                    }
                    if (2 === this.autoPlayType && this.videoDom) try {
                        this.videoDom.muted = !1, await this.videoDom.play(), this.autoPlayType = 0
                    } catch (e) {
                        if (this.adapterRef && this.adapterRef.logger.warn("播放 %s 的视频出现问题:", this.uid, e.name, e.message, e), this.autoPlayType = 2, "NotAllowedError" === e.name) throw new s.default({
                            code: a.default.AUTO_PLAY_NOT_ALLOWED,
                            message: e.message
                        })
                    }
                }
            }
            async playAudioStream(e, t) {
                if (!e) return;
                if (this.adapterRef.logger.log(`播放音频, id: ${e.id}, active state: ${e.active}`), this.audioDom || (this.audioDom = document.createElement("audio")), this.audioDom.muted = !!t, this.audioDom.srcObject = e, this.adapterRef.logger.log("播放 %o 的音频, streamId: %o, stream状态: %o", this.uid, e.id, e.active), this.audioSinkId) try {
                    await this.audioDom.setSinkId(this.audioSinkId), this.adapterRef.logger.log("音频使用输出设备：%s", this.audioSinkId)
                } catch (e) {
                    this.adapterRef.logger.error("音频输出设备切换失败", e.name, e.message, e)
                }
                if (!e.active) return;
                await this.isPlayAudioStream() && this.adapterRef.logger.log("%o 的音频播放正常", this.uid);
                try {
                    this.audioDom.muted = !1, await this.audioDom.play(), this.adapterRef.logger.log("播放 %o 的音频完成，当前播放状态: %o", this.uid, this.audioDom && this.audioDom.played && this.audioDom.played.length)
                } catch (e) {
                    if (this.adapterRef.logger.warn("播放 %o 的音频出现问题: ", this.uid, e.name, e.message, e), "NotAllowedError" === e.name) throw this.autoPlayType = 1, new s.default({
                        code: a.default.AUTO_PLAY_NOT_ALLOWED,
                        message: e.toString(),
                        url: "https://doc.yunxin.163.com/docs/jcyOTA0ODM/jM3NDE0NTI?platformId=50082"
                    })
                }
            }
            async stopPlayAudioStream() {
                this.audioDom && (this.audioDom.muted = !0)
            }
            setPlayVolume(e) {
                this.volume = e, this.audioDom && (this.audioDom.volume = e / 255)
            }
            async isPlayAudioStream(e = !0) {
                const t = async e => {
                    if (e && await new Promise(t => {
                            setTimeout(t, e)
                        }), this.audioDom) {
                        let e = this.audioDom.played.length;
                        return e >= 1 ? this.audioDom.played.end(e - 1) : 0
                    }
                    return 0
                };
                if (!this.audioDom || !this.audioDom.srcObject) return !e;
                const r = await t(0);
                if (!r) return !1;
                this.adapterRef.logger.log("firstTimeRanges: ", r);
                const i = await t(500);
                return !!i && (this.adapterRef.logger.log("secondTimeRanges: ", i), i > r)
            }
            async isPlayVideoStream(e = !0) {
                const t = async e => (e && await new Promise(t => {
                    setTimeout(t, e)
                }), this.videoDom && this.videoDom.srcObject && this.videoDom.getVideoPlaybackQuality() ? this.videoDom.getVideoPlaybackQuality().totalVideoFrames : 0);
                if (!this.videoDom || !this.videoDom.srcObject) return !e;
                const r = await t(0);
                return await t(100) > r
            }
            async isPlayScreenStream(e = !0) {
                const t = async e => (e && await new Promise(t => {
                    setTimeout(t, e)
                }), this.screenDom && this.screenDom.srcObject && this.screenDom.getVideoPlaybackQuality() ? this.screenDom.getVideoPlaybackQuality().totalVideoFrames : 0);
                if (!this.screenDom || !this.screenDom.srcObject) return !e;
                const r = await t(0);
                return await t(100) > r
            }
            async isPlayStreamError(e) {
                switch (e) {
                    case "audio":
                        return this.isPlayAudioStream(!0);
                    case "video":
                        return this.isPlayVideoStream(!0);
                    case "screen":
                        return this.isPlayScreenStream(!0);
                    default:
                        return !0
                }
            }
            async playVideoStream(e, t) {
                if (e && t)
                    if (this.adapterRef.logger.log(`播放视频, id: ${e.id}, active state: ${e.active}`), this.videoDom && this.videoDom.srcObject === e) this.adapterRef.logger.log(`请勿重复 ${this.uid} 播放`);
                    else if (this.videoView = t, this._initNodeVideo(), this._mountVideoToDom(), this.videoDom)
                    if (this.videoDom.srcObject !== e) try {
                        this.videoDom.srcObject = e, this.adapterRef.logger.log("播放 %o 的视频频, streamId: %o, stream状态: %o", this.uid, e.id, e.active), this.videoDom.play().catch(e => {
                            "AbortError" === e.name || console.error(e)
                        }), this.adapterRef.logger.log("播放 %s 的视频完成，当前播放状态: %o", this.uid, this.videoDom && this.videoDom.played && this.videoDom.played.length)
                    } catch (e) {
                        if (this.adapterRef && this.adapterRef.logger.warn("播放 %s 的视频出现问题:", this.uid, e.name, e.message, e), "NotAllowedError" === e.name) throw this.autoPlayType = 2, new s.default({
                            code: a.default.AUTO_PLAY_NOT_ALLOWED,
                            message: e.toString(),
                            url: "https://doc.yunxin.163.com/docs/jcyOTA0ODM/jM3NDE0NTI?platformId=50082"
                        })
                    } else this.adapterRef.logger.log(`请勿重复 ${this.uid} 播放`);
                    else this.adapterRef.logger.error("没有视频源")
            }
            async playScreenStream(e, t) {
                if (e && t)
                    if (this.adapterRef.logger.log(`播放辅流视频, id: ${e.id}, active state: ${e.active}`), this.screenView = t, this._initNodeScreen(), this._mountScreenToDom(), this.screenDom)
                        if (this.screenDom.srcObject !== e) try {
                            this.screenDom.srcObject = e, this.adapterRef.logger.log("播放 %o 的辅流, streamId: %o, stream状态: %o", this.uid, e.id, e.active), await this.screenDom.play(), this.adapterRef.logger.log("播放 %s 的辅流，当前播放状态: %o", this.uid, this.screenDom && this.screenDom.played && this.screenDom.played.length)
                        } catch (e) {
                            this.adapterRef && this.adapterRef.logger.warn("播放 %s 的辅流出现问题: ", this.uid, e.name, e.message, e)
                        } else this.adapterRef.logger.log(`请勿重复 ${this.uid} 播放`);
                        else this.adapterRef.logger.error("辅流没有视频源")
            }
            async stopPlayVideoStream() {
                if (this.adapterRef.logger.log("stopPlayVideoStream: 停止播发视频"), this.videoContainerDom && this.videoDom) {
                    this.videoContainerDom == this.videoDom.parentNode ? (this.adapterRef.logger.log("清除 videoDom"), this.videoContainerDom.removeChild(this.videoDom)) : this.videoContainerDom.lastChild && (this.adapterRef.logger.log("videoContainerDom 删除子节点"), this.videoContainerDom.removeChild(this.videoContainerDom.lastChild));
                    try {
                        this.videoDom.remove(), this.videoDom.srcObject = null, this.videoDom = null
                    } catch (e) {
                        this.adapterRef.logger.log("stopPlayVideoStream e: ", e)
                    }
                }
                this.videoView && this.videoContainerDom && (this.videoView == this.videoContainerDom.parentNode ? (this.adapterRef.logger.log("清除 videoContainerDom"), this.videoView.removeChild(this.videoContainerDom)) : this.videoView.lastChild && (this.adapterRef.logger.log("videoView 删除子节点"), this.videoView.removeChild(this.videoView.lastChild), this.videoView.innerHTML = ""), this.videoContainerDom = null, this.videoView = null)
            }
            async stopPlayScreenStream() {
                if (this.adapterRef.logger.log("stopPlayVideoStream: 停止播发屏幕共享"), this.screenContainerDom && this.screenDom) {
                    this.screenContainerDom.removeChild(this.screenDom);
                    try {
                        this.screenDom.remove(), this.screenDom.srcObject = null, this.screenDom = null
                    } catch (e) {
                        this.adapterRef.logger.log("stopPlayScreenStream e: ", e)
                    }
                }
                this.screenView && this.screenContainerDom && (this.screenView.removeChild(this.screenContainerDom), this.screenContainerDom = null, this.screenView = null)
            }
            setVideoRender(e) {
                if (!this.videoDom) return;
                if (e ? (this.adapterRef.logger.log("setVideoRender: uid %s, options: %s", this.uid, JSON.stringify(e)), this.videoRenderMode = Object.assign({}, e)) : (e = this.videoRenderMode, this.adapterRef.logger.log("setVideoRender: uid %s, existing videoRenderMode: %s", this.uid, JSON.stringify(e))), this.videoContainerDom ? (this.videoContainerDom.style.width = e.width + "px", this.videoContainerDom.style.height = e.height + "px") : this.adapterRef.logger.error("未找到videoContainerDom"), !e.cut) return this.videoDom.style.height = "100%", void(this.videoDom.style.width = "100%");
                this.videoDom.videoWidth / this.videoDom.videoHeight > e.width / e.height ? (this.videoDom.style.width = "auto", this.videoDom.style.height = "100%") : (this.videoDom.style.width = "100%", this.videoDom.style.height = "auto")
            }
            setScreenRender(e) {
                if (!this.screenDom) return;
                if (e ? (this.adapterRef.logger.log("setScreenRender: uid %s, options: %s", this.uid, JSON.stringify(e, null, " ")), this.screenRenderMode = Object.assign({}, e)) : (e = this.screenRenderMode, this.adapterRef.logger.log("setScreenRender: uid %s, existing screenRenderMode: %s", this.uid, JSON.stringify(e, null, " "))), this.screenRenderMode = e, this.screenContainerDom ? (this.screenContainerDom.style.width = e.width + "px", this.screenContainerDom.style.height = e.height + "px") : this.adapterRef.logger.error("未找到screenContainerDom"), !e.cut) return this.screenDom.style.height = "100%", void(this.screenDom.style.width = "100%");
                this.screenDom.videoWidth / this.screenDom.videoHeight > e.width / e.height ? (this.screenDom.style.width = "auto", this.screenDom.style.height = "100%") : (this.screenDom.style.width = "100%", this.screenDom.style.height = "auto")
            }
            async setAudioOutput(e) {
                this.audioSinkId = e, this.audioDom && (await this.audioDom.setSinkId(e), this.adapterRef.logger.log("设置通话音频输出设备成功"))
            }
            async takeSnapshot(e, t) {
                let r = !e.mediaType && this.videoDom || "video" === e.mediaType,
                    i = !e.mediaType && this.screenDom || "screen" === e.mediaType,
                    n = document.createElement("canvas"),
                    o = n.getContext("2d");
                if (!o) throw new s.default({
                    code: a.default.NOT_FOUND,
                    message: "no context of canvas"
                });
                if (r) {
                    const r = e.name || (t || this.adapterRef.channelInfo.uid) + "-" + this.index++;
                    if (o.fillStyle = "#ffffff", !this.videoDom) throw new s.default({
                        code: a.default.NOT_FOUND,
                        message: "no videoDom"
                    });
                    o.fillRect(0, 0, this.videoDom.videoWidth, this.videoDom.videoHeight), n.width = this.videoDom.videoWidth, n.height = this.videoDom.videoHeight, o.drawImage(this.videoDom, 0, 0, this.videoDom.videoWidth, this.videoDom.videoHeight, 0, 0, this.videoDom.videoWidth, this.videoDom.videoHeight);
                    const d = await new Promise((e, t) => {
                        n.toBlob(t => {
                            this.adapterRef.logger.log("takeSnapshot, 获取到截图的blob: ", t);
                            let i = URL.createObjectURL(t);
                            this.adapterRef.logger.log("截图的url: ", i);
                            let n = document.createElement("a");
                            document.body.appendChild(n), n.style.display = "none", n.href = i, n.download = r + ".png", n.click(), window.URL.revokeObjectURL(i), e(r + ".png")
                        })
                    });
                    if (!i) return d
                }
                if (i) {
                    const r = e.name || (t || this.adapterRef.channelInfo.uid) + "-" + this.index++;
                    if (o.fillStyle = "#ffffff", !this.screenDom) throw new s.default({
                        code: a.default.NOT_FOUND,
                        message: "no screenDom"
                    });
                    o.fillRect(0, 0, this.screenDom.videoWidth, this.screenDom.videoHeight), n.width = this.screenDom.videoWidth, n.height = this.screenDom.videoHeight, o.drawImage(this.screenDom, 0, 0, this.screenDom.videoWidth, this.screenDom.videoHeight, 0, 0, this.screenDom.videoWidth, this.screenDom.videoHeight);
                    return await new Promise((e, t) => {
                        n.toBlob(t => {
                            this.adapterRef.logger.log("takeSnapshot, 获取到截图的blob: ", t);
                            let i = URL.createObjectURL(t);
                            this.adapterRef.logger.log("截图的url: ", i);
                            let n = document.createElement("a");
                            document.body.appendChild(n), n.style.display = "none", n.href = i, n.download = r + ".png", n.click(), window.URL.revokeObjectURL(i), e(r + ".png")
                        })
                    })
                }
            }
            destroy() {
                this.stopPlayAudioStream(), this.stopPlayVideoStream(), this.stopPlayScreenStream(), this._reset()
            }
        }
        t.Play = d
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.createWatermarkControl = t.WatermarkControl = void 0;
        const n = r(3),
            o = i(r(140)),
            s = r(25),
            a = function(e) {
                if (0 === e) return "rgba(0,0,0,0)";
                let t, r, i, n;
                return i = e % 256, r = (e = Math.floor(e / 256)) % 256, t = (e = Math.floor(e / 256)) % 256, n = (e = Math.floor(e / 256)) > 0 ? (e % 256 / 256).toFixed(2) : 1, `rgba(${t}, ${r}, ${i}, ${n})`
            };
        class d extends n.EventEmitter {
            constructor(e) {
                super(), this.logger = e, this.settings = {
                    defaultStyle: {
                        background: "rgba(128,128,128, 0.5)",
                        overflow: "hidden",
                        "white-space": "break-spaces",
                        position: "absolute",
                        wordBreak: "break-all",
                        color: "white",
                        fontSize: "10pt"
                    }
                }, this.watermarks = [], this.div = null
            }
            checkWatermarkParams(e) {
                e.textWatermarks && e.textWatermarks.forEach(e => {
                    const t = {
                        tag: "Stream.setCanvasWatermarkConfigs:textWatermarks.fontSize",
                        value: e.fontSize,
                        min: 1
                    };
                    s.isExistOptions(t).result && s.checkValidInteger(t);
                    const r = {
                        tag: "Stream.setCanvasWatermarkConfigs:textWatermarks.fontColor",
                        value: e.fontColor,
                        min: 0
                    };
                    s.isExistOptions(r).result && s.checkValidInteger(r);
                    const i = {
                        tag: "Stream.setCanvasWatermarkConfigs:textWatermarks.wmWidth",
                        value: e.wmWidth,
                        min: 0
                    };
                    s.isExistOptions(i).result && s.checkValidInteger(i);
                    const n = {
                        tag: "Stream.setCanvasWatermarkConfigs:textWatermarks.wmHeight",
                        value: e.wmHeight,
                        min: 0
                    };
                    s.isExistOptions(n).result && s.checkValidInteger(n);
                    const o = {
                        tag: "Stream.setCanvasWatermarkConfigs:textWatermarks.offsetX",
                        value: e.offsetX
                    };
                    s.isExistOptions(o).result && s.checkValidInteger(o);
                    const a = {
                        tag: "Stream.setCanvasWatermarkConfigs:textWatermarks.offsetY",
                        value: e.offsetY
                    };
                    s.isExistOptions(a).result && s.checkValidInteger(a)
                }), e.timestampWatermarks && [e.timestampWatermarks].forEach(e => {
                    const t = {
                        tag: "Stream.setCanvasWatermarkConfigs:timestampWatermarks.fontSize",
                        value: e.fontSize,
                        min: 1
                    };
                    s.isExistOptions(t).result && s.checkValidInteger(t);
                    const r = {
                        tag: "Stream.setCanvasWatermarkConfigs:timestampWatermarks.fontColor",
                        value: e.fontColor,
                        min: 0
                    };
                    s.isExistOptions(r).result && s.checkValidInteger(r);
                    const i = {
                        tag: "Stream.setCanvasWatermarkConfigs:timestampWatermarks.wmWidth",
                        value: e.wmWidth,
                        min: 0
                    };
                    s.isExistOptions(i).result && s.checkValidInteger(i);
                    const n = {
                        tag: "Stream.setCanvasWatermarkConfigs:timestampWatermarks.wmHeight",
                        value: e.wmHeight,
                        min: 0
                    };
                    s.isExistOptions(n).result && s.checkValidInteger(n);
                    const o = {
                        tag: "Stream.setCanvasWatermarkConfigs:timestampWatermarks.offsetX",
                        value: e.offsetX
                    };
                    s.isExistOptions(o).result && s.checkValidInteger(o);
                    const a = {
                        tag: "Stream.setCanvasWatermarkConfigs:timestampWatermarks.offsetY",
                        value: e.offsetY
                    };
                    s.isExistOptions(a).result && s.checkValidInteger(a)
                }), e.imageWatermarks && e.imageWatermarks.forEach(e => {
                    const t = {
                        tag: "Stream.setCanvasWatermarkConfigs.imageWatermarks.wmWidth",
                        value: e.wmWidth,
                        min: 0
                    };
                    s.isExistOptions(t).result && s.checkValidInteger(t);
                    const r = {
                        tag: "Stream.setCanvasWatermarkConfigs:imageWatermarks.wmHeight",
                        value: e.wmHeight,
                        min: 0
                    };
                    s.isExistOptions(r).result && s.checkValidInteger(r);
                    const i = {
                        tag: "Stream.setCanvasWatermarkConfigs:imageWatermarks.offsetX",
                        value: e.offsetX
                    };
                    s.isExistOptions(i).result && s.checkValidInteger(i);
                    const n = {
                        tag: "Stream.setCanvasWatermarkConfigs:imageWatermarks.offsetY",
                        value: e.offsetY
                    };
                    s.isExistOptions(n).result && s.checkValidInteger(n);
                    const o = {
                        tag: "Stream.setCanvasWatermarkConfigs:imageWatermarks.imageUrls",
                        value: e.imageUrls
                    };
                    s.checkExists(o);
                    const a = {
                        tag: "Stream.setCanvasWatermarkConfigs:imageWatermarks.imageUrls.length",
                        value: e.imageUrls.length,
                        min: 1
                    };
                    s.checkValidInteger(a);
                    const d = {
                        tag: "Stream.setCanvasWatermarkConfigs:imageWatermarks.fps",
                        value: e.fps,
                        min: 0
                    };
                    s.isExistOptions(d).result && s.checkValidFloat(d)
                })
            }
            updateWatermarks(e) {
                this.clear(), this.watermarks = [];
                const t = {
                    text: 0,
                    timestamp: 0,
                    image: 0
                };
                e.imageWatermarks && e.imageWatermarks.forEach(e => {
                    const t = Object.assign({}, this.settings.defaultStyle, {
                        background: "none"
                    });
                    let r;
                    "number" == typeof e.offsetX ? t.left = e.offsetX + "px" : e.offsetX && "string" == typeof e.offsetX && (t.left = e.offsetX), "number" == typeof e.offsetY ? t.top = e.offsetY + "px" : e.offsetY && "string" == typeof e.offsetY && (t.top = e.offsetY), 0 !== e.wmWidth && 0 !== e.wmHeight || (delete e.wmWidth, delete e.wmHeight), e.wmWidth && ("number" == typeof e.wmWidth ? t.width = e.wmWidth + "px" : "string" == typeof e.wmWidth && (t.width = e.wmWidth)), e.wmHeight && ("number" == typeof e.wmHeight ? t.height = e.wmHeight + "px" : "string" == typeof e.wmHeight && (t.height = e.wmHeight)), "number" == typeof e.wmHeight ? t.height = e.wmHeight + "px" : e.wmHeight && "string" == typeof e.wmHeight && (t.height = e.wmHeight), r = e.fps ? {
                        type: "image",
                        content: "",
                        imageUrls: e.imageUrls,
                        loop: !(!1 === e.loop),
                        loopIndex: 0,
                        interval: 1e3 / (e.fps || 1),
                        elem: null,
                        style: t
                    } : {
                        type: "image",
                        content: "",
                        imageUrls: [e.imageUrls[e.imageUrls.length - 1]],
                        loop: !1,
                        loopIndex: 0,
                        interval: 0,
                        elem: null,
                        style: t
                    }, this.watermarks.push(r)
                }), e.textWatermarks && e.textWatermarks.forEach(e => {
                    let r = e.content || "";
                    t.text++;
                    const i = Object.assign({}, this.settings.defaultStyle);
                    "number" == typeof e.fontColor ? i.color = a(e.fontColor) : e.fontColor && "string" == typeof e.fontColor && (i.color = e.fontColor), "number" == typeof e.fontSize ? i.fontSize = e.fontSize + "pt" : e.fontSize && "string" == typeof e.fontSize && (i.fontSize = e.fontSize), "number" == typeof e.offsetX ? i.left = e.offsetX + "px" : e.offsetX && "string" == typeof e.offsetX && (i.left = e.offsetX), "number" == typeof e.offsetY ? i.top = e.offsetY + "px" : e.offsetY && "string" == typeof e.offsetY && (i.top = e.offsetY), !e.wmWidth && !e.wmHeight || 0 === e.wmWidth || 0 === e.wmHeight ? i.background = "" : "number" == typeof e.wmColor ? i.background = a(e.wmColor) : e.wmColor && "string" == typeof e.wmColor && (i.background = e.wmColor), e.wmWidth, "number" == typeof e.wmWidth ? e.wmWidth > 0 && (i.width = e.wmWidth + "px") : "string" == typeof e.wmWidth && (i.width = e.wmWidth), e.wmHeight && ("number" == typeof e.wmHeight ? (e.wmHeight > 0 && (i.wmHeight = e.wmWidth + "px"), i.height = e.wmHeight + "px") : "string" == typeof e.wmHeight && (i.height = e.wmHeight));
                    const n = {
                        type: "text",
                        content: r,
                        loop: !1,
                        elem: null,
                        loopIndex: 0,
                        style: i
                    };
                    this.watermarks.push(n)
                }), e.timestampWatermarks && [e.timestampWatermarks].forEach(e => {
                    t.timestamp++;
                    const r = Object.assign({}, this.settings.defaultStyle);
                    "number" == typeof e.fontColor ? r.color = a(e.fontColor) : e.fontColor && "string" == typeof e.fontColor && (r.color = e.fontColor), "number" == typeof e.fontSize ? r.fontSize = e.fontSize + "pt" : e.fontSize && "string" == typeof e.fontSize && (r.fontSize = e.fontSize), "number" == typeof e.offsetX ? r.left = e.offsetX + "px" : e.offsetX && "string" == typeof e.offsetX && (r.left = e.offsetX), "number" == typeof e.offsetY ? r.top = e.offsetY + "px" : e.offsetY && "string" == typeof e.offsetY && (r.top = e.offsetY), !e.wmWidth && !e.wmHeight || 0 === e.wmWidth || 0 === e.wmHeight ? r.background = "" : "number" == typeof e.wmColor ? r.background = a(e.wmColor) : e.wmColor && "string" == typeof e.wmColor && (r.background = e.wmColor), e.wmWidth && ("number" == typeof e.wmWidth ? r.width = e.wmWidth + "px" : "string" == typeof e.wmWidth && (r.width = e.wmWidth)), e.wmHeight && ("number" == typeof e.wmHeight ? r.height = e.wmHeight + "px" : "string" == typeof e.wmHeight && (r.height = e.wmHeight));
                    const i = {
                        type: "timestamp",
                        content: "yyyy-mm-dd HH:MM:ss",
                        loop: !1,
                        loopIndex: 0,
                        elem: null,
                        style: r
                    };
                    this.watermarks.push(i)
                }), this.div && this.start(this.div)
            }
            start(e) {
                this.clear(), this.div = e, this.watermarks.forEach(t => {
                    let r;
                    switch (t.type) {
                        case "text":
                            r = document.createElement("pre"), r.className = "nim-watermark nim-watermark-text", r.innerText = t.content || "", Object.assign(r.style, t.style);
                            break;
                        case "timestamp":
                            r = document.createElement("pre"), r.className = "nim-watermark nim-watermark-timestamp", r.innerText = "", Object.assign(r.style, t.style);
                            break;
                        case "image":
                            !t.imageUrls && t.content && (t.imageUrls = [t.content]), r = document.createElement("div"), r.className = "nim-watermark nim-watermark-image-container", t.imgElems = [], t.imageUrls && t.imageUrls.length && t.imageUrls.forEach((e, i) => {
                                const n = document.createElement("img");
                                n.className = "nim-watermark nim-watermark-image nim-watermark-image-" + i, n.src = e, n.style.width = "100%", t.style.height && (n.style.height = "100%"), n.style.overflow = "hidden", t.imgElems && t.imgElems.push(n), r.appendChild(n), i > 0 && (n.style.display = "none")
                            }), t.loopIndex = -1;
                            const e = () => {
                                if (!t.interval && t.imgElems && t.loopIndex >= 0) t.imgElems[t.loopIndex].style.display = "";
                                else {
                                    if (t.imgElems && t.imgElems[t.loopIndex] && (t.imgElems[t.loopIndex].style.display = "none"), t.loopIndex++, t.imgElems && t.loopIndex >= t.imgElems.length) {
                                        if (!t.loop) return void(t.loopTimer && clearInterval(t.loopTimer));
                                        t.loopIndex = 0
                                    }
                                    t.imgElems && (t.imgElems[t.loopIndex].style.display = "")
                                }
                            };
                            e(), t.interval && (t.loopTimer = setInterval(e, t.interval)), Object.assign(r.style, t.style)
                    }
                    t.elem = r, e.appendChild(t.elem)
                })
            }
            clear() {
                this.div && this.watermarks.forEach(e => {
                    e.elem && (e.elem.remove(), e.elem = null), e.loopTimer && clearTimeout(e.loopTimer)
                })
            }
        }
        t.WatermarkControl = d;
        const c = new class {
            constructor() {
                this.controls = [], this.timer = setInterval(() => {
                    this.updateTimestamps()
                }, 1e3)
            }
            updateTimestamps() {
                this.controls.forEach(e => {
                    e.watermarks.filter(e => "timestamp" === e.type).forEach(e => {
                        e.elem && (e.elem.innerText = o.default(new Date, e.content || "yyyy-mm-dd HH:MM:ss"))
                    })
                })
            }
        };
        t.createWatermarkControl = function(e) {
            const t = new d(e);
            return c.controls.push(t), t
        }
    }, function(e, t, r) {
        var i;
        ! function(n) {
            "use strict";
            var o, s, a, d = (o = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZWN]|'[^']*'|'[^']*'/g, s = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g, a = /[^-+\dA-Z]/g, function(e, t, r, i) {
                if (1 !== arguments.length || "string" !== p(e) || /\d/.test(e) || (t = e, e = void 0), (e = e || new Date) instanceof Date || (e = new Date(e)), isNaN(e)) throw TypeError("Invalid date");
                var n = (t = String(d.masks[t] || t || d.masks.default)).slice(0, 4);
                "UTC:" !== n && "GMT:" !== n || (t = t.slice(4), r = !0, "GMT:" === n && (i = !0));
                var f = r ? "getUTC" : "get",
                    h = e[f + "Date"](),
                    m = e[f + "Day"](),
                    g = e[f + "Month"](),
                    v = e[f + "FullYear"](),
                    y = e[f + "Hours"](),
                    _ = e[f + "Minutes"](),
                    S = e[f + "Seconds"](),
                    b = e[f + "Milliseconds"](),
                    R = r ? 0 : e.getTimezoneOffset(),
                    w = u(e),
                    T = l(e),
                    E = {
                        d: h,
                        dd: c(h),
                        ddd: d.i18n.dayNames[m],
                        dddd: d.i18n.dayNames[m + 7],
                        m: g + 1,
                        mm: c(g + 1),
                        mmm: d.i18n.monthNames[g],
                        mmmm: d.i18n.monthNames[g + 12],
                        yy: String(v).slice(2),
                        yyyy: v,
                        h: y % 12 || 12,
                        hh: c(y % 12 || 12),
                        H: y,
                        HH: c(y),
                        M: _,
                        MM: c(_),
                        s: S,
                        ss: c(S),
                        l: c(b, 3),
                        L: c(Math.round(b / 10)),
                        t: y < 12 ? "a" : "p",
                        tt: y < 12 ? "am" : "pm",
                        T: y < 12 ? "A" : "P",
                        TT: y < 12 ? "AM" : "PM",
                        Z: i ? "GMT" : r ? "UTC" : (String(e).match(s) || [""]).pop().replace(a, ""),
                        o: (R > 0 ? "-" : "+") + c(100 * Math.floor(Math.abs(R) / 60) + Math.abs(R) % 60, 4),
                        S: ["th", "st", "nd", "rd"][h % 10 > 3 ? 0 : (h % 100 - h % 10 != 10) * h % 10],
                        W: w,
                        N: T
                    };
                return t.replace(o, (function(e) {
                    return e in E ? E[e] : e.slice(1, e.length - 1)
                }))
            });

            function c(e, t) {
                for (e = String(e), t = t || 2; e.length < t;) e = "0" + e;
                return e
            }

            function u(e) {
                var t = new Date(e.getFullYear(), e.getMonth(), e.getDate());
                t.setDate(t.getDate() - (t.getDay() + 6) % 7 + 3);
                var r = new Date(t.getFullYear(), 0, 4);
                r.setDate(r.getDate() - (r.getDay() + 6) % 7 + 3);
                var i = t.getTimezoneOffset() - r.getTimezoneOffset();
                t.setHours(t.getHours() - i);
                var n = (t - r) / 6048e5;
                return 1 + Math.floor(n)
            }

            function l(e) {
                var t = e.getDay();
                return 0 === t && (t = 7), t
            }

            function p(e) {
                return null === e ? "null" : void 0 === e ? "undefined" : "object" != typeof e ? typeof e : Array.isArray(e) ? "array" : {}.toString.call(e).slice(8, -1).toLowerCase()
            }
            d.masks = {
                default: "ddd mmm dd yyyy HH:MM:ss",
                shortDate: "m/d/yy",
                mediumDate: "mmm d, yyyy",
                longDate: "mmmm d, yyyy",
                fullDate: "dddd, mmmm d, yyyy",
                shortTime: "h:MM TT",
                mediumTime: "h:MM:ss TT",
                longTime: "h:MM:ss TT Z",
                isoDate: "yyyy-mm-dd",
                isoTime: "HH:MM:ss",
                isoDateTime: "yyyy-mm-dd'T'HH:MM:sso",
                isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'",
                expiresHeaderFormat: "ddd, dd mmm yyyy HH:MM:ss Z"
            }, d.i18n = {
                dayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                monthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
            }, void 0 === (i = function() {
                return d
            }.call(t, r, t, e)) || (e.exports = i)
        }()
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Record = void 0;
        const n = r(3),
            o = i(r(1)),
            s = i(r(0));
        class a extends n.EventEmitter {
            constructor(e) {
                super(), this._status = {
                    recordedChunks: [],
                    isRecording: !1,
                    stream: null,
                    option: null,
                    contentTypes: [],
                    mimeType: "",
                    audioController: null,
                    opStream: null,
                    state: "init",
                    timer: null,
                    fileName: null,
                    recordId: 0,
                    recordStatus: "init",
                    recordUrl: null,
                    startTime: null,
                    endTime: null
                }, this._recorder = null, this._reset(), this.sdkRef = e.sdkRef, this.adapterRef = e.adapterRef, this.uid = e.uid, this._media = e.media
            }
            async start(e) {
                const {
                    stream: t = null,
                    uid: r = "0",
                    type: i = "video",
                    reset: n = !1
                } = e;
                this.adapterRef.logger.log("开始本地录制: ", JSON.stringify(e, null, ""));
                let a = null;
                if (window.MediaRecorder && MediaRecorder.isTypeSupported || (this.adapterRef.logger.log("浏览器不支持本地录制"), a = "RecordBrowserNotSupport"), this._status.isRecording && (this.adapterRef.logger.log("当前正在录制中"), a = "RecordInRecording"), this._status.recordUrl && "downloaded" !== this._status.recordStatus && (e.reset ? (this.adapterRef.logger.warn("MediaRecordHelper: start: 存在未下载视频，强制清除..."), await this.clean()) : (this.adapterRef.logger.log("MediaRecordHelper: start : 请先下载或重置上一段录制文件"), a = "RecordFileExsit")), a) return this.adapterRef.instance.apiFrequencyControl({
                    name: "startMediaRecording",
                    code: -1,
                    param: JSON.stringify({
                        reason: a,
                        uid: r,
                        mediaType: i,
                        recordName: ""
                    }, null, " ")
                }), a;
                this._status.stream = t, this._status.option = e, this._status.fileName = `${this._status.option.uid}--${this._getTimeStamp()}--${this._status.option.type||"video"}`, this._status.startTime = this._getTimeStamp();
                let d = ["video/mp4;codecs=opus", "video/webm", "video/webm;codecs=h264", "video/x-matroska;codecs=opus", "video/invalid"];
                if ("audio" === e.type && (d = ["audio/wav", "audio/ogg", "audio/pcm", "audio/webm"]), !(this._status.mimeType = this._validation(d)[0])) return "RecordBrowserNotSupport";
                try {
                    await this._format(), await this._start(), this.adapterRef.instance.apiFrequencyControl({
                        name: "startMediaRecording",
                        code: 0,
                        param: JSON.stringify({
                            uid: r,
                            mediaType: i,
                            recordName: ""
                        }, null, " ")
                    })
                } catch (e) {
                    return this.adapterRef.logger.error("录制start error： ", e.name, e.message, e), this.adapterRef.instance.apiFrequencyControl({
                        name: "startMediaRecording",
                        code: -1,
                        param: JSON.stringify({
                            reason: "录制接口 error",
                            uid: r,
                            mediaType: i,
                            recordName: ""
                        }, null, " ")
                    }), Promise.reject(new o.default({
                        code: s.default.RECORD_API_ERROR,
                        message: "record api error"
                    }))
                }
            }
            stop(e) {
                let t = null;
                return this._status.isRecording && this._recorder || (this.adapterRef.logger.log("当前没有进行录制"), t = "RecordNotExist"), this._recorder && "started" !== this._status.state && (this.adapterRef.logger.warn("MediaRecordHelper: record stopping when " + this._recorder.state), t = "RecordStateError"), t ? (e && !1 === e.isUser || this.adapterRef.instance.apiFrequencyControl({
                    name: "stopMediaRecording",
                    code: -1,
                    param: ""
                }), Promise.resolve()) : (this._status.state = "stopped", this._status.recordStatus = "stopping", new Promise((t, r) => {
                    if (!this._recorder) return r(new o.default({
                        code: s.default.NO_RECORDER_FOUND,
                        message: "no record found"
                    }));
                    this._status.fileName = this._status.fileName, this._recorder.onstop = () => {
                        this._onStop(t)
                    }, this._recorder.stop(), e && e.isUser && this.adapterRef.instance.apiFrequencyControl({
                        name: "stopMediaRecording",
                        code: -1,
                        param: ""
                    })
                }))
            }
            play(e) {
                return "stopped" !== this._status.state ? (this.adapterRef.instance.apiFrequencyControl({
                    name: "playMediaRecording",
                    code: -1,
                    param: JSON.stringify({
                        reason: "RecordStateError"
                    }, null, " ")
                }), this.adapterRef.logger.warn("MediaRecordHelper: record stopping when " + (this._recorder && this._recorder.state)), Promise.resolve()) : (this.adapterRef.instance.apiFrequencyControl({
                    name: "playMediaRecording",
                    code: 0,
                    param: JSON.stringify({
                        recordId: ""
                    }, null, " ")
                }), this._play(e))
            }
            download(e = !0) {
                return Promise.resolve().then(() => this._status.isRecording ? (this.adapterRef.logger.log("MediaRecordHelper: download: 正在录制中，立即停止..."), this.stop({
                    isUser: !1
                })) : Promise.resolve()).then(() => {
                    if (this._status.recordUrl) {
                        const e = document.createElement("a");
                        document.body.appendChild(e), e.style.display = "none", e.href = this._status.recordUrl, e.download = (this._status.fileName || this._getTimeStamp()) + ".webm", e.click(), this._status.recordStatus = "downloaded"
                    } else this.adapterRef.logger.log("MediaRecordHelper: download: cannot download media without url ...");
                    return e && this.adapterRef.instance.apiFrequencyControl({
                        name: "downloadMediaRecording",
                        code: 0,
                        param: ""
                    }), Promise.resolve(this._status)
                })
            }
            async clean() {
                this.adapterRef.instance.apiFrequencyControl({
                    name: "cleanMediaRecording",
                    code: 0,
                    param: ""
                }), this._status.isRecording && this._recorder && await this.stop(), this._status.recordUrl && (window.URL.revokeObjectURL(this._status.recordUrl), this._status.recordUrl = null), this._destroy(), this._status.recordStatus = "init"
            }
            leave(e = {
                uid: 0
            }) {
                if (!this._status.isRecording || !this._recorder) return Promise.resolve();
                const {
                    uid: t
                } = e;
                return t && this._status.option ? t === +this._status.option.uid ? this.stop() : void 0 : Promise.resolve()
            }
            pause() {
                this._recorder && this._recorder.pause()
            }
            resume() {
                this._recorder && this._recorder.resume()
            }
            _reset() {
                this._recorder = null, Object.assign(this._status, {
                    recordedChunks: [],
                    isRecording: !1,
                    stream: null,
                    option: null,
                    contentTypes: [],
                    mimeType: "",
                    audioController: null,
                    opStream: null,
                    state: "init",
                    timer: null,
                    fileName: null,
                    recordId: 0,
                    recordStatus: "init",
                    recordUrl: null,
                    startTime: null,
                    endTime: null
                })
            }
            _getTimeStamp() {
                return Math.floor(Date.now() / 1e3)
            }
            _validation(e) {
                return e.filter(e => MediaRecorder.isTypeSupported(e))
            }
            _format() {
                let e = this._status.stream;
                this._status.option;
                return new Promise((t, r) => {
                    let i = new MediaStream;
                    if (!e) return r(new o.default({
                        code: s.default.NOT_DEFINED,
                        message: "stream not defined"
                    }));
                    if (this._matchLocalStreamConstructor(e.constructor.toString()) && (e = [e]), Array.isArray(e)) {
                        if (e.forEach(e => {
                                e && this._matchLocalStreamConstructor(e.constructor.toString()) && e.getTracks().forEach(e => {
                                    i.addTrack(e)
                                })
                            }), 0 === i.getTracks().length) return this.adapterRef.logger.error("_format: No tracks available"), t(i);
                        this._status.opStream = i, t(i)
                    }
                })
            }
            _matchLocalStreamConstructor(e) {
                return /(LocalMediaStream|MediaStream)/.test(e)
            }
            _start() {
                let e = {
                    audioBitsPerSecond: 128e3,
                    videoBitsPerSecond: 25e5,
                    mimeType: this._status.mimeType
                };
                if (!this._status.opStream) return Promise.reject(new o.default({
                    code: s.default.NOT_AVALIABLE,
                    message: "no stream avaliable"
                }));
                let t = this._recorder = new MediaRecorder(this._status.opStream, e);
                return t.ondataavailable = this._onDataAvailable.bind(this), t.onstop = () => {
                    this.adapterRef.logger.log("MediaRecordHelper: _start: record stop automatically ..."), this._onStop()
                }, this._status.recordUrl && (window.URL.revokeObjectURL(this._status.recordUrl), this._status.recordUrl = null), this._status.recordedChunks = [], this._status.isRecording = !0, this._status.state = "started", this._status.recordId += 1, this._status.recordStatus = "starting", this._recorder.start(), this._clearTimer(), this._startTimer(), Promise.resolve(this._status.option)
            }
            _startTimer() {
                this._status.timer || (this._status.timer = setInterval(() => {
                    this.adapterRef.logger.log(`MediaRecordHelper: startTimer: ${(new Date).toLocaleString()} --\x3e MediaRecorder status: ${this._recorder&&this._recorder.state}`)
                }, 5e3))
            }
            _onStop(e) {
                this.adapterRef.logger.log("MediaRecordHelper: _onStop: record stoped !!!"), this._clearTimer(), this._status.recordStatus = "stopped", this._status.isRecording = !1, this._status.endTime = this._getTimeStamp();
                let t = new Blob(this._status.recordedChunks, {
                    type: this._status.mimeType
                });
                this._status.recordUrl = URL.createObjectURL(t), this.emit("stop", this.getRecordStatus()), e && e(this._status.recordUrl)
            }
            _play(e) {
                let t = null;
                if (-1 != this._status.mimeType.indexOf("audio")) t = document.createElement("audio");
                else {
                    if (-1 == this._status.mimeType.indexOf("video")) return Promise.reject(new o.default({
                        code: s.default.NOT_SUPPORT,
                        message: "Unsupported MIME type " + this._status.mimeType
                    }));
                    t = document.createElement("video"), t.autoplay = !0
                }
                return this._status.recordUrl ? (e.appendChild(t), t.srcObject = null, t.src = this._status.recordUrl, t.controls = !1, t.play(), Promise.resolve(this._status.option)) : Promise.reject(new o.default({
                    code: s.default.NOT_DEFINED,
                    message: "record url is unfefined"
                }))
            }
            async _destroy() {
                this._status.audioController && this._status.audioController.destroy(), this._status.isRecording && await this.stop({
                    isUser: !1
                }), this._clearTimer(), this._recorder = null, Object.assign(this._status, {
                    stream: null,
                    recordedChunks: [],
                    isRecording: !1,
                    audioController: null,
                    status: "init"
                })
            }
            _clearTimer() {
                this._status.timer && (clearInterval(this._status.timer), this._status.timer = null)
            }
            _onDataAvailable(e) {
                if (this._status.recordStatus = "recording", this.adapterRef.logger.log("MediaRecordHelper: ondataavailable: data received"), !(e.data.size > 0)) return this.adapterRef.logger.warn("MediaRecordHelper: ondataavailable: no data"), void this.stop();
                this._status.recordedChunks.push(e.data)
            }
            checkIsRecording() {
                return this._status.isRecording
            }
            getRecordStatus() {
                const e = Object.assign({
                    id: this._status.recordId,
                    type: this._status.mimeType,
                    name: this._status.fileName,
                    status: this._status.recordStatus,
                    isRecording: this._status.isRecording,
                    startTime: this._status.startTime,
                    endTime: this._status.endTime
                }, this._status.option);
                return this.adapterRef.instance.apiFrequencyControl({
                    name: "listMediaRecording",
                    code: 0,
                    param: ""
                }), e
            }
            destroy() {
                this._destroy()
            }
        }
        t.Record = a
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            },
            s = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.MediaHelper = void 0;
        const a = r(3),
            d = o(r(49)),
            c = r(144),
            u = r(26),
            l = r(51),
            p = r(36),
            f = r(25),
            h = r(49),
            m = s(r(1)),
            g = s(r(0)),
            v = r(13);
        class y extends a.EventEmitter {
            constructor(e) {
                super(), this.listenToTrackEnded = e => {
                    e && e.addEventListener("ended", () => {
                        this.adapterRef.logger.log("Track ended", e.label, e.id), this.stream === this.adapterRef.localStream && (e !== this.micTrack && e !== this.audioSource || (this.adapterRef.logger.warn("音频轨道已停止"), this.adapterRef.instance.emit("audioTrackEnded")), e === this.cameraTrack && (this.adapterRef.logger.warn("视频轨道已停止"), this.adapterRef.instance.emit("videoTrackEnded")), e === this.screenTrack && (this.adapterRef.logger.warn("屏幕共享已停止"), this.adapterRef.instance.emit("stopScreenSharing")), e === this.screenAudioTrack && (this.adapterRef.logger.warn("屏幕共享音频已停止"), this.adapterRef.instance.emit("stopScreenAudio")))
                    })
                }, this.adapterRef = e.adapterRef, this.isLocal = e.isLocal, this.stream = e.stream, this.micStream = null, this.screenAudioStream = null, this.audioStream = new MediaStream, this.musicStream = new MediaStream, this.audioSource = null, this.webAudio = null, this.audioConstraint = null, this.cameraStream = null, this.videoStream = null, this.videoConstraint = null, this.screenStream = null, this.videoSource = null, this.screenTrack = null, this.micTrack = null, this.screenAudioTrack = null, this.screenTrack = null, this.cameraTrack = null, this.audioRoutingEnabled = !1, this.mixAudioConf = {
                    index: 0,
                    audioBuffer: {},
                    sounds: {}
                }
            }
            _reset() {
                this.stopAllEffects(), this.micStream && this._stopTrack(this.micStream), this.webAudio && (this.webAudio.off("audioFilePlaybackCompleted"), this.webAudio.destroy()), this.webAudio = null, this.micStream = null, this.audioConstraint = null, this.audioRoutingEnabled = !1, h.emptyStreamWith(this.audioStream, null), h.emptyStreamWith(this.musicStream, null), this.videoStream && this._stopTrack(this.videoStream), this.videoConstraint = {
                    video: {}
                }, this.videoStream = null, this.cameraStream = null, this.screenStream && this._stopTrack(this.screenStream), this.screenStream = null, this.screenAudioStream && this._stopTrack(this.screenAudioStream), this.screenAudioStream = null, this.mixAudioConf = {
                    index: 0,
                    audioBuffer: {},
                    sounds: {}
                }
            }
            async getStream(e) {
                let {
                    audio: t = !1,
                    audioDeviceId: r = "",
                    video: i = !1,
                    videoDeviceId: n = "",
                    screen: o = !1,
                    sourceId: s = "",
                    facingMode: a = "",
                    audioSource: l = null,
                    videoSource: p = null,
                    deviceId: f = ""
                } = e;
                if (t || i || o) {
                    if (l) {
                        if (this.webAudio) {
                            (new MediaStream).addTrack(l), this.webAudio.updateTracks([{
                                track: l,
                                type: "microphone"
                            }, {
                                track: this.screenAudioTrack,
                                type: "screenAudio"
                            }])
                        }
                        this.audioRoutingEnabled || (h.emptyStreamWith(this.audioStream, l), this.updateAudioSender(l)), this.audioSource = l, t = !1
                    }
                    p && (this.videoStream = new MediaStream, this.videoStream.addTrack(p), i = !1, this.videoSource = p);
                    try {
                        if (o) {
                            if (!this.isLocal) return void this.adapterRef.logger.error("getStream: 远端流不能够调用getStream");
                            const {
                                width: r,
                                height: i,
                                frameRate: n
                            } = this.convert(this.stream.screenProfile);
                            if (s) this.screenStream = await d.getStream({
                                video: {
                                    mandatory: {
                                        maxWidth: r,
                                        maxHeight: i,
                                        maxFrameRate: n,
                                        minFrameRate: 5,
                                        chromeMediaSource: "desktop",
                                        chromeMediaSourceId: s
                                    }
                                }
                            }, this.adapterRef.logger);
                            else {
                                let t = await d.getScreenStream({
                                    video: {
                                        width: {
                                            ideal: r
                                        },
                                        height: {
                                            ideal: i
                                        },
                                        frameRate: {
                                            ideal: n,
                                            max: n
                                        }
                                    },
                                    audio: e.screenAudio && this.getAudioConstraints() ? this.getAudioConstraints() : e.screenAudio
                                }, this.adapterRef.logger);
                                if (this.screenStream = t, e.screenAudio) {
                                    const e = t.getAudioTracks()[0];
                                    if (e) {
                                        const r = new MediaStream;
                                        t.removeTrack(e), r.addTrack(e), this.screenAudioTrack = e, this.listenToTrackEnded(this.screenAudioTrack), this.screenAudioStream = r, this.webAudio || (this.webAudio = new c.WebAudio({
                                            adapterRef: this.adapterRef
                                        }), this.webAudio.on("audioFilePlaybackCompleted", this._audioFilePlaybackCompletedEvent.bind(this))), this.webAudio.updateTracks([{
                                            track: this.micTrack || this.audioSource,
                                            type: "microphone"
                                        }, {
                                            track: this.screenAudioTrack,
                                            type: "screenAudio"
                                        }]), this.audioRoutingEnabled || (this.micTrack && this.screenAudioTrack ? this.enableAudioRouting() : (h.emptyStreamWith(this.audioStream, e), this.updateAudioSender(e)))
                                    } else this.adapterRef.logger.warn("getStream screenAudio: 未获取到屏幕共享音频"), this.stream.screenAudio = !1, this.adapterRef.instance && this.adapterRef.instance.emit("error", "screenAudioNotAllowed")
                                }
                            }
                            if (this.adapterRef.instance.apiEventReport("setFunction", {
                                    name: "set_screen",
                                    oper: "1",
                                    value: "success"
                                }), !this.screenStream) return void this.adapterRef.logger.error("getStream: 未获取到screenStream");
                            this.screenTrack = this.screenStream.getVideoTracks()[0], this.listenToTrackEnded(this.screenTrack), t && (this.micStream = await d.getStream({
                                audio: !this.getAudioConstraints() || this.getAudioConstraints()
                            }, this.adapterRef.logger), this.micTrack = this.micStream.getAudioTracks()[0], this.listenToTrackEnded(this.micTrack), this.adapterRef.instance.apiEventReport("setFunction", {
                                name: "set_mic",
                                oper: "1",
                                value: "success"
                            }), h.emptyStreamWith(this.audioStream, this.micTrack), navigator.userAgent.indexOf("Chrome") > -1 && !u.RtcSystem.h5() && (this.webAudio || (this.webAudio = new c.WebAudio({
                                adapterRef: this.adapterRef
                            }), this.webAudio.on("audioFilePlaybackCompleted", this._audioFilePlaybackCompletedEvent.bind(this))), this.webAudio.updateTracks([{
                                track: this.micTrack,
                                type: "microphone"
                            }, {
                                track: this.screenAudioTrack,
                                type: "screenAudio"
                            }]), this.audioRoutingEnabled || (this.micTrack && this.screenAudioTrack ? this.enableAudioRouting() : (h.emptyStreamWith(this.audioStream, this.micTrack), this.updateAudioSender(this.micTrack)))))
                        } else if (t || i) {
                            this.isLocal || this.adapterRef.logger.error("MediaHelper.getStream:远端流不能调用getStream");
                            const {
                                height: o,
                                width: s,
                                frameRate: u
                            } = this.convert(this.stream.videoProfile);
                            let l = {
                                audio: t && this.getAudioConstraints() ? this.getAudioConstraints() : t,
                                video: !!i && {
                                    width: {
                                        ideal: s
                                    },
                                    height: {
                                        ideal: o
                                    },
                                    frameRate: {
                                        ideal: u || 15
                                    }
                                }
                            };
                            r && t && (!0 === l.audio && (l.audio = {}), l.audio.deviceId = {
                                exact: r
                            }), i && (a ? l.video.facingMode = {
                                exact: a
                            } : n && (l.video.deviceId = {
                                exact: n
                            }));
                            const p = await d.getStream(l, this.adapterRef.logger);
                            if (e.screen) this.screenStream = p;
                            else {
                                const e = p.getVideoTracks()[0],
                                    t = p.getAudioTracks()[0];
                                if (t && (this.micTrack = t, this.listenToTrackEnded(this.micTrack), this.adapterRef.instance.apiEventReport("setFunction", {
                                        name: "set_mic",
                                        oper: "1",
                                        value: "success"
                                    }), "object" == typeof l.audio && (this.audioConstraint = {
                                        audio: l.audio
                                    }), this.micStream = new MediaStream, this.micStream.addTrack(this.micTrack), this.webAudio || (this.webAudio = new c.WebAudio({
                                        adapterRef: this.adapterRef
                                    }), this.webAudio.on("audioFilePlaybackCompleted", this._audioFilePlaybackCompletedEvent.bind(this))), this.webAudio.updateTracks([{
                                        track: this.micTrack || this.audioSource,
                                        type: "microphone"
                                    }, {
                                        track: this.screenAudioTrack,
                                        type: "screenAudio"
                                    }]), this.audioRoutingEnabled || (this.screenAudioTrack && this.micTrack ? this.enableAudioRouting() : (h.emptyStreamWith(this.audioStream, this.micTrack), this.updateAudioSender(this.micTrack))), this.webAudio.musicDestination)) {
                                    const e = this.webAudio.musicDestination.stream;
                                    h.emptyStreamWith(this.musicStream, e.getAudioTracks()[0])
                                }
                                e && (this.cameraTrack = e, this.listenToTrackEnded(this.cameraTrack), this.adapterRef.instance.apiEventReport("setFunction", {
                                    name: "set_camera",
                                    oper: "1",
                                    value: "success"
                                }), "object" == typeof l.video && (this.videoConstraint = {
                                    video: l.video
                                }), this.cameraStream = new MediaStream, this.cameraStream.addTrack(this.cameraTrack), this.videoStream = this.cameraStream)
                            }
                        }
                        return
                    } catch (e) {
                        return (this.adapterRef.logger || console).error("getStream error: %o", e.message), t && this.adapterRef.instance.apiEventReport("setFunction", {
                            name: "set_mic",
                            oper: "1",
                            value: e.message
                        }), i && this.adapterRef.instance.apiEventReport("setFunction", {
                            name: "set_camera",
                            oper: "1",
                            value: e.message
                        }), o && this.adapterRef.instance.apiEventReport("setFunction", {
                            name: "set_screen",
                            oper: "1",
                            value: e.message
                        }), Promise.reject(e)
                    }
                } else this.adapterRef.logger.error("getStream: 必须指定媒体类型")
            }
            async getSecondStream(e) {
                let {
                    audio: t = !1,
                    video: r = !1
                } = e;
                if (!t && !r) return this.adapterRef.logger.error("getSecondStream:必须指定一个参数"), Promise.reject(new m.default({
                    code: g.default.INVALID_OPERATION,
                    message: "audio/video is invalid"
                }));
                try {
                    const t = await d.getStream(e, this.adapterRef.logger);
                    this.adapterRef.logger.log("获取到stream: ", t.id);
                    const r = t.getAudioTracks().length && t.getAudioTracks()[0],
                        i = t.getVideoTracks().length && t.getVideoTracks()[0];
                    if (r && (this.adapterRef.instance.apiEventReport("setFunction", {
                            name: "set_mic",
                            oper: "1",
                            value: "success"
                        }), "object" == typeof e.audio && (this.audioConstraint = {
                            audio: e.audio
                        }), this.micStream && this._stopTrack(this.micStream), this.micStream = new MediaStream, this.micStream.addTrack(r), this.micTrack = r, this.listenToTrackEnded(this.micTrack), this.webAudio && this.webAudio.updateTracks([{
                            track: this.micTrack || this.audioSource,
                            type: "microphone"
                        }, {
                            track: this.screenAudioTrack,
                            type: "screenAudio"
                        }]), this.audioRoutingEnabled || (this.micTrack && this.screenAudioTrack ? this.enableAudioRouting() : (h.emptyStreamWith(this.audioStream, r), this.updateAudioSender(r)))), i) {
                        this.adapterRef.instance.apiEventReport("setFunction", {
                            name: "set_camera",
                            oper: "1",
                            value: "success"
                        }), "object" == typeof e.video && (this.videoConstraint = {
                            video: e.video
                        }), this.cameraStream && (this.stream.stop("video"), this._stopTrack(this.cameraStream)), this.cameraStream = new MediaStream, this.cameraStream.addTrack(i), this.videoStream = this.cameraStream;
                        const t = this.stream.videoView || this.stream.Play && this.stream.Play.videoView;
                        t && (await this.stream.play(t), "width" in this.stream.renderMode.local.video && this.stream.setLocalRenderMode(this.stream.renderMode.local.video, "video"));
                        const r = this.adapterRef.instance.getPeer("send");
                        r && r.videoSender ? r.videoSender.replaceTrack(i) : this.adapterRef.logger.warn("getSecondStream video: 此时未发布流")
                    }
                } catch (e) {
                    (this.adapterRef.logger || console).error("getStream error: %o", e.message);
                    const r = t ? "set_mic" : "set_camera";
                    return this.adapterRef.instance.apiEventReport("setFunction", {
                        name: r,
                        oper: "1",
                        value: e.message
                    }), Promise.reject(e)
                }
            }
            convert({
                resolution: e = 4,
                frameRate: t = 0
            }) {
                let r = {
                    width: 640,
                    height: 480,
                    frameRate: 15
                };
                return 2 === e ? (r.width = 320, r.height = 180) : 4 === e ? (r.width = 640, r.height = 480) : 8 === e || u.RtcSystem.ios() ? (r.width = 1280, r.height = 720) : 16 === e && (r.width = 1920, r.height = 1080), 0 === t ? r.frameRate = 15 : 1 === t ? r.frameRate = 5 : 2 === t ? r.frameRate = 10 : 3 === t ? r.frameRate = 15 : 4 === t ? r.frameRate = 20 : 5 === t && (r.frameRate = 25), r
            }
            getAudioConstraints() {
                if (!this.isLocal) return void this.adapterRef.instance.logger.error("Remote Stream dont have audio constraints");
                const e = this.stream.audioProcessing;
                let t = {};
                switch (e && (void 0 !== e.AEC && (t.echoCancellation = e.AEC, t.googEchoCancellation = e.AEC, t.googEchoCancellation2 = e.AEC), void 0 !== e.ANS && (t.noiseSuppression = e.ANS, t.googNoiseSuppression = e.ANS, t.googNoiseSuppression2 = e.ANS), void 0 !== e.AGC && (t.autoGainControl = e.AGC, t.googAutoGainControl = e.AGC, t.googAutoGainControl2 = e.AGC)), this.stream.audioProfile) {
                    case "standard_stereo":
                    case "high_quality_stereo":
                        t.channelCount = 2
                }
                return "{}" === JSON.stringify(t) ? null : t
            }
            updateStream(e, t) {
                "audio" === e ? (this.micTrack = t, this.listenToTrackEnded(this.micTrack), h.emptyStreamWith(this.audioStream, t), this.audioStream.addTrack(t)) : "video" === e ? (this.videoStream = new MediaStream, this.cameraTrack = t, this.listenToTrackEnded(this.cameraTrack), this.videoStream.addTrack(t)) : "screen" === e && (this.screenStream = new MediaStream, this.screenStream.addTrack(t), this.screenTrack = t, this.listenToTrackEnded(this.screenTrack))
            }
            stopStream(e) {
                let t = "set_mic";
                "audio" === e && this.micStream ? (this._stopTrack(this.micStream), this.micStream = null, this.canDisableAudioRouting() && this.disableAudioRouting(), this.micTrack || this.screenAudioTrack || h.emptyStreamWith(this.audioStream, null)) : "screenAudio" === e && this.screenAudioStream ? (this._stopTrack(this.screenAudioStream), this.screenAudioStream = null, this.canDisableAudioRouting() && this.disableAudioRouting(), this.micTrack || this.screenAudioTrack || h.emptyStreamWith(this.audioStream, null)) : "video" === e && this.videoStream ? (t = "set_camera", this._stopTrack(this.videoStream), this.videoStream = this.cameraStream = null) : "screen" === e && this.screenStream && (t = "set_screen", this._stopTrack(this.screenStream), this.screenStream = null), this.adapterRef.instance.apiEventReport("setFunction", {
                    name: t,
                    oper: "0",
                    value: "success"
                })
            }
            _stopTrack(e) {
                if (!e) return;
                if (!this.isLocal) return;
                this.adapterRef.logger.log("清除stream: ", e.id);
                const t = e.getTracks();
                t && 0 !== t.length && t.forEach(t => {
                    var r, i;
                    const n = v.getParameters().mediaTracks.findIndex(e => t === e);
                    this.adapterRef.logger.log(`Stopping track TRACK#${n} ${t.id}, ${t.label}, ${t.readyState}`), t.stop(), e.removeTrack(t), this.micTrack === t && (this.micTrack = null, null === (r = this.webAudio) || void 0 === r || r.removeTrack(t)), this.screenAudioTrack === t && (this.screenAudioTrack = null, null === (i = this.webAudio) || void 0 === i || i.removeTrack(t)), this.cameraTrack === t && (this.cameraTrack = null), this.screenTrack === t && (this.screenTrack = null), this.screenAudioTrack === t && (this.screenAudioTrack = null)
                })
            }
            getAudioTrack() {
                return this.audioStream && this.audioStream.getAudioTracks()[0]
            }
            getVideoTrack() {
                return this.videoStream && this.videoStream.getVideoTracks()[0]
            }
            setGain(e, t) {
                this.webAudio ? (this.adapterRef.logger.log("setGain", e), this.webAudio.setGain(e, t), this.canDisableAudioRouting() && this.disableAudioRouting()) : this.adapterRef.logger.log("setGain: 缺失本地音频")
            }
            getGain() {
                return this.webAudio && this.webAudio.getVolumeData() || "0.0"
            }
            canDisableAudioRouting() {
                let e = !0;
                if (!this.webAudio) return !1;
                this.webAudio.mixAudioConf.state !== l.AuidoMixingState.PLAYED && this.webAudio.mixAudioConf.state !== l.AuidoMixingState.PAUSED || (e = !1), Object.values(this.mixAudioConf.sounds).forEach(t => {
                    "STARTING" !== t.state && "PLAYED" !== t.state && "PAUSED" !== t.state || (e = !1)
                });
                const t = this.webAudio.getGainMin();
                return e && 1 === t && this.webAudio.audioInArr.length <= 1
            }
            _audioFilePlaybackCompletedEvent() {
                this.canDisableAudioRouting() && this.disableAudioRouting()
            }
            startAudioMixing(e) {
                this.adapterRef.logger.log("开始伴音: %s", JSON.stringify(e, null, " ")), Object.assign(this.mixAudioConf, e);
                let t = null;
                if (this.mixAudioConf.audioFilePath ? (this.micStream || this.screenAudioTrack) && this.stream.pubStatus.audio.audio ? this.webAudio && this.webAudio.context || (this.adapterRef.logger.log("开始伴音: 不支持伴音功能"), t = "BROWSER_NOT_SUPPORT") : (this.adapterRef.logger.log("开始伴音: 当前没有publish音频"), t = "NOT_PUBLIST_AUDIO_YET") : (this.adapterRef.logger.log("开始伴音: 没有找到云端文件路径"), t = "INVALID_ARGUMENTS"), t) {
                    if (this.adapterRef.instance.apiFrequencyControl({
                            name: "startAudioMixing",
                            code: -1,
                            param: JSON.stringify(Object.assign(this.mixAudioConf, {
                                reason: t
                            }), null, " ")
                        }), "INVALID_ARGUMENTS" === t) return Promise.reject(new m.default({
                        code: g.default.INVALID_OPERATION,
                        message: "file path not found"
                    }));
                    if ("NOT_PUBLIST_AUDIO_YET" === t) return Promise.reject(new m.default({
                        code: g.default.INVALID_OPERATION,
                        message: "audio source is not published"
                    }));
                    if ("BROWSER_NOT_SUPPORT" === t) return Promise.reject(new m.default({
                        code: g.default.NOT_SUPPORT,
                        message: "audio mixing is not supported in this browser"
                    }))
                }
                return this.webAudio && (this.webAudio.mixAudioConf && this.webAudio.mixAudioConf.audioSource && this.webAudio.mixAudioConf.state === l.AuidoMixingState.PLAYED && (this.adapterRef.logger.log("startAudioMixing: 当前已经开启伴音，先关闭之前的伴音"), this.stopAudioMixing()), this.webAudio.mixAudioConf.state, l.AuidoMixingState.STARTING), this.mixAudioConf.audioFilePath && this.mixAudioConf.audioBuffer[this.mixAudioConf.audioFilePath] ? (this.adapterRef.logger.log("开始伴音, 已经加载过云端音乐"), this.startMix(this.mixAudioConf.index)) : (this.adapterRef.logger.log("开始伴音, 先加载云端音乐"), this.loadRemoteAudioFile(this.mixAudioConf.index))
            }
            loadRemoteAudioFile(e) {
                if (this.mixAudioConf.audioFilePath) return p.ajax({
                    url: this.mixAudioConf.audioFilePath,
                    type: "GET",
                    dataType: "arraybuffer"
                }).then(t => (this.adapterRef.logger.log("loadRemoteAudioFile 加载云端音乐成功"), new Promise((r, i) => {
                    this.webAudio && this.webAudio.context ? this.webAudio.context.decodeAudioData(t, t => {
                        this.adapterRef.logger.log("loadRemoteAudioFile 云端音乐解码成功"), this.mixAudioConf.audioFilePath ? (this.mixAudioConf.audioBuffer[this.mixAudioConf.audioFilePath] = t, this.startMix(e).then(e => {
                            r(e)
                        })) : i(new m.default({
                            code: g.default.STATE_ERROR,
                            message: "state error"
                        }))
                    }, e => {
                        this.adapterRef.logger.log("loadRemoteAudioFile 云端音乐解码失败：", e), i(new m.default({
                            code: g.default.STATE_ERROR,
                            message: "create buffersource failed"
                        }))
                    }) : i(new m.default({
                        code: g.default.NOT_SUPPORT,
                        message: "webAudio lost"
                    }))
                }))).catch(e => (this.adapterRef.logger.log("loadRemoteAudioFile 加载云端音乐失败: ", e.name, e.message, e), Promise.reject(new m.default({
                    code: g.default.STATE_ERROR,
                    message: "load audio failed"
                }))));
                this.adapterRef.logger.error("audioFilePath未设置")
            }
            startMix(e) {
                if (!this.webAudio) return this.adapterRef.logger.error("startMix:参数错误"), Promise.reject(new m.default({
                    code: g.default.INVALID_PARAMETER,
                    message: "startMix parameter error"
                }));
                if (this.adapterRef.logger.log("startMix 开始混音:", JSON.stringify(this.mixAudioConf)), e !== this.mixAudioConf.index) return this.adapterRef.logger.log("startMix: 该次伴音已经取消"), Promise.resolve();
                this.audioRoutingEnabled || this.enableAudioRouting();
                const {
                    audioFilePath: t = "",
                    loopback: r = !1,
                    replace: i = !1,
                    cycle: n = 0,
                    playStartTime: o = 0,
                    volume: s = 255,
                    auidoMixingEnd: a = null
                } = this.mixAudioConf;
                return this.webAudio.startMix({
                    buffer: this.mixAudioConf.audioBuffer[t],
                    loopback: r,
                    replace: i,
                    cycle: n,
                    playStartTime: o,
                    volume: s,
                    auidoMixingEnd: a
                })
            }
            pauseAudioMixing() {
                let e = null;
                if (this.webAudio && this.webAudio.context ? this.webAudio.mixAudioConf && this.webAudio.mixAudioConf.audioSource && this.webAudio.mixAudioConf.state !== l.AuidoMixingState.PAUSED ? this.webAudio.mixAudioConf && this.webAudio.mixAudioConf.audioSource && this.webAudio.mixAudioConf.state === l.AuidoMixingState.PLAYED || (this.adapterRef.logger.log("pauseAudioMixing: 当前没有开启伴音"), e = "NOT_PLAY") : (this.adapterRef.logger.log("pauseAudioMixing: 已经暂停"), e = "PAUSED") : (this.adapterRef.logger.log("pauseAudioMixing: 不支持伴音功能"), e = "BROWSER_NOT_SUPPORT"), e) {
                    if (this.adapterRef.instance.apiFrequencyControl({
                            name: "pauseAudioMixing",
                            code: -1,
                            param: JSON.stringify(Object.assign(this.mixAudioConf, {
                                reason: e
                            }), null, " ")
                        }), "BROWSER_NOT_SUPPORT" === e) return Promise.reject(new m.default({
                        code: g.default.NOT_SUPPORT,
                        message: "pauseAudioMixing: audio mixing is not supported in this browser"
                    }));
                    if ("PAUSED" === e) return Promise.reject(new m.default({
                        code: g.default.INVALID_OPERATION,
                        message: "pauseAudioMixing: has already been paused"
                    }));
                    if ("NOT_PLAY" === e) return Promise.reject(new m.default({
                        code: g.default.INVALID_OPERATION,
                        message: "pauseAudioMixing: audio mixing is not open"
                    }))
                }
                return this.adapterRef.instance.apiFrequencyControl({
                    name: "pauseAudioMixing",
                    code: 0,
                    param: JSON.stringify(this.mixAudioConf, null, " ")
                }), this.webAudio && this.webAudio.pauseAudioMixing()
            }
            resumeAudioMixing() {
                let e = null;
                if (this.webAudio && this.webAudio.context ? this.webAudio.mixAudioConf && this.webAudio.mixAudioConf.audioSource ? this.webAudio.mixAudioConf.state !== l.AuidoMixingState.PAUSED && (this.adapterRef.logger.log("resumeAudioMixing: 当前没有暂停伴音"), e = "NOT_PAUSED") : (this.adapterRef.logger.log("resumeAudioMixing: 当前没有开启伴音"), e = "NOT_OPEN") : (this.adapterRef.logger.log("resumeAudioMixing: 不支持伴音功能"), e = "BROWSER_NOT_SUPPORT"), e) {
                    if (this.adapterRef.instance.apiFrequencyControl({
                            name: "resumeAudioMixing",
                            code: -1,
                            param: JSON.stringify(Object.assign(this.mixAudioConf, {
                                reason: e
                            }), null, " ")
                        }), "BROWSER_NOT_SUPPORT" === e) return Promise.reject(new m.default({
                        code: g.default.NOT_SUPPORT,
                        message: "resumeAudioMixing: audio mixing is not supported in this browser"
                    }));
                    if ("NOT_OPEN" === e) return Promise.reject(new m.default({
                        code: g.default.INVALID_OPERATION,
                        message: "resumeAudioMixing: audio mixing is not open"
                    }));
                    if ("NOT_PAUSED" === e) return Promise.reject(new m.default({
                        code: g.default.INVALID_OPERATION,
                        message: "resumeAudioMixing: audio mixing is not paused"
                    }))
                }
                if (this.adapterRef.instance.apiFrequencyControl({
                        name: "resumeAudioMixing",
                        code: 0,
                        param: JSON.stringify(this.mixAudioConf, null, " ")
                    }), !this.webAudio) return;
                let {
                    audioFilePath: t = "",
                    loopback: r = !1,
                    replace: i = !1,
                    cycle: n = 0,
                    playStartTime: o = 0,
                    auidoMixingEnd: s = null
                } = this.mixAudioConf, a = (this.webAudio.mixAudioConf.pauseTime - this.webAudio.mixAudioConf.startTime) / 1e3 + this.webAudio.mixAudioConf.playStartTime;
                return a > this.webAudio.mixAudioConf.totalTime && (this.adapterRef.logger.log("播发过的圈数 playedCycle: ", Math.floor(a / this.webAudio.mixAudioConf.totalTime)), n -= Math.floor(a / this.webAudio.mixAudioConf.totalTime), this.mixAudioConf.cycle = n), this.webAudio.mixAudioConf.setPlayStartTime ? (this.adapterRef.logger.log("暂停期间，用户设置混音播发时间: ", this.webAudio.mixAudioConf.setPlayStartTime), o = this.webAudio.mixAudioConf.setPlayStartTime, this.webAudio.mixAudioConf.setPlayStartTime = 0) : (this.adapterRef.logger.log("恢复混音:", JSON.stringify(this.webAudio.mixAudioConf)), this.adapterRef.logger.log("已经播放的时间: ", a), a > this.webAudio.mixAudioConf.totalTime && (a %= this.webAudio.mixAudioConf.totalTime), o = a), this.adapterRef.logger.log("回复重置的时间点：", o), this.webAudio.resumeAudioMixing({
                    buffer: this.mixAudioConf.audioBuffer[t],
                    loopback: r,
                    replace: i,
                    cycle: n,
                    playStartTime: o,
                    auidoMixingEnd: s
                })
            }
            stopAudioMixing(e = !0) {
                let t = null;
                if (this.webAudio && this.webAudio.context ? this.webAudio.mixAudioConf && this.webAudio.mixAudioConf.audioSource || (this.adapterRef.logger.log("stopAudioMixing: 当前没有开启伴音"), t = "NOT_OPEN") : (this.adapterRef.logger.log("stopAudioMixing: 不支持伴音功能"), t = "BROWSER_NOT_SUPPORT"), t) {
                    if (this.adapterRef.instance.apiFrequencyControl({
                            name: "stopAudioMixing",
                            code: -1,
                            param: JSON.stringify(Object.assign(this.mixAudioConf, {
                                reason: t
                            }), null, " ")
                        }), "BROWSER_NOT_SUPPORT" === t) return Promise.reject(new m.default({
                        code: g.default.NOT_SUPPORT,
                        message: "stopAudioMixing: audio mixing is not supported in this browser"
                    }));
                    if ("NOT_OPEN" === t) return Promise.reject(new m.default({
                        code: g.default.INVALID_OPERATION,
                        message: "stopAudioMixing: audio mixing is not open"
                    }))
                }
                return this.adapterRef.instance.apiFrequencyControl({
                    name: "stopAudioMixing",
                    code: 0,
                    param: JSON.stringify(this.mixAudioConf, null, " ")
                }), this.webAudio ? this.webAudio.stopAudioMixing(e) : Promise.reject(new m.default({
                    code: g.default.NOT_SUPPORT,
                    message: "webAudio is not supported in this browser"
                }))
            }
            setAudioMixingVolume(e) {
                let t = null;
                if (this.webAudio && this.webAudio.context ? this.webAudio.mixAudioConf && this.webAudio.mixAudioConf.audioSource ? Number.isInteger(e) ? (e < 0 || e > 255) && (this.adapterRef.logger.log("setAudioMixingVolume: volume范围（0 - 255）"), t = "INVALID_ARGUMENTS") : (this.adapterRef.logger.log("setAudioMixingVolume: volume不是整数"), t = "INVALID_ARGUMENTS") : (this.adapterRef.logger.log("setAudioMixingVolume: 当前没有开启伴音"), t = "NOT_OPEN") : (this.adapterRef.logger.log("setAudioMixingVolume: 不支持伴音功能"), t = "BROWSER_NOT_SUPPORT"), t) {
                    if (this.adapterRef.instance.apiFrequencyControl({
                            name: "adjustAudioMixingVolume",
                            code: -1,
                            param: JSON.stringify(Object.assign(this.mixAudioConf, {
                                reason: t,
                                volume: e
                            }), null, " ")
                        }), "BROWSER_NOT_SUPPORT" === t) return Promise.reject(new m.default({
                        code: g.default.NOT_SUPPORT,
                        message: "setAudioMixingVolume: audio mixing is not supported in this browser"
                    }));
                    if ("NOT_OPEN" === t) return Promise.reject(new m.default({
                        code: g.default.INVALID_OPERATION,
                        message: "setAudioMixingVolume: audio mixing is not open"
                    }));
                    if ("INVALID_ARGUMENTS" === t) return Promise.reject(new m.default({
                        code: g.default.INVALID_PARAMETER,
                        message: "setAudioMixingVolume: volume must be an integer with scope (0 - 255)"
                    }))
                }
                return this.adapterRef.instance.apiFrequencyControl({
                    name: "adjustAudioMixingVolume",
                    code: 0,
                    param: JSON.stringify({
                        volume: e
                    }, null, " ")
                }), this.webAudio && this.webAudio.setAudioMixingVolume(e)
            }
            setAudioMixingPlayTime(e) {
                let t = null;
                if (this.webAudio && this.webAudio.context)
                    if (this.webAudio.mixAudioConf && this.webAudio.mixAudioConf.audioSource) {
                        if (e < 0) this.adapterRef.logger.log("setAudioMixingPlayTime: playStartTime小于0"), t = "INVALID_ARGUMENTS";
                        else if (e >= this.webAudio.mixAudioConf.totalTime) this.adapterRef.logger.log("setAudioMixingPlayTime: playStartTime大于音频文件总时长了"), t = "INVALID_ARGUMENTS";
                        else if (this.webAudio.mixAudioConf.state === l.AuidoMixingState.PAUSED) return this.webAudio.mixAudioConf.setPlayStartTime = e, this.adapterRef.logger.log("setAudioMixingPlayTime: 当前正在暂停，记录设置的播发位置，在恢复伴音时，跳转到此次设置的播放位置"), Promise.resolve()
                    } else this.adapterRef.logger.log("setAudioMixingPlayTime: 当前没有开启伴音"), t = "INVALID_ARGUMENTS";
                else this.adapterRef.logger.log("setAudioMixingPlayTime: 不支持伴音功能"), t = "BROWSER_NOT_SUPPORT";
                if (t) {
                    if (this.adapterRef.instance.apiFrequencyControl({
                            name: "setAudioMixingPosition",
                            code: -1,
                            param: JSON.stringify({
                                playTime: e,
                                reason: t
                            }, null, " ")
                        }), "BROWSER_NOT_SUPPORT" === t) return Promise.reject(new m.default({
                        code: g.default.NOT_SUPPORT,
                        message: "setAudioMixingPlayTime: audio mixing is not supported in this browser"
                    }));
                    if ("NOT_OPEN" === t) return Promise.reject(new m.default({
                        code: g.default.INVALID_OPERATION,
                        message: "setAudioMixingPlayTime: audio mixing is not open"
                    }));
                    if ("INVALID_ARGUMENTS" === t) return Promise.reject(new m.default({
                        code: g.default.INVALID_PARAMETER,
                        message: "setAudioMixingPlayTime: playStartTime is invalid"
                    }))
                }
                return new Promise((t, r) => {
                    this.stopAudioMixing(!1).then(i => {
                        if (!this.webAudio) {
                            return r("webAudio not supported"), Promise.reject(new m.default({
                                code: g.default.NOT_SUPPORT,
                                message: "webAudio is not supported in this browser"
                            }))
                        }
                        this.mixAudioConf.playStartTime = e;
                        let {
                            audioFilePath: n = "",
                            loopback: o = !1,
                            replace: s = !1,
                            cycle: a = 0,
                            playStartTime: d = 0,
                            auidoMixingEnd: c = null
                        } = this.mixAudioConf;
                        this.adapterRef.logger.log("设置混音的播放位置:", this.webAudio.mixAudioConf);
                        let u = (Date.now() - this.webAudio.mixAudioConf.startTime) / 1e3 + this.webAudio.mixAudioConf.playStartTime;
                        this.adapterRef.logger.log("已经播放的时间: ", u), u > this.webAudio.mixAudioConf.totalTime && (this.adapterRef.logger.log("播发过的圈数 playedCycle: ", Math.floor(u / this.webAudio.mixAudioConf.totalTime)), a -= Math.floor(u / this.webAudio.mixAudioConf.totalTime), this.mixAudioConf.cycle = a), this.adapterRef.logger.log("setAudioMixingPlayTime, playTime: %s, cycle: %s", e, a), this.webAudio.setAudioMixingPlayTime({
                            buffer: this.mixAudioConf.audioBuffer[n],
                            loopback: o,
                            replace: s,
                            cycle: a,
                            playStartTime: d,
                            auidoMixingEnd: c
                        }).then(r => {
                            this.adapterRef.instance.apiFrequencyControl({
                                name: "setAudioMixingPosition",
                                code: 0,
                                param: JSON.stringify({
                                    playTime: e
                                }, null, " ")
                            }), t(r)
                        }).catch(t => {
                            this.adapterRef.instance.apiFrequencyControl({
                                name: "setAudioMixingPosition",
                                code: -1,
                                param: JSON.stringify({
                                    playTime: e,
                                    reason: "重新播放伴音失败"
                                }, null, " ")
                            }), r(t)
                        })
                    }).catch(t => (this.adapterRef.instance.apiFrequencyControl({
                        name: "setAudioMixingPosition",
                        code: -1,
                        param: JSON.stringify({
                            playTime: e,
                            reason: "暂停当前播放失败"
                        }, null, " ")
                    }), Promise.reject(t)))
                })
            }
            getAudioMixingPlayedTime() {
                return this.webAudio && this.webAudio.context ? this.webAudio.mixAudioConf && this.webAudio.mixAudioConf.audioSource ? this.webAudio.getAudioMixingPlayedTime() : (this.adapterRef.logger.log("getAudioMixingPlayedTime: 当前没有开启伴音"), Promise.resolve()) : (this.adapterRef.logger.log("getAudioMixingPlayedTime: 不支持伴音功能"), Promise.resolve())
            }
            getAudioMixingTotalTime() {
                return this.webAudio && this.webAudio.context ? this.webAudio.mixAudioConf && this.webAudio.mixAudioConf.audioSource ? this.webAudio.getAudioMixingTotalTime() : (this.adapterRef.logger.log("getAudioMixingTotalTime: 当前没有开启伴音"), Promise.resolve()) : (this.adapterRef.logger.log("startAudioMixing: 不支持伴音功能"), Promise.resolve())
            }
            isMixAuido() {
                return !!(this.webAudio && this.webAudio.mixAudioConf && this.webAudio.mixAudioConf.audioSource)
            }
            _initSoundIfNotExists(e, t) {
                this.mixAudioConf.sounds[e] || (this.mixAudioConf.sounds[e] = {
                    soundId: e,
                    state: "UNSTART",
                    filePath: t || "",
                    volume: 100,
                    sourceNode: null,
                    gainNode: null,
                    cycle: 1,
                    playStartTime: 0,
                    playOverTime: 0,
                    pauseTime: 0,
                    startTime: 0,
                    totalTime: 0,
                    options: {}
                }), t && (this.mixAudioConf.sounds[e].filePath = t)
            }
            async playEffect(e, t) {
                const {
                    soundId: r,
                    filePath: i,
                    cycle: n = 1
                } = e, o = {
                    tag: "Stream.playEffect:filePath",
                    value: i
                };
                f.checkExists(o);
                const s = {
                    tag: "Stream.playEffect:soundId",
                    value: r,
                    min: 1,
                    max: 1e4
                };
                f.isExistOptions(s).result && f.checkValidInteger(s);
                const a = {
                    tag: "Stream.playEffect:cycle",
                    value: n,
                    min: 1,
                    max: 1e4
                };
                if (f.isExistOptions(a).result && f.checkValidInteger(a), this._initSoundIfNotExists(r, i), this.audioRoutingEnabled || this.enableAudioRouting(), !this.webAudio || !this.webAudio.context) return this.adapterRef.logger.log("playEffect: 浏览器不支持"), Promise.reject(new m.default({
                    code: g.default.NOT_SUPPORT,
                    message: "playEffect: not supported in this browser"
                }));
                if (this.mixAudioConf.sounds[r] && ("STARTING" === this.mixAudioConf.sounds[r].state || "PLAYED" === this.mixAudioConf.sounds[r].state || "PAUSED" === this.mixAudioConf.sounds[r].state) && (this.adapterRef.logger.log(`pauseEffect: 该音效文件正处于: ${this.mixAudioConf.sounds[r].state} 状态`), void 0 === t)) return Promise.reject(new m.default({
                    code: g.default.INVALID_PARAMETER,
                    message: "playEffect: parameter is invalid"
                }));
                this.mixAudioConf.sounds[r].state = "STARTING", this.mixAudioConf.audioBuffer[i] ? this.adapterRef.logger.log("playEffect: 已经 load 音效文件") : (this.adapterRef.logger.log("playEffect, 先 load 音效文件"), await this.preloadEffect(r, i));
                try {
                    const e = this.webAudio.createAudioBufferSource(this.mixAudioConf.audioBuffer[i]);
                    this.mixAudioConf.sounds[r].sourceNode = e.sourceNode, e && e.sourceNode && (e.sourceNode.onended = onended = e => {
                        this.stopEffect(r)
                    }), this.mixAudioConf.sounds[r].gainNode = e.gainNode, this.mixAudioConf.sounds[r].totalTime = this.mixAudioConf.audioBuffer[i] && this.mixAudioConf.audioBuffer[i].duration, this.mixAudioConf.sounds[r].cycle = n;
                    const o = this.mixAudioConf.audioBuffer[i] && this.mixAudioConf.audioBuffer[i].duration;
                    this.mixAudioConf.sounds[r].playOverTime = o, n > 1 && (this.mixAudioConf.sounds[r].playOverTime = n * o - this.mixAudioConf.sounds[r].playStartTime), this.mixAudioConf.sounds[r].playStartTime = t || 0, this.webAudio.startAudioEffectMix(this.mixAudioConf.sounds[r]), this.mixAudioConf.sounds[r].state = "PLAYED", this.mixAudioConf.sounds[r].startTime = Date.now()
                } catch (e) {}
            }
            async stopEffect(e) {
                const t = {
                    tag: "Stream.stopEffect:soundId",
                    value: e
                };
                f.isExistOptions(t).result && f.checkValidInteger(t);
                if (!this.webAudio || !this.webAudio.context) return this.adapterRef.logger.log("stopEffect: 浏览器不支持"), Promise.reject(new m.default({
                    code: g.default.NOT_SUPPORT,
                    message: "stopEffect: not supported in this browser"
                }));
                this.webAudio.stopAudioEffectMix(this.mixAudioConf.sounds[e]), this.mixAudioConf.sounds[e].state = "STOPED", this._audioFilePlaybackCompletedEvent()
            }
            async pauseEffect(e) {
                const t = {
                    tag: "Stream.pauseEffect:soundId",
                    value: e
                };
                f.isExistOptions(t).result && f.checkValidInteger(t);
                let r = null;
                if (this.mixAudioConf.sounds[e] || (this.adapterRef.logger.log("pauseEffect: 没有该音效文件"), r = "SOUND_NOT_EXISTS"), this.webAudio && this.webAudio.context ? "PAUSED" === this.mixAudioConf.sounds[e].state ? (this.adapterRef.logger.log("pauseEffect: 已经暂停"), r = "PAUSED") : "PLAYED" !== this.mixAudioConf.sounds[e].state && (this.adapterRef.logger.log("pauseEffect: 当前没有开启该音效"), r = "NOT_PLAYED") : (this.adapterRef.logger.log("pauseEffect: 不支持音效功能"), r = "BROWSER_NOT_SUPPORT"), r) {
                    if ("BROWSER_NOT_SUPPORT" === r) return Promise.reject(new m.default({
                        code: g.default.NOT_SUPPORT,
                        message: "pauseEffect: audio effect is not supported in this browser"
                    }));
                    if ("NOT_PLAYED" === r) return Promise.reject(new m.default({
                        code: g.default.INVALID_OPERATION,
                        message: "pauseEffect: audio effect is not open"
                    }));
                    if ("PAUSED" === r) return Promise.reject(new m.default({
                        code: g.default.INVALID_OPERATION,
                        message: "pauseEffect: audio effect is not played"
                    }));
                    if ("SOUND_NOT_EXISTS" === r) return Promise.reject(new m.default({
                        code: g.default.NO_FILE,
                        message: "pauseEffect: audio effect file is not found"
                    }))
                }
                if (!this.webAudio) return;
                this.webAudio.stopAudioEffectMix(this.mixAudioConf.sounds[e]), this.mixAudioConf.sounds[e].pauseTime = Date.now(), this.mixAudioConf.sounds[e].state = "PAUSED";
                let i = (this.mixAudioConf.sounds[e].pauseTime - this.mixAudioConf.sounds[e].startTime) / 1e3 + this.mixAudioConf.sounds[e].playStartTime;
                this.adapterRef.logger.log("pauseEffect 已经播放的时间: ", i), i > this.mixAudioConf.sounds[e].totalTime && (i %= this.mixAudioConf.sounds[e].totalTime), this.adapterRef.logger.log("pauseEffect 暂停位置: ", i)
            }
            async resumeEffect(e) {
                const t = {
                    tag: "Stream.resumeEffect:soundId",
                    value: e
                };
                f.isExistOptions(t).result && f.checkValidInteger(t);
                let r = null;
                if (this.mixAudioConf.sounds[e] || (this.adapterRef.logger.log("resumeEffect: 没有该音效文件"), r = "SOUND_NOT_EXISTS"), this.webAudio && this.webAudio.context ? "PAUSED" !== this.mixAudioConf.sounds[e].state && (this.adapterRef.logger.log("resumeEffect: 当前没有暂停该音效文件"), r = "NOT_PAUSED") : (this.adapterRef.logger.log("resumeEffect: 不支持音效功能"), r = "BROWSER_NOT_SUPPORT"), r) {
                    if ("BROWSER_NOT_SUPPORT" === r) return Promise.reject(new m.default({
                        code: g.default.NOT_SUPPORT,
                        message: "resumeEffect: audio effect is not supported in this browser"
                    }));
                    if ("NOT_PAUSED" === r) return Promise.reject(new m.default({
                        code: g.default.INVALID_OPERATION,
                        message: "resumeEffect: audio mixing is not paused"
                    }));
                    if ("SOUND_NOT_EXISTS" === r) return Promise.reject(new m.default({
                        code: g.default.NO_FILE,
                        message: "resumeEffect: audio effect file is not found"
                    }))
                }
                if (!this.webAudio) return;
                let i = (this.mixAudioConf.sounds[e].pauseTime - this.mixAudioConf.sounds[e].startTime) / 1e3 + this.mixAudioConf.sounds[e].playStartTime;
                if (this.adapterRef.logger.log("resumeEffect 已经播放的时间: ", i), i > this.mixAudioConf.sounds[e].totalTime) {
                    const t = Math.floor(i / this.mixAudioConf.sounds[e].totalTime);
                    this.adapterRef.logger.log("播发过的圈数 playedCycle: ", t), i %= this.mixAudioConf.sounds[e].totalTime, this.mixAudioConf.sounds[e].cycle = this.mixAudioConf.sounds[e].cycle - t
                }
                this.mixAudioConf.sounds[e].playOverTime = this.mixAudioConf.sounds[e].totalTime, this.mixAudioConf.sounds[e].cycle > 1 && (this.mixAudioConf.sounds[e].playOverTime = this.mixAudioConf.sounds[e].cycle * this.mixAudioConf.sounds[e].totalTime - this.mixAudioConf.sounds[e].playStartTime), i > this.mixAudioConf.sounds[e].totalTime && (i %= this.mixAudioConf.sounds[e].totalTime), this.mixAudioConf.sounds[e].playStartTime = i, this.adapterRef.logger.log("resumeEffect 回复重置的时间点：", i), this.playEffect({
                    soundId: e,
                    filePath: this.mixAudioConf.sounds[e].filePath,
                    cycle: this.mixAudioConf.sounds[e].cycle
                }, i), this.mixAudioConf.sounds[e].state = "PLAYED", this.mixAudioConf.sounds[e].startTime = Date.now()
            }
            async setVolumeOfEffect(e, t) {
                const r = {
                    tag: "Stream.setVolumeOfEffect:soundId",
                    value: e,
                    min: 1
                };
                f.isExistOptions(r).result && f.checkValidInteger(r);
                const i = {
                    tag: "Stream.setVolumeOfEffect:volume",
                    value: t,
                    min: 0,
                    max: 100
                };
                f.isExistOptions(i).result && f.checkValidInteger(i), this.adapterRef.logger.log(`setVolumeOfEffect 设置 ${e} 音效文件的音量: ${t}`), this._initSoundIfNotExists(e);
                let n = null;
                if (this.webAudio && this.webAudio.context || (this.adapterRef.logger.log("setVolumeOfEffect: 不支持音效功能"), n = "BROWSER_NOT_SUPPORT"), n) return Promise.reject(new m.default({
                    code: g.default.NOT_SUPPORT,
                    message: "setVolumeOfEffect: audio effect is not supported in this browser"
                }));
                this.mixAudioConf.sounds[e].gainNode && this.mixAudioConf.sounds[e].gainNode.gain ? this.mixAudioConf.sounds[e].gainNode.gain.value = t / 100 : this.adapterRef.logger.log("setVolumeOfEffect: no gainNode"), this.mixAudioConf.sounds[e].volume = t
            }
            async preloadEffect(e, t) {
                const r = {
                    tag: "Stream.preloadEffect:filePath",
                    value: t
                };
                f.checkExists(r);
                const i = {
                    tag: "Stream.preloadEffect:soundId",
                    value: e
                };
                if (f.isExistOptions(i).result && f.checkValidInteger(i), this.adapterRef.logger.log(`preloadEffect 设置soundId: ${e}, 音效文件的filePath: ${t}`), this._initSoundIfNotExists(e, t), this.audioRoutingEnabled || this.enableAudioRouting(), this.mixAudioConf.audioBuffer[t]) this.adapterRef.logger.log("preloadEffect: 已经 load 音效文件");
                else try {
                    await this.loadAudioBuffer(t)
                } catch (e) {
                    this.adapterRef.logger.error("preloadEffect 错误: ", e.name, e.message, e)
                }
            }
            async unloadEffect(e) {
                const t = {
                    tag: "Stream.unloadEffect:soundId",
                    value: e,
                    min: 1
                };
                return f.isExistOptions(t).result && f.checkValidInteger(t), this.adapterRef.logger.log(`unloadEffect： ${e} 音效文件`), this.mixAudioConf.sounds[e] ? "UNSTART" !== this.mixAudioConf.sounds[e].state && "STOPED" !== this.mixAudioConf.sounds[e].state ? (this.adapterRef.logger.log("unloadEffect: 该音效文件已经播放，请使用 stopEffect 方法"), Promise.reject(new m.default({
                    code: g.default.INVALID_OPERATION,
                    message: "unloadEffect: invalid operation"
                }))) : (delete this.mixAudioConf.audioBuffer[this.mixAudioConf.sounds[e].filePath], void delete this.mixAudioConf.sounds[e]) : (this.adapterRef.logger.log("unloadEffect: 没有该音效文件"), Promise.reject(new m.default({
                    code: g.default.NO_FILE,
                    message: "unloadEffect: audio effect file is not found"
                })))
            }
            getEffectsVolume() {
                this.adapterRef.logger.log("getEffectsVolume");
                const e = new Array;
                return Object.values(this.mixAudioConf.sounds).forEach(t => {
                    e.push({
                        soundId: t.soundId,
                        volume: t.volume
                    })
                }), e
            }
            setEffectsVolume(e) {
                const t = {
                    tag: "Stream.setEffectsVolume:volume",
                    value: e,
                    min: 0,
                    max: 100
                };
                f.isExistOptions(t).result && f.checkValidInteger(t), this.adapterRef.logger.log("setEffectsVolume, 设置音量: " + e), Object.values(this.mixAudioConf.sounds).forEach(t => {
                    this.setVolumeOfEffect(t.soundId, e)
                })
            }
            async stopAllEffects() {
                this.adapterRef.logger.log("stopAllEffects"), Object.values(this.mixAudioConf.sounds).forEach(e => {
                    "PLAYED" !== e.state && "PAUSED" !== e.state || this.stopEffect(e.soundId)
                })
            }
            async pauseAllEffects() {
                this.adapterRef.logger.log("pauseAllEffects"), Object.values(this.mixAudioConf.sounds).forEach(e => {
                    "PLAYED" === e.state && this.pauseEffect(e.soundId)
                })
            }
            async resumeAllEffects() {
                this.adapterRef.logger.log("resumeAllEffects"), Object.values(this.mixAudioConf.sounds).forEach(e => {
                    "PAUSED" === e.state && this.resumeEffect(e.soundId)
                })
            }
            loadAudioBuffer(e) {
                return p.ajax({
                    url: e,
                    type: "GET",
                    dataType: "arraybuffer"
                }).then(t => (this.adapterRef.logger.log("loadAudioBuffer 加载 audio file 成功"), new Promise((r, i) => {
                    this.webAudio && this.webAudio.context ? this.webAudio.context.decodeAudioData(t, t => {
                        this.adapterRef.logger.log("loadAudioBuffer audio file 解码成功"), this.mixAudioConf.audioBuffer[e] = t, r(t)
                    }, e => {
                        this.adapterRef.logger.log("loadRemoteAudioFile 云端音乐解码失败：", e), i(new m.default({
                            code: g.default.DECODE_FAILED,
                            message: "create buffersource failed"
                        }))
                    }) : i(new m.default({
                        code: g.default.STATE_ERROR,
                        message: "webAudio lost"
                    }))
                }))).catch(e => (this.adapterRef.logger.log("loadRemoteAudioFile 加载云端音乐失败: ", e), Promise.reject(new m.default({
                    code: g.default.STATE_ERROR,
                    message: "load audio failed"
                }))))
            }
            enableAudioRouting() {
                if (this.webAudio && this.webAudio.destination) {
                    this.audioRoutingEnabled = !0;
                    const e = this.webAudio.destination.stream.getAudioTracks()[0];
                    this.adapterRef.logger.log("enableAudioRouting: ", e.label);
                    const t = this.audioStream.getAudioTracks()[0];
                    t && (this.audioStream.removeTrack(t), e.enabled = t.enabled, t.enabled = !0), this.audioStream.addTrack(e), this.updateAudioSender(e)
                } else this.adapterRef.logger.log("enableAudioRouting: 已替换为Destination")
            }
            disableAudioRouting() {
                const e = this.micTrack || this.audioSource || this.screenAudioTrack;
                this.audioRoutingEnabled = !1, this.adapterRef.logger.warn("disableAudioRouting: ", e);
                const t = this.audioStream.getAudioTracks()[0];
                t && this.audioStream.removeTrack(t), e && (t && (e.enabled = t.enabled, t.enabled = !0), this.audioStream.addTrack(e), this.updateAudioSender(e))
            }
            updateAudioSender(e) {
                if (this.adapterRef._mediasoup && this.adapterRef._mediasoup._micProducer)
                    if (this.adapterRef._mediasoup._micProducer && this.adapterRef._mediasoup._micProducer._rtpSender) this.adapterRef.logger.info("updateAudioSender: 替换当前_micProducer的track", e.label), this.adapterRef._mediasoup._micProducer._rtpSender.replaceTrack(e);
                    else if (this.adapterRef._mediasoup._sendTransport && this.adapterRef._mediasoup._sendTransport.handler && this.adapterRef._mediasoup._sendTransport.handler._pc) {
                    const r = this.adapterRef._mediasoup._sendTransport.handler._pc.getSenders();
                    for (var t in r) {
                        const i = r[t];
                        i.track && "audio" === i.track.kind && (this.adapterRef.logger.info("updateAudioSender: 替换audioSender", i.track.label), i.replaceTrack(e))
                    }
                }
            }
            destroy() {
                this.adapterRef.logger.log("清除 meida"), this._reset()
            }
        }
        t.MediaHelper = y
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.shimCanvas = t.canShimCanvas = void 0;
        const i = r(13),
            n = r(26);
        t.canShimCanvas = function() {
            let e = !1;
            if ("never" === i.getParameters().shimCanvas) e = !1;
            else if ("always" === i.getParameters().shimCanvas) e = !0;
            else if ("ios151" === i.getParameters().shimCanvas) return !!(n.RtcSystem.ios() && navigator.userAgent.indexOf(" OS 15_1") > -1);
            return e
        }, t.shimCanvas = function(e) {
            const t = document.createElement("canvas"),
                r = document.createElement("video");
            let i = e.getSettings().frameRate || 15;
            const n = t.getContext("2d"),
                o = new MediaStream([e]);
            if (r.srcObject = o, r.setAttribute("playsinline", "playsinline"), r.setAttribute("muted", "muted"), r.setAttribute("autoplay", "autoplay"), r.className = "nertc-ios-shim", r.style.display = "none", r.onresize = () => {
                    r.videoWidth && r.videoHeight && (t.width = r.videoWidth, t.height = r.videoHeight)
                }, n) {
                const o = t.captureStream(i).getVideoTracks()[0];
                Object.defineProperty(o, "enabled", {
                    get: () => e.enabled,
                    set(t) {
                        console.warn("Delegate cameraTrack enabled", t), e.enabled = t
                    }
                });
                const s = setInterval(() => {
                    r.paused ? (console.log("play"), r.play()) : "ended" === o.readyState ? ("live" === e.readyState && (console.warn("canvasTrack已停止，回收videoTrack中"), e.stop()), clearInterval(s), document.body.removeChild(r)) : n.drawImage(r, 0, 0)
                }, 1e3 / i);
                return document.body.appendChild(r), o
            }
            throw new Error("Ctx not supported")
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.WebAudio = void 0;
        const n = r(3),
            o = r(145),
            s = r(51),
            a = i(r(1)),
            d = i(r(0)),
            c = o.RtcSupport.checkWebAudio();
        let u;
        class l {
            constructor(e) {
                this.id = e.id, this.label = e.label, this.audioNode = e.audioNode, this.gainNode = e.context.createGain(), this.type = e.type, this.audioNode.connect(this.gainNode)
            }
            connect(e) {
                this.gainNode.connect(e)
            }
            disconnect() {
                this.audioNode.disconnect(this.gainNode), this.gainNode.disconnect()
            }
        }
        class p extends n.EventEmitter {
            constructor(e) {
                super();
                const {
                    adapterRef: t,
                    isAnalyze: r = !0,
                    isRemote: i = !1
                } = e;
                this.support = c.WebAudio && c.MediaStream, this.gain = 1, this.logger = t.logger, this.adapterRef = t, this.audioInArr = [], this.isAnalyze = r, this.isRemote = i || !1, this.instant = 0, this.slow = 0, this.clip = 0, this.mixAudioConf = {
                    state: s.AuidoMixingState.UNSTART,
                    audioSource: null,
                    gainFilter: null,
                    replace: !1,
                    cycle: 0,
                    pauseTime: 0,
                    startTime: 0,
                    totalTime: 0,
                    volume: 1,
                    playStartTime: 0,
                    setPlayStartTime: 0,
                    auidoMixingEnd: null
                }, u ? this.context = u : c.WebAudio && c.MediaStream ? (u = new window.AudioContext, this.context = u) : this.context = null, this.context ? (this.destination = this.createDestination(), this.musicDestination = this.createDestination(), this.analyzeDestination = this.createDestination()) : (this.destination = null, this.musicDestination = null, this.analyzeDestination = null), this.support && (this.resetMixConf(), this.init())
            }
            createDestination() {
                if (!this.context) throw new Error("AudioContextRequired");
                try {
                    return new MediaStreamAudioDestinationNode(this.context)
                } catch (e) {
                    if ("TypeError" === e.name) return this.context.createMediaStreamDestination();
                    throw e
                }
            }
            createSource(e) {
                if (!this.context) throw new Error("AudioContextRequired");
                try {
                    return new MediaStreamAudioSourceNode(this.context, e)
                } catch (t) {
                    if ("TypeError" === t.name) return this.context.createMediaStreamSource(e.mediaStream);
                    throw t
                }
            }
            init() {
                this.isAnalyze && this.initMonitor(), this.initWebAudio(), this.initAudioIn()
            }
            initMonitor() {
                var e = this;
                this.context ? (this.script = this.context.createScriptProcessor(0, 1, 1)).onaudioprocess = function(t) {
                    var r, i = t.inputBuffer.getChannelData(0),
                        n = 0,
                        o = 0;
                    for (r = 0; r < i.length; ++r) n += Math.abs(i[r]), Math.abs(i[r]) > .99 && (o += 1);
                    e.instant = Math.sqrt(n / i.length), e.slow = .95 * e.slow + .05 * e.instant, e.clip = o / i.length;
                    let s = t.inputBuffer,
                        a = t.outputBuffer;
                    a.copyToChannel && a.copyToChannel(s.getChannelData(0), 0, 0)
                } : e.logger.error("initMonitor:参数不够")
            }
            initWebAudio() {
                this.context && this.destination ? (this.gainFilter = this.context.createGain(), this.gainFilter.gain.value = this.gain) : this.logger.error("initMonitor:参数不够")
            }
            initAudioIn() {
                const e = this;
                if (!e.context || !e.gainFilter || !e.destination) return this.logger.error("initAudioIn:参数不够"), null;
                for (var t = 0; t < e.audioInArr.length; t++) {
                    e.audioInArr[t].connect(e.gainFilter)
                }
                e.mixAudioConf.state === s.AuidoMixingState.UNSTART && (e.script && e.analyzeDestination && (e.gainFilter.connect(e.script), e.script.connect(e.analyzeDestination)), e.gainFilter.connect(e.destination)), this.logger.log("WebAudio: initAudioIn: 初始化音频 state: ", e.context.state), "running" !== e.context.state && e.context.resume().then(() => {
                    this.context && this.logger.log("WebAudio: addMs: 状态变更成功 state: ", this.context.state)
                }).catch(e => {
                    this.logger.log("WebAudio: addMs: 状态变更出错: ", e.name, e.message, e), this.context && this.context.resume()
                })
            }
            updateTracks(e) {
                for (let t = this.audioInArr.length - 1; t >= 0; t--) {
                    const r = this.audioInArr[t];
                    e.find(e => e.track && r && e.track.id === r.id) || (this.logger.log("updateTracks，删除", r.label, r.id), this.audioInArr.splice(t, 1), r.disconnect())
                }
                for (let t = e.length - 1; t >= 0; t--) {
                    const r = e[t];
                    if (!this.audioInArr.find(e => r.track && r.track.id === e.id) && r.track)
                        if (this.context) {
                            const e = new MediaStream;
                            e.addTrack(r.track);
                            const t = {
                                    context: this.context,
                                    id: r.track.id,
                                    label: r.track.label,
                                    audioNode: this.createSource({
                                        mediaStream: e
                                    }),
                                    type: r.type
                                },
                                i = new l(t);
                            i.gainNode.gain.value = this.gain, this.audioInArr.push(i)
                        } else this.adapterRef.logger.error("updateTracks：没有audioContext")
                }
                this.initAudioIn()
            }
            removeTrack(e) {
                for (let t = this.audioInArr.length - 1; t >= 0; t--) {
                    const r = this.audioInArr[t];
                    r.id === e.id && (this.logger.log("removeTrack，删除track", e.id, e.label), this.audioInArr.splice(t, 1), r.disconnect())
                }
            }
            setGain(e, t) {
                for (let r = 0; r < this.audioInArr.length; r++) {
                    const i = this.audioInArr[r];
                    t && t !== i.type || (this.adapterRef.logger.log("WebAudio.setGain", t, e, i.type, i.label, i.id), i.gainNode.gain.value = e)
                }
                t || (this.gain = e)
            }
            getGain() {
                if (this.gainFilter) return this.gain
            }
            getGainMin() {
                let e = 1;
                for (let t = 0; t < this.audioInArr.length; t++) {
                    const r = this.audioInArr[t];
                    r.gainNode.gain.value < e && (e = r.gainNode.gain.value)
                }
                return e
            }
            stop() {
                this.gainFilter && (this.script ? this.script.disconnect(0) : this.gainFilter.disconnect(0), this.instant = 0)
            }
            start() {
                this.gainFilter && this.destination && (this.script && this.analyzeDestination && (this.gainFilter.connect(this.script), this.script.connect(this.analyzeDestination)), this.gainFilter.connect(this.destination))
            }
            resetMixConf() {
                var e, t;
                if (null === (e = this.mixAudioConf.audioSource) || void 0 === e || e.disconnect(0), null === (t = this.mixAudioConf.gainFilter) || void 0 === t || t.disconnect(0), this.mixAudioConf.replace && (this.logger.log("伴音停止了，恢复mic"), this.gainFilter && this.destination)) {
                    for (var r = 0; r < this.audioInArr.length; r++) {
                        this.audioInArr[r].gainNode.connect(this.gainFilter)
                    }
                    this.script && this.analyzeDestination && (this.gainFilter.connect(this.script), this.script.connect(this.analyzeDestination)), this.gainFilter.connect(this.destination)
                }
                this.mixAudioConf = {
                    state: s.AuidoMixingState.UNSTART,
                    audioSource: null,
                    gainFilter: null,
                    replace: !1,
                    cycle: 0,
                    pauseTime: 0,
                    startTime: 0,
                    totalTime: 0,
                    volume: 1,
                    playStartTime: 0,
                    setPlayStartTime: 0,
                    auidoMixingEnd: null
                }, this.gainFilter && 1 === this.gainFilter.gain.value && this.adapterRef.localStream && this.adapterRef.localStream.mediaHelper && this.emit("audioFilePlaybackCompleted")
            }
            startMix(e) {
                if (!this.context || !this.destination || !this.gainFilter) return this.logger.error("initMonitor:参数不够"), Promise.reject(new a.default({
                    code: d.default.INVALID_PARAMETER,
                    message: "initMonitor: invalid parameter"
                }));
                if (this.logger.log("开始混音: %s", JSON.stringify(e, null, " ")), this.mixAudioConf.audioSource = this.context.createBufferSource(), this.mixAudioConf.gainFilter = this.context.createGain(), this.mixAudioConf.audioSource.buffer = e.buffer, this.mixAudioConf.replace = e.replace, this.mixAudioConf.cycle = e.cycle, this.mixAudioConf.playStartTime = e.playStartTime, this.mixAudioConf.volume = e.volume ? e.volume / 255 : 1, this.mixAudioConf.auidoMixingEnd = e.auidoMixingEnd, this.mixAudioConf.audioSource.connect(this.mixAudioConf.gainFilter), this.mixAudioConf.gainFilter.connect(this.gainFilter), this.musicDestination && this.mixAudioConf.gainFilter.connect(this.musicDestination), e.replace)
                    for (var t = 0; t < this.audioInArr.length; t++) {
                        this.audioInArr[t].gainNode.disconnect(this.gainFilter)
                    }
                if (this.mixAudioConf.audioSource.onended = e => {
                        this.audioEnd(e)
                    }, this.mixAudioConf.totalTime = e.buffer.duration, (this.mixAudioConf.playStartTime < 0 || this.mixAudioConf.playStartTime >= this.mixAudioConf.totalTime) && (this.mixAudioConf.playStartTime = 0), this.logger.log("设置音量: %s", this.mixAudioConf.volume), this.mixAudioConf.gainFilter.gain.value = this.mixAudioConf.volume, e.loopback && e.cycle > 1) {
                    this.mixAudioConf.audioSource.loop = e.loopback;
                    const t = e.cycle * this.mixAudioConf.totalTime - this.mixAudioConf.playStartTime;
                    this.logger.log("循环播放: options.playStartTime: ", this.mixAudioConf.playStartTime), this.logger.log("循环播放: totalTime: ", t), this.mixAudioConf.audioSource.start(0, this.mixAudioConf.playStartTime, t - 1)
                } else e.loopback && 1 == e.cycle ? (this.mixAudioConf.audioSource.loop = !1, this.mixAudioConf.audioSource.start(0, this.mixAudioConf.playStartTime)) : (this.logger.log("无限循环播放 loop: ", e.loopback), this.mixAudioConf.audioSource.loop = e.loopback, this.mixAudioConf.audioSource.start(0, this.mixAudioConf.playStartTime));
                return this.mixAudioConf.state = s.AuidoMixingState.PLAYED, this.mixAudioConf.startTime = Date.now(), Promise.resolve()
            }
            pauseAudioMixing() {
                if (!this.mixAudioConf.audioSource || !this.mixAudioConf.gainFilter) return void this.logger.error("pauseAudioMixing:参数不够");
                this.logger.log("暂停混音"), this.mixAudioConf.audioSource.onended = null, this.mixAudioConf.audioSource.disconnect(0), this.mixAudioConf.gainFilter.disconnect(0), this.mixAudioConf.audioSource.stop(), this.mixAudioConf.pauseTime = Date.now(), this.mixAudioConf.state = s.AuidoMixingState.PAUSED;
                let e = (this.mixAudioConf.pauseTime - this.mixAudioConf.startTime) / 1e3 + this.mixAudioConf.playStartTime;
                return this.logger.log("已经播放的时间: ", e), e > this.mixAudioConf.totalTime && (e %= this.mixAudioConf.totalTime), this.logger.log("暂停位置:", e), Promise.resolve()
            }
            resumeAudioMixing(e) {
                return this.logger.log("恢复混音"), this.mixAudioConf.pauseTime = 0, e.volume = 255 * this.mixAudioConf.volume, this.startMix(e)
            }
            stopAudioMixing(e = !0) {
                return this.mixAudioConf.audioSource && this.mixAudioConf.gainFilter ? (this.logger.log("停止混音, isFinished: ", e), this.mixAudioConf.audioSource.onended = null, this.mixAudioConf.audioSource.disconnect(0), this.mixAudioConf.gainFilter.disconnect(0), this.mixAudioConf.audioSource.stop(), this.mixAudioConf.state = s.AuidoMixingState.STOPED, e && this.resetMixConf(), Promise.resolve()) : (this.logger.error("stopAudioMixing:参数不够"), Promise.reject(new a.default({
                    code: d.default.INVALID_PARAMETER,
                    message: "stopAudioMixing: invalid parameter"
                })))
            }
            audioEnd(e) {
                if (this.mixAudioConf.state === s.AuidoMixingState.PLAYED) {
                    if (!(this.mixAudioConf.audioSource && this.mixAudioConf.audioSource.loop && this.mixAudioConf.cycle <= 0)) return this.logger.log("伴音播放完成: ", this.mixAudioConf), this.mixAudioConf.audioSource && (this.mixAudioConf.audioSource.onended = null), this.mixAudioConf.auidoMixingEnd && (this.mixAudioConf.auidoMixingEnd(e), this.mixAudioConf.auidoMixingEnd = null), this.resetMixConf(), Promise.resolve();
                    this.logger.log("无限循环时，伴音播放完成event: ", e)
                } else this.logger.error("audioEnd:参数不够")
            }
            setAudioMixingVolume(e) {
                if (this.mixAudioConf.gainFilter) return this.mixAudioConf.gainFilter.gain.value = e / 255, this.mixAudioConf.volume = this.mixAudioConf.gainFilter.gain.value, Promise.resolve();
                this.logger.error("setAudioMixingVolume:参数不够")
            }
            setAudioMixingPlayTime(e) {
                return this.mixAudioConf.state === s.AuidoMixingState.PLAYED && (this.mixAudioConf.setPlayStartTime = e.playStartTime), e.volume = 255 * this.mixAudioConf.volume, this.startMix(e)
            }
            getAudioMixingPlayedTime() {
                let e = Date.now();
                this.mixAudioConf.state == s.AuidoMixingState.PAUSED && this.mixAudioConf.pauseTime && (this.logger.log("当前是暂停状态"), e = this.mixAudioConf.pauseTime);
                let t = (e - this.mixAudioConf.startTime) / 1e3 + this.mixAudioConf.playStartTime;
                return t > this.mixAudioConf.totalTime && (t %= this.mixAudioConf.totalTime), {
                    playedTime: t
                }
            }
            getAudioMixingTotalTime() {
                return {
                    totalTime: this.mixAudioConf.totalTime
                }
            }
            createAudioBufferSource(e) {
                if (!this.context || !this.destination || !this.gainFilter) return this.logger.error("initMonitor:参数不够"), {};
                const t = this.context.createBufferSource();
                t.buffer = e;
                const r = this.context.createGain();
                t.connect(r);
                return {
                    sourceNode: t,
                    gainNode: r
                }
            }
            startAudioEffectMix(e) {
                if (!this.context || !this.destination || !this.gainFilter) return this.logger.error("initMonitor:参数不够"), Promise.reject(new a.default({
                    code: d.default.INVALID_PARAMETER,
                    message: "initMonitor: invalid parameter"
                }));
                const {
                    sourceNode: t,
                    gainNode: r,
                    playOverTime: i,
                    playStartTime: n,
                    volume: o,
                    cycle: c
                } = e;
                r && t && (this.logger.log("startAudioEffectMix: ", JSON.stringify(e)), r.connect(this.gainFilter), this.musicDestination && r.connect(this.musicDestination), r.gain.value = o / 100, c > 1 ? (t.loop = !0, t.start(0, n, i)) : (t.loop = !1, t.start(0, n)), this.mixAudioConf.state = s.AuidoMixingState.PLAYED, this.mixAudioConf.startTime = Date.now())
            }
            stopAudioEffectMix(e) {
                const {
                    sourceNode: t,
                    gainNode: r,
                    playOverTime: i,
                    playStartTime: n,
                    volume: o,
                    cycle: s
                } = e;
                if (!r || !t) return this.logger.error("stopAudioEffectMix: 参数不够"), Promise.reject(new a.default({
                    code: d.default.INVALID_PARAMETER,
                    message: "stopAudioEffectMix: invalid parameter"
                }));
                this.logger.log("stopAudioEffectMix: ", JSON.stringify(e)), t.onended = null, t.disconnect(0), r.disconnect(0), t.stop()
            }
            destroy() {
                this.adapterRef.logger.log("AudioContext 清除"), this.instant = 0, this.slow = 0, this.clip = 0, this.gainFilter && this.gainFilter.disconnect(0), this.script && this.script.disconnect(0);
                for (let e = 0; e < this.audioInArr.length; e++) this.audioInArr[e] && this.audioInArr[e].disconnect();
                this.audioInArr = []
            }
            getVolumeData() {
                return this.instant.toFixed(2)
            }
        }
        t.WebAudio = p
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.checkRTCCompatibility = t.isBrowserSupported = t.isScreenShareSupport = t.isMediaDevicesSupported = t.isWebRTCSupported = t.RtcSupport = void 0;
        const s = r(81),
            a = r(26),
            d = r(27),
            c = o(r(38)),
            u = r(20);
        let l = {
            result: !1,
            detail: {
                isBrowserSupported: !1,
                isWebRTCSupported: !1,
                isMediaDevicesSupported: !1,
                isH264EncodeSupported: !1,
                isVp8EncodeSupported: !1,
                isH264DecodeSupported: !1,
                isVp8DecodeSupported: !1
            }
        };
        var p = null;
        a.RtcSystem.ios() && "weixin" === a.RtcSystem.browser.ua || (p = navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.mediaDevices && navigator.mediaDevices.getUserMedia);
        var f = window.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext || window.msAudioContext,
            h = window.RTCPeerConnection = window.RTCPeerConnection || window.webkitRTCPeerConnection || window.mozRTCPeerConnection,
            m = window.MediaStream = window.MediaStream || window.webkitMediaStream;

        function g(e) {
            let t;
            return t || (t = document.createElement("video")), !!t.canPlayType({
                ogg: 'video/ogg; codecs="theora"',
                h264: 'video/mp4; codecs="avc1.42E01E"',
                webm: 'video/webm; codecs="vp8, vorbis"',
                vp9: 'video/webm; codecs="vp9"',
                hls: 'application/x-mpegURL; codecs="avc1.42E01E"'
            } [e] || e)
        }
        const v = {
            WebRTC: !!h && !!m,
            RTCPeerConnection: !!h,
            Vp8: g("webm"),
            Vp9: g("vp9"),
            H264: g("h264"),
            GetUserMedia: !!p && !!navigator.mediaDevices,
            DataChannel: !!(h && RTCDataChannel && h.prototype && h.prototype.createDataChannel),
            WebAudio: !(!f || !f.prototype.createMediaStreamSource),
            MediaStream: !!m
        };

        function y() {
            let e = d.platform && d.platform.name,
                t = d.platform && d.platform.version;
            return t = t && t.match(/\d+/)[0], {
                prefix: e,
                version: t
            }
        }
        const _ = {
            checkWebRtc: () => v,
            checkWebAudio: () => ({
                WebAudio: v.WebAudio,
                MediaStream: v.MediaStream
            }),
            checkCompatibility() {
                let e = Object.assign(y(), {
                    system: d.platform && d.platform.os.family + " " + d.platform.os.version,
                    browser: d.platform && d.platform.name,
                    version: d.platform && d.platform.version
                });
                return new Promise((function(t, r) {
                    (async () => {
                        const r = Object.assign(e, v, {
                                ScreenSharing: !1
                            }),
                            i = await s.Device.getDevices({
                                audiooutput: !0,
                                audioinput: !0,
                                videoinput: !0,
                                requestPerm: !0
                            }).catch(e => t(r));
                        r.MicrophoneList = i && i.audioIn || [], r.CameraList = i && i.video || [], r.Microphone = i && i.audioIn && i.audioIn.length > 0 || !1, r.Camera = i && i.video && i.video.length > 0 || !1, t(r)
                    })()
                }))
            },
            checkVersion: () => y()
        };
        t.RtcSupport = _;
        t.isWebRTCSupported = function() {
            return ["RTCPeerConnection", "webkitRTCPeerConnection", "RTCIceGatherer"].filter(e => e in window).length > 0
        };
        t.isMediaDevicesSupported = function() {
            if (!navigator.mediaDevices) return !1;
            const e = ["getUserMedia", "enumerateDevices"];
            return e.filter(e => e in navigator.mediaDevices).length === e.length
        };
        t.isScreenShareSupport = function() {
            if (c.IS_ELECTRON) return !0; {
                let e = navigator.mediaDevices;
                return !(!e || !e.getDisplayMedia)
            }
        };
        t.isBrowserSupported = function() {
            return !!(c.IS_CHROME || c.IS_SAFARI || c.IS_TBS || c.IS_XWEB) && (!(c.IS_CHROME && c.CHROME_MAJOR_VERSION < 72) && (!(c.IS_MAC_SAFARI && c.SAFARI_MAJOR_VERSION < 12) && !(c.IS_IOS_SAFARI && c.SAFARI_MAJOR_VERSION < 13)))
        };
        t.checkRTCCompatibility = async function() {
            if (l.result) return l;
            const e = t.isBrowserSupported(),
                r = t.isWebRTCSupported(),
                i = t.isMediaDevicesSupported(),
                n = await u.getSupportedCodecs("send"),
                o = await u.getSupportedCodecs("recv");
            return l.detail.isBrowserSupported = e, l.detail.isWebRTCSupported = r, l.detail.isMediaDevicesSupported = i, l.detail.isH264EncodeSupported = n.video.indexOf("H264") > -1, l.detail.isVp8EncodeSupported = n.video.indexOf("VP8") > -1, l.detail.isH264DecodeSupported = o.video.indexOf("H264") > -1, l.detail.isVp8DecodeSupported = o.video.indexOf("VP8") > -1, l.result = e && r && i && (l.detail.isH264EncodeSupported || l.detail.isVp8EncodeSupported) && (l.detail.isH264EncodeSupported || l.detail.isVp8EncodeSupported), l
        }
    }, function(e, t, r) {
        "use strict";
        t.__esModule = !0, t.uint8ArrayToHex = t.uint8ArrayToString = t.stringToUint8Array = t.stringToByte = t.sm4_setkey_dec = t.sm4_setkey_enc = t.sm4_crypt_ecb = t.SM4Ctx = void 0;
        var i = function() {
            this.mode = 1, this.sk = [], this.isPadding = !0
        };

        function n(e, t) {
            return (255 & e[t]) << 24 | (255 & e[t + 1]) << 16 | (255 & e[t + 2]) << 8 | 255 & e[t + 3]
        }

        function o(e, t, r) {
            t[r] = 255 & e >> 24, t[r + 1] = 255 & e >> 16, t[r + 2] = 255 & e >> 8, t[r + 3] = 255 & e
        }

        function s(e, t, r) {
            return void 0 === r && (r = 32), e << (t %= r) | e >>> r - t
        }
        t.SM4Ctx = i;
        var a = [214, 144, 233, 254, 204, 225, 61, 183, 22, 182, 20, 194, 40, 251, 44, 5, 43, 103, 154, 118, 42, 190, 4, 195, 170, 68, 19, 38, 73, 134, 6, 153, 156, 66, 80, 244, 145, 239, 152, 122, 51, 84, 11, 67, 237, 207, 172, 98, 228, 179, 28, 169, 201, 8, 232, 149, 128, 223, 148, 250, 117, 143, 63, 166, 71, 7, 167, 252, 243, 115, 23, 186, 131, 89, 60, 25, 230, 133, 79, 168, 104, 107, 129, 178, 113, 100, 218, 139, 248, 235, 15, 75, 112, 86, 157, 53, 30, 36, 14, 94, 99, 88, 209, 162, 37, 34, 124, 59, 1, 33, 120, 135, 212, 0, 70, 87, 159, 211, 39, 82, 76, 54, 2, 231, 160, 196, 200, 158, 234, 191, 138, 210, 64, 199, 56, 181, 163, 247, 242, 206, 249, 97, 21, 161, 224, 174, 93, 164, 155, 52, 26, 85, 173, 147, 50, 48, 245, 140, 177, 227, 29, 246, 226, 46, 130, 102, 202, 96, 192, 41, 35, 171, 13, 83, 78, 111, 213, 219, 55, 69, 222, 253, 142, 47, 3, 255, 106, 114, 109, 108, 91, 81, 141, 27, 175, 146, 187, 221, 188, 127, 17, 217, 92, 65, 31, 16, 90, 216, 10, 193, 49, 136, 165, 205, 123, 189, 45, 116, 208, 18, 184, 229, 180, 176, 137, 105, 151, 74, 12, 150, 119, 126, 101, 185, 241, 9, 197, 110, 198, 132, 24, 240, 125, 236, 58, 220, 77, 32, 121, 238, 95, 62, 215, 203, 57, 72],
            d = [462357, 472066609, 943670861, 1415275113, 1886879365, 2358483617, 2830087869, 3301692121, 3773296373, 4228057617, 404694573, 876298825, 1347903077, 1819507329, 2291111581, 2762715833, 3234320085, 3705924337, 4177462797, 337322537, 808926789, 1280531041, 1752135293, 2223739545, 2695343797, 3166948049, 3638552301, 4110090761, 269950501, 741554753, 1213159005, 1684763257],
            c = [2746333894, 1453994832, 1736282519, 2993693404];

        function u(e) {
            return a[255 & e]
        }

        function l(e, t, r, i, a) {
            return e ^ (d = t ^ r ^ i ^ a, l = new Uint8Array(4), p = new Uint8Array(4), o(d, l, 0), p[0] = u(l[0]), p[1] = u(l[1]), p[2] = u(l[2]), p[3] = u(l[3]), (c = n(p, 0)) ^ s(c, 2) ^ s(c, 10) ^ s(c, 18) ^ s(c, 24));
            var d, c, l, p
        }

        function p(e, t) {
            var r, i, a, l, p = new Array(4),
                f = new Array(36),
                h = 0;
            for (p[0] = n(t, 0), p[1] = n(t, 4), p[2] = n(t, 8), p[3] = n(t, 12), f[0] = p[0] ^ c[0], f[1] = p[1] ^ c[1], f[2] = p[2] ^ c[2], f[3] = p[3] ^ c[3]; h < 32; h++) f[h + 4] = f[h] ^ (r = f[h + 1] ^ f[h + 2] ^ f[h + 3] ^ d[h], i = void 0, a = void 0, l = void 0, a = new Uint8Array(4), l = new Uint8Array(4), o(r, a, 0), l[0] = u(a[0]), l[1] = u(a[1]), l[2] = u(a[2]), l[3] = u(a[3]), (i = n(l, 0)) ^ s(i, 13) ^ s(i, 23)), e[h] = f[h + 4]
        }

        function f(e, t, r) {
            var i = 0,
                s = new Array(36);
            for (s[0] = n(t, 0), s[1] = n(t, 4), s[2] = n(t, 8), s[3] = n(t, 12); i < 32;) s[i + 4] = l(s[i], s[i + 1], s[i + 2], s[i + 3], e[i]), i++;
            o(s[35], r, 0), o(s[34], r, 4), o(s[33], r, 8), o(s[32], r, 12)
        }

        function h(e, t) {
            var r;
            if (1 == t) {
                var i = 16 - e.length % 16;
                (r = new Uint8Array(e.length + i)).set(e), r.fill(i, e.length)
            } else r = e.subarray(0, e.length - e[e.length - 1]);
            return r
        }
        t.sm4_setkey_enc = function(e, t) {
            e.mode = 1, p(e.sk, t)
        }, t.sm4_setkey_dec = function(e, t) {
            null == e && Error("ctx is null!"), null != t && 16 == t.length || Error("key error!"), e.mode = 0, p(e.sk, t), e.sk = e.sk.reverse()
        }, t.sm4_crypt_ecb = function(e, t, r) {
            r || (r = {}), r.shiftStart || (r.shiftStart = 0), e.isPadding && 1 == e.mode && (t = h(t, 1));
            var i, n, o = t.length;
            1 == e.mode ? (i = 0, n = r.shiftStart) : (i = r.shiftStart, n = 0);
            for (var s = new Uint8Array(o + n - i), a = 0; a < o - i; a += 16) {
                var d = new Uint8Array(t.buffer, a + i, 16),
                    c = new Uint8Array(s.buffer, a + n, 16);
                f(e.sk, d, c)
            }
            return e.isPadding && 0 == e.mode && (s = h(s, 0)), s
        }, t.stringToByte = function(e) {
            var t, r, i = new Array;
            t = e.length;
            for (var n = 0; n < t; n++)(r = e.charCodeAt(n)) >= 65536 && r <= 1114111 ? (i.push(r >> 18 & 7 | 240), i.push(r >> 12 & 63 | 128), i.push(r >> 6 & 63 | 128), i.push(63 & r | 128)) : r >= 2048 && r <= 65535 ? (i.push(r >> 12 & 15 | 224), i.push(r >> 6 & 63 | 128), i.push(63 & r | 128)) : r >= 128 && r <= 2047 ? (i.push(r >> 6 & 31 | 192), i.push(63 & r | 128)) : i.push(255 & r);
            return i
        }, t.stringToUint8Array = function(e) {
            for (var t = new Uint8Array(e.length), r = 0; r < e.length; r++) t[r] = e.charCodeAt(r);
            return t
        }, t.uint8ArrayToString = function(e) {
            for (var t = "", r = 0; r < e.length; r++) t += String.fromCharCode(e[r]);
            return t
        }, t.uint8ArrayToHex = function(e) {
            for (var t = "", r = 0; r < e.length; r++) t += e[r].toString(16).padStart(2, "0");
            return t
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.RTSTransport = void 0;
        const n = r(3),
            o = i(r(1)),
            s = i(r(0));
        class a extends n.EventEmitter {
            constructor(e) {
                super(), this._reset(), this.adapterRef = e.adapterRef, this._url = e.url, this._port = e.port, this._transportId = e.transportId, this._ws = null, this.initSocket()
            }
            get transportId() {
                return this._transportId
            }
            _reset() {
                this._url = "", this._port = 0, this._ws = null
            }
            initSocket() {
                if (this.adapterRef.logger.log("RTSTransport建立连接, url: ", this._url), !this._url) throw new o.default({
                    code: s.default.NOT_FOUND,
                    message: "RTSTransport: No _url"
                });
                this._ws = new WebSocket(this._url, ["protoo"]), this._ws.binaryType = "arraybuffer";
                const e = this._ws;
                e.onopen = this._onOpen.bind(this), e.onmessage = this._onMessage.bind(this), e.onclose = this._onClose.bind(this), e.onerror = this._onError.bind(this)
            }
            _onOpen(e) {
                this.adapterRef.logger.log("RTSTransport:_onOpen"), this.emit("open", e)
            }
            _onMessage(e) {
                this.adapterRef.instance.emit("rts-stream-data", e)
            }
            _onClose(e) {
                this.adapterRef.logger.log("RTSTransport:onClose <- ", e), this.emit("close", e)
            }
            _onError(e) {
                this.adapterRef.logger.log("RTSTransport:onError <- ", e), this.emit("error", e)
            }
            send(e) {
                this._ws && this._ws.readyState === WebSocket.OPEN ? this._ws.send(JSON.stringify(e)) : this.adapterRef.logger.log("RTSTransport:send: 当前不能发送，等待ws连接成功之后发送")
            }
            _close() {
                this.adapterRef.logger.log("RTSTransport:close"), this._ws && (this._ws.onclose = null, this._ws.onerror = null, this._ws.onopen = null, this._ws.onmessage = null, this._ws.close(), this._ws = null)
            }
            destroy() {
                this.adapterRef.logger.log("WSTransport:destroy"), this._close(), this._url = null
            }
        }
        t.RTSTransport = a
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.parseBase64 = void 0;
        const i = r(149);
        let n;
        t.parseBase64 = function(e) {
            var t = e.length,
                r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
            if (!n) {
                n = [];
                for (var o = 0; o < r.length; o++) n[r.charCodeAt(o)] = o
            }
            var s = r.charAt(64);
            if (s) {
                var a = e.indexOf(s); - 1 !== a && (t = a)
            }
            return function(e, t, r) {
                for (var n = [], o = 0, s = 0; s < t; s++)
                    if (s % 4) {
                        var a = r[e.charCodeAt(s - 1)] << s % 4 * 2,
                            d = r[e.charCodeAt(s)] >>> 6 - s % 4 * 2,
                            c = a | d;
                        n[o >>> 2] |= c << 24 - o % 4 * 8, o++
                    } return new i.WordArray(n, o)
            }(e, t, n)
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.WordArray = t.Hex = void 0, t.Hex = {
            stringify(e) {
                for (var t = e.words, r = e.sigBytes, i = [], n = 0; n < r; n++) {
                    var o = t[n >>> 2] >>> 24 - n % 4 * 8 & 255;
                    i.push((o >>> 4).toString(16)), i.push((15 & o).toString(16))
                }
                return i.join("")
            }
        };
        t.WordArray = class {
            constructor(e, t) {
                e = this.words = e || [], this.sigBytes = null != t ? t : 4 * e.length
            }
            toString(e) {
                return (e || t.Hex).stringify(this)
            }
            concat(e) {
                var t = this.words,
                    r = e.words,
                    i = this.sigBytes,
                    n = e.sigBytes;
                if (this.clamp(), i % 4)
                    for (var o = 0; o < n; o++) {
                        var s = r[o >>> 2] >>> 24 - o % 4 * 8 & 255;
                        t[i + o >>> 2] |= s << 24 - (i + o) % 4 * 8
                    } else
                        for (var a = 0; a < n; a += 4) t[i + a >>> 2] = r[a >>> 2];
                return this.sigBytes += n, this
            }
            clamp() {
                var e = this.words,
                    t = this.sigBytes;
                e[t >>> 2] &= 4294967295 << 32 - t % 4 * 8, e.length = Math.ceil(t / 4)
            }
        }
    }, function(e, t, r) {
        "use strict";
        var i = r(151),
            n = r(196);
        t.Peer = i, t.WebSocketTransport = n
    }, function(e, t, r) {
        "use strict";
        var i = o(r(53)),
            n = o(r(54));

        function o(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }
        var s = r(45),
            a = r(100),
            d = r(102),
            c = new s("Peer");
        e.exports = class extends a {
            constructor(e) {
                super(c), c.debug("constructor()"), this._closed = !1, this._transport = e, this._connected = !1, this._data = {}, this._sents = new Map, this._notificationId = 0, this._handleTransport()
            }
            get closed() {
                return this._closed
            }
            get connected() {
                return this._connected
            }
            get data() {
                return this._data
            }
            set data(e) {
                throw new Error("cannot override data object")
            }
            close() {
                if (!this._closed) {
                    c.debug("close()"), this._closed = !0, this._connected = !1, this._notificationId = 0, this._transport.close(), this._transport = null;
                    var e = !0,
                        t = !1,
                        r = void 0;
                    try {
                        for (var i, n = this._sents.values()[Symbol.iterator](); !(e = (i = n.next()).done); e = !0) {
                            i.value.close()
                        }
                    } catch (e) {
                        t = !0, r = e
                    } finally {
                        try {
                            !e && n.return && n.return()
                        } finally {
                            if (t) throw r
                        }
                    }
                    this._sents.clear()
                }
            }
            request(e) {
                var t = this,
                    r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;
                return (0, n.default)(i.default.mark((function n() {
                    var o;
                    return i.default.wrap((function(i) {
                        for (;;) switch (i.prev = i.next) {
                            case 0:
                                return o = d.createRequest(e, r), "Heartbeat" != e && t._logger.debug("request() [method:%s, id:%s]", e, o.id), i.next = 4, t._transport.send(o);
                            case 4:
                                return i.abrupt("return", new Promise((function(e, r) {
                                    var i = 15e3 * (15 + .1 * t._sents.size),
                                        n = {
                                            id: o.id,
                                            method: o.method,
                                            resolve: function(r) {
                                                t._sents.delete(o.id) && (t._closed || (clearTimeout(n.timer), e(r)))
                                            },
                                            reject: function(e) {
                                                t._sents.delete(o.id) && (clearTimeout(n.timer), r(e))
                                            },
                                            timer: setTimeout((function() {
                                                t._sents.delete(o.id) && r(new Error("request timeout"))
                                            }), i),
                                            close: function() {
                                                clearTimeout(n.timer), r(new Error("peer closed"))
                                            }
                                        };
                                    t._sents.set(o.id, n)
                                })));
                            case 5:
                            case "end":
                                return i.stop()
                        }
                    }), n, t)
                })))()
            }
            notify(e) {
                var t = this,
                    r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;
                return (0, n.default)(i.default.mark((function n() {
                    var o;
                    return i.default.wrap((function(i) {
                        for (;;) switch (i.prev = i.next) {
                            case 0:
                                return o = d.createNotification(e, r), t._logger.debug("notify() [method:%s]", e), i.next = 4, t._transport.send(o);
                            case 4:
                            case "end":
                                return i.stop()
                        }
                    }), n, t)
                })))()
            }
            _handleTransport() {
                var e = this;
                if (this._transport.closed) return this._closed = !0, void setTimeout((function() {
                    e._closed || (e._connected = !1, e.safeEmit("close"))
                }));
                this._transport.on("open", (function() {
                    e._closed || (c.debug('emit "open"'), e._connected = !0, e.safeEmit("open"))
                })), this._transport.on("disconnected", (function() {
                    e._closed || (c.debug('emit "disconnected"'), e._connected = !1, e.safeEmit("disconnected"))
                })), this._transport.on("failed", (function(t) {
                    e._closed || (c.debug('emit "failed" [currentAttempt:%s]', t), e._connected = !1, e.safeEmit("failed", t))
                })), this._transport.on("close", (function() {
                    e._closed || (e._closed = !0, c.debug('emit "close"'), e._connected = !1, e.safeEmit("close"))
                })), this._transport.on("message", (function(t) {
                    t.request ? e._handleRequest(t) : t.response ? e._handleResponse(t) : t.notification && e._handleNotification(t)
                }))
            }
            _handleRequest(e) {
                var t = this;
                try {
                    this.emit("request", e, (function(r) {
                        var i = d.createSuccessResponse(e, r);
                        t._transport.send(i).catch((function() {}))
                    }), (function(r, i) {
                        r instanceof Error ? (r = 500, i = String(r)) : "number" == typeof r && i instanceof Error && (i = String(i));
                        var n = d.createErrorResponse(e, r, i);
                        t._transport.send(n).catch((function() {}))
                    }))
                } catch (t) {
                    var r = d.createErrorResponse(e, 500, String(t));
                    this._transport.send(r).catch((function() {}))
                }
            }
            _handleResponse(e) {
                var t = this._sents.get(e.id);
                if (t)
                    if (e.ok) t.resolve(e.data);
                    else {
                        var r = new Error(e.errorReason);
                        r.code = e.errorCode, t.reject(r)
                    }
                else c.error("received response does not match any sent request [id:%s]", e.id)
            }
            _handleNotification(e) {
                if (this._handleNotification > e.id) c.warn("忽略重复的通知消息: ", JSON.stringify(e, null, " "));
                else {
                    this._notificationId = e.id;
                    var t = d.createSuccessResponse(e, {});
                    this._transport.send(t).catch((function() {})), this.safeEmit("notification", e)
                }
            }
        }
    }, function(e, t, r) {
        var i = function() {
                return this
            }() || Function("return this")(),
            n = i.regeneratorRuntime && Object.getOwnPropertyNames(i).indexOf("regeneratorRuntime") >= 0,
            o = n && i.regeneratorRuntime;
        if (i.regeneratorRuntime = void 0, e.exports = r(153), n) i.regeneratorRuntime = o;
        else try {
            delete i.regeneratorRuntime
        } catch (e) {
            i.regeneratorRuntime = void 0
        }
    }, function(e, t) {
        ! function(t) {
            "use strict";
            var r = Object.prototype,
                i = r.hasOwnProperty,
                n = "function" == typeof Symbol ? Symbol : {},
                o = n.iterator || "@@iterator",
                s = n.asyncIterator || "@@asyncIterator",
                a = n.toStringTag || "@@toStringTag",
                d = "object" == typeof e,
                c = t.regeneratorRuntime;
            if (c) d && (e.exports = c);
            else {
                (c = t.regeneratorRuntime = d ? e.exports : {}).wrap = m;
                var u = {},
                    l = {};
                l[o] = function() {
                    return this
                };
                var p = Object.getPrototypeOf,
                    f = p && p(p(A([])));
                f && f !== r && i.call(f, o) && (l = f);
                var h = _.prototype = v.prototype = Object.create(l);
                y.prototype = h.constructor = _, _.constructor = y, _[a] = y.displayName = "GeneratorFunction", c.isGeneratorFunction = function(e) {
                    var t = "function" == typeof e && e.constructor;
                    return !!t && (t === y || "GeneratorFunction" === (t.displayName || t.name))
                }, c.mark = function(e) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(e, _) : (e.__proto__ = _, a in e || (e[a] = "GeneratorFunction")), e.prototype = Object.create(h), e
                }, c.awrap = function(e) {
                    return {
                        __await: e
                    }
                }, S(b.prototype), b.prototype[s] = function() {
                    return this
                }, c.AsyncIterator = b, c.async = function(e, t, r, i) {
                    var n = new b(m(e, t, r, i));
                    return c.isGeneratorFunction(t) ? n : n.next().then((function(e) {
                        return e.done ? e.value : n.next()
                    }))
                }, S(h), h[a] = "Generator", h[o] = function() {
                    return this
                }, h.toString = function() {
                    return "[object Generator]"
                }, c.keys = function(e) {
                    var t = [];
                    for (var r in e) t.push(r);
                    return t.reverse(),
                        function r() {
                            for (; t.length;) {
                                var i = t.pop();
                                if (i in e) return r.value = i, r.done = !1, r
                            }
                            return r.done = !0, r
                        }
                }, c.values = A, E.prototype = {
                    constructor: E,
                    reset: function(e) {
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(T), !e)
                            for (var t in this) "t" === t.charAt(0) && i.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                    },
                    stop: function() {
                        this.done = !0;
                        var e = this.tryEntries[0].completion;
                        if ("throw" === e.type) throw e.arg;
                        return this.rval
                    },
                    dispatchException: function(e) {
                        if (this.done) throw e;
                        var t = this;

                        function r(r, i) {
                            return s.type = "throw", s.arg = e, t.next = r, i && (t.method = "next", t.arg = void 0), !!i
                        }
                        for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                            var o = this.tryEntries[n],
                                s = o.completion;
                            if ("root" === o.tryLoc) return r("end");
                            if (o.tryLoc <= this.prev) {
                                var a = i.call(o, "catchLoc"),
                                    d = i.call(o, "finallyLoc");
                                if (a && d) {
                                    if (this.prev < o.catchLoc) return r(o.catchLoc, !0);
                                    if (this.prev < o.finallyLoc) return r(o.finallyLoc)
                                } else if (a) {
                                    if (this.prev < o.catchLoc) return r(o.catchLoc, !0)
                                } else {
                                    if (!d) throw new Error("try statement without catch or finally");
                                    if (this.prev < o.finallyLoc) return r(o.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(e, t) {
                        for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                            var n = this.tryEntries[r];
                            if (n.tryLoc <= this.prev && i.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
                                var o = n;
                                break
                            }
                        }
                        o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
                        var s = o ? o.completion : {};
                        return s.type = e, s.arg = t, o ? (this.method = "next", this.next = o.finallyLoc, u) : this.complete(s)
                    },
                    complete: function(e, t) {
                        if ("throw" === e.type) throw e.arg;
                        return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), u
                    },
                    finish: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var r = this.tryEntries[t];
                            if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), T(r), u
                        }
                    },
                    catch: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var r = this.tryEntries[t];
                            if (r.tryLoc === e) {
                                var i = r.completion;
                                if ("throw" === i.type) {
                                    var n = i.arg;
                                    T(r)
                                }
                                return n
                            }
                        }
                        throw new Error("illegal catch attempt")
                    },
                    delegateYield: function(e, t, r) {
                        return this.delegate = {
                            iterator: A(e),
                            resultName: t,
                            nextLoc: r
                        }, "next" === this.method && (this.arg = void 0), u
                    }
                }
            }

            function m(e, t, r, i) {
                var n = t && t.prototype instanceof v ? t : v,
                    o = Object.create(n.prototype),
                    s = new E(i || []);
                return o._invoke = function(e, t, r) {
                    var i = "suspendedStart";
                    return function(n, o) {
                        if ("executing" === i) throw new Error("Generator is already running");
                        if ("completed" === i) {
                            if ("throw" === n) throw o;
                            return O()
                        }
                        for (r.method = n, r.arg = o;;) {
                            var s = r.delegate;
                            if (s) {
                                var a = R(s, r);
                                if (a) {
                                    if (a === u) continue;
                                    return a
                                }
                            }
                            if ("next" === r.method) r.sent = r._sent = r.arg;
                            else if ("throw" === r.method) {
                                if ("suspendedStart" === i) throw i = "completed", r.arg;
                                r.dispatchException(r.arg)
                            } else "return" === r.method && r.abrupt("return", r.arg);
                            i = "executing";
                            var d = g(e, t, r);
                            if ("normal" === d.type) {
                                if (i = r.done ? "completed" : "suspendedYield", d.arg === u) continue;
                                return {
                                    value: d.arg,
                                    done: r.done
                                }
                            }
                            "throw" === d.type && (i = "completed", r.method = "throw", r.arg = d.arg)
                        }
                    }
                }(e, r, s), o
            }

            function g(e, t, r) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, r)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }

            function v() {}

            function y() {}

            function _() {}

            function S(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    e[t] = function(e) {
                        return this._invoke(t, e)
                    }
                }))
            }

            function b(e) {
                var t;
                this._invoke = function(r, n) {
                    function o() {
                        return new Promise((function(t, o) {
                            ! function t(r, n, o, s) {
                                var a = g(e[r], e, n);
                                if ("throw" !== a.type) {
                                    var d = a.arg,
                                        c = d.value;
                                    return c && "object" == typeof c && i.call(c, "__await") ? Promise.resolve(c.__await).then((function(e) {
                                        t("next", e, o, s)
                                    }), (function(e) {
                                        t("throw", e, o, s)
                                    })) : Promise.resolve(c).then((function(e) {
                                        d.value = e, o(d)
                                    }), s)
                                }
                                s(a.arg)
                            }(r, n, t, o)
                        }))
                    }
                    return t = t ? t.then(o, o) : o()
                }
            }

            function R(e, t) {
                var r = e.iterator[t.method];
                if (void 0 === r) {
                    if (t.delegate = null, "throw" === t.method) {
                        if (e.iterator.return && (t.method = "return", t.arg = void 0, R(e, t), "throw" === t.method)) return u;
                        t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method")
                    }
                    return u
                }
                var i = g(r, e.iterator, t.arg);
                if ("throw" === i.type) return t.method = "throw", t.arg = i.arg, t.delegate = null, u;
                var n = i.arg;
                return n ? n.done ? (t[e.resultName] = n.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, u) : n : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, u)
            }

            function w(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function T(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function E(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(w, this), this.reset(!0)
            }

            function A(e) {
                if (e) {
                    var t = e[o];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            n = function t() {
                                for (; ++r < e.length;)
                                    if (i.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return n.next = n
                    }
                }
                return {
                    next: O
                }
            }

            function O() {
                return {
                    value: void 0,
                    done: !0
                }
            }
        }(function() {
            return this
        }() || Function("return this")())
    }, function(e, t, r) {
        e.exports = {
            default: r(155),
            __esModule: !0
        }
    }, function(e, t, r) {
        r(82), r(83), r(92), r(166), r(178), r(179), e.exports = r(7).Promise
    }, function(e, t, r) {
        var i = r(55),
            n = r(56);
        e.exports = function(e) {
            return function(t, r) {
                var o, s, a = String(n(t)),
                    d = i(r),
                    c = a.length;
                return d < 0 || d >= c ? e ? "" : void 0 : (o = a.charCodeAt(d)) < 55296 || o > 56319 || d + 1 === c || (s = a.charCodeAt(d + 1)) < 56320 || s > 57343 ? e ? a.charAt(d) : o : e ? a.slice(d, d + 2) : s - 56320 + (o - 55296 << 10) + 65536
            }
        }
    }, function(e, t, r) {
        "use strict";
        var i = r(87),
            n = r(42),
            o = r(44),
            s = {};
        r(14)(s, r(5)("iterator"), (function() {
            return this
        })), e.exports = function(e, t, r) {
            e.prototype = i(s, {
                next: n(1, r)
            }), o(e, t + " Iterator")
        }
    }, function(e, t, r) {
        var i = r(15),
            n = r(9),
            o = r(59);
        e.exports = r(17) ? Object.defineProperties : function(e, t) {
            n(e);
            for (var r, s = o(t), a = s.length, d = 0; a > d;) i.f(e, r = s[d++], t[r]);
            return e
        }
    }, function(e, t, r) {
        var i = r(31);
        e.exports = Object("z").propertyIsEnumerable(0) ? Object : function(e) {
            return "String" == i(e) ? e.split("") : Object(e)
        }
    }, function(e, t, r) {
        var i = r(21),
            n = r(89),
            o = r(161);
        e.exports = function(e) {
            return function(t, r, s) {
                var a, d = i(t),
                    c = n(d.length),
                    u = o(s, c);
                if (e && r != r) {
                    for (; c > u;)
                        if ((a = d[u++]) != a) return !0
                } else
                    for (; c > u; u++)
                        if ((e || u in d) && d[u] === r) return e || u || 0;
                return !e && -1
            }
        }
    }, function(e, t, r) {
        var i = r(55),
            n = Math.max,
            o = Math.min;
        e.exports = function(e, t) {
            return (e = i(e)) < 0 ? n(e + t, 0) : o(e, t)
        }
    }, function(e, t, r) {
        var i = r(18),
            n = r(91),
            o = r(60)("IE_PROTO"),
            s = Object.prototype;
        e.exports = Object.getPrototypeOf || function(e) {
            return e = n(e), i(e, o) ? e[o] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? s : null
        }
    }, function(e, t, r) {
        "use strict";
        var i = r(164),
            n = r(165),
            o = r(30),
            s = r(21);
        e.exports = r(84)(Array, "Array", (function(e, t) {
            this._t = s(e), this._i = 0, this._k = t
        }), (function() {
            var e = this._t,
                t = this._k,
                r = this._i++;
            return !e || r >= e.length ? (this._t = void 0, n(1)) : n(0, "keys" == t ? r : "values" == t ? e[r] : [r, e[r]])
        }), "values"), o.Arguments = o.Array, i("keys"), i("values"), i("entries")
    }, function(e, t) {
        e.exports = function() {}
    }, function(e, t) {
        e.exports = function(e, t) {
            return {
                value: t,
                done: !!e
            }
        }
    }, function(e, t, r) {
        "use strict";
        var i, n, o, s, a = r(28),
            d = r(4),
            c = r(39),
            u = r(93),
            l = r(29),
            p = r(16),
            f = r(40),
            h = r(167),
            m = r(168),
            g = r(94),
            v = r(95).set,
            y = r(173)(),
            _ = r(63),
            S = r(96),
            b = r(174),
            R = r(97),
            w = d.TypeError,
            T = d.process,
            E = T && T.versions,
            A = E && E.v8 || "",
            O = d.Promise,
            I = "process" == u(T),
            x = function() {},
            P = n = _.f,
            k = !! function() {
                try {
                    var e = O.resolve(1),
                        t = (e.constructor = {})[r(5)("species")] = function(e) {
                            e(x, x)
                        };
                    return (I || "function" == typeof PromiseRejectionEvent) && e.then(x) instanceof t && 0 !== A.indexOf("6.6") && -1 === b.indexOf("Chrome/66")
                } catch (e) {}
            }(),
            C = function(e) {
                var t;
                return !(!p(e) || "function" != typeof(t = e.then)) && t
            },
            D = function(e, t) {
                if (!e._n) {
                    e._n = !0;
                    var r = e._c;
                    y((function() {
                        for (var i = e._v, n = 1 == e._s, o = 0, s = function(t) {
                                var r, o, s, a = n ? t.ok : t.fail,
                                    d = t.resolve,
                                    c = t.reject,
                                    u = t.domain;
                                try {
                                    a ? (n || (2 == e._h && L(e), e._h = 1), !0 === a ? r = i : (u && u.enter(), r = a(i), u && (u.exit(), s = !0)), r === t.promise ? c(w("Promise-chain cycle")) : (o = C(r)) ? o.call(r, d, c) : d(r)) : c(i)
                                } catch (e) {
                                    u && !s && u.exit(), c(e)
                                }
                            }; r.length > o;) s(r[o++]);
                        e._c = [], e._n = !1, t && !e._h && M(e)
                    }))
                }
            },
            M = function(e) {
                v.call(d, (function() {
                    var t, r, i, n = e._v,
                        o = N(e);
                    if (o && (t = S((function() {
                            I ? T.emit("unhandledRejection", n, e) : (r = d.onunhandledrejection) ? r({
                                promise: e,
                                reason: n
                            }) : (i = d.console) && i.error && i.error("Unhandled promise rejection", n)
                        })), e._h = I || N(e) ? 2 : 1), e._a = void 0, o && t.e) throw t.v
                }))
            },
            N = function(e) {
                return 1 !== e._h && 0 === (e._a || e._c).length
            },
            L = function(e) {
                v.call(d, (function() {
                    var t;
                    I ? T.emit("rejectionHandled", e) : (t = d.onrejectionhandled) && t({
                        promise: e,
                        reason: e._v
                    })
                }))
            },
            j = function(e) {
                var t = this;
                t._d || (t._d = !0, (t = t._w || t)._v = e, t._s = 2, t._a || (t._a = t._c.slice()), D(t, !0))
            },
            F = function(e) {
                var t, r = this;
                if (!r._d) {
                    r._d = !0, r = r._w || r;
                    try {
                        if (r === e) throw w("Promise can't be resolved itself");
                        (t = C(e)) ? y((function() {
                            var i = {
                                _w: r,
                                _d: !1
                            };
                            try {
                                t.call(e, c(F, i, 1), c(j, i, 1))
                            } catch (e) {
                                j.call(i, e)
                            }
                        })): (r._v = e, r._s = 1, D(r, !1))
                    } catch (e) {
                        j.call({
                            _w: r,
                            _d: !1
                        }, e)
                    }
                }
            };
        k || (O = function(e) {
            h(this, O, "Promise", "_h"), f(e), i.call(this);
            try {
                e(c(F, this, 1), c(j, this, 1))
            } catch (e) {
                j.call(this, e)
            }
        }, (i = function(e) {
            this._c = [], this._a = void 0, this._s = 0, this._d = !1, this._v = void 0, this._h = 0, this._n = !1
        }).prototype = r(175)(O.prototype, {
            then: function(e, t) {
                var r = P(g(this, O));
                return r.ok = "function" != typeof e || e, r.fail = "function" == typeof t && t, r.domain = I ? T.domain : void 0, this._c.push(r), this._a && this._a.push(r), this._s && D(this, !1), r.promise
            },
            catch: function(e) {
                return this.then(void 0, e)
            }
        }), o = function() {
            var e = new i;
            this.promise = e, this.resolve = c(F, e, 1), this.reject = c(j, e, 1)
        }, _.f = P = function(e) {
            return e === O || e === s ? new o(e) : n(e)
        }), l(l.G + l.W + l.F * !k, {
            Promise: O
        }), r(44)(O, "Promise"), r(176)("Promise"), s = r(7).Promise, l(l.S + l.F * !k, "Promise", {
            reject: function(e) {
                var t = P(this);
                return (0, t.reject)(e), t.promise
            }
        }), l(l.S + l.F * (a || !k), "Promise", {
            resolve: function(e) {
                return R(a && this === s ? O : this, e)
            }
        }), l(l.S + l.F * !(k && r(177)((function(e) {
            O.all(e).catch(x)
        }))), "Promise", {
            all: function(e) {
                var t = this,
                    r = P(t),
                    i = r.resolve,
                    n = r.reject,
                    o = S((function() {
                        var r = [],
                            o = 0,
                            s = 1;
                        m(e, !1, (function(e) {
                            var a = o++,
                                d = !1;
                            r.push(void 0), s++, t.resolve(e).then((function(e) {
                                d || (d = !0, r[a] = e, --s || i(r))
                            }), n)
                        })), --s || i(r)
                    }));
                return o.e && n(o.v), r.promise
            },
            race: function(e) {
                var t = this,
                    r = P(t),
                    i = r.reject,
                    n = S((function() {
                        m(e, !1, (function(e) {
                            t.resolve(e).then(r.resolve, i)
                        }))
                    }));
                return n.e && i(n.v), r.promise
            }
        })
    }, function(e, t) {
        e.exports = function(e, t, r, i) {
            if (!(e instanceof t) || void 0 !== i && i in e) throw TypeError(r + ": incorrect invocation!");
            return e
        }
    }, function(e, t, r) {
        var i = r(39),
            n = r(169),
            o = r(170),
            s = r(9),
            a = r(89),
            d = r(171),
            c = {},
            u = {};
        (t = e.exports = function(e, t, r, l, p) {
            var f, h, m, g, v = p ? function() {
                    return e
                } : d(e),
                y = i(r, l, t ? 2 : 1),
                _ = 0;
            if ("function" != typeof v) throw TypeError(e + " is not iterable!");
            if (o(v)) {
                for (f = a(e.length); f > _; _++)
                    if ((g = t ? y(s(h = e[_])[0], h[1]) : y(e[_])) === c || g === u) return g
            } else
                for (m = v.call(e); !(h = m.next()).done;)
                    if ((g = n(m, y, h.value, t)) === c || g === u) return g
        }).BREAK = c, t.RETURN = u
    }, function(e, t, r) {
        var i = r(9);
        e.exports = function(e, t, r, n) {
            try {
                return n ? t(i(r)[0], r[1]) : t(r)
            } catch (t) {
                var o = e.return;
                throw void 0 !== o && i(o.call(e)), t
            }
        }
    }, function(e, t, r) {
        var i = r(30),
            n = r(5)("iterator"),
            o = Array.prototype;
        e.exports = function(e) {
            return void 0 !== e && (i.Array === e || o[n] === e)
        }
    }, function(e, t, r) {
        var i = r(93),
            n = r(5)("iterator"),
            o = r(30);
        e.exports = r(7).getIteratorMethod = function(e) {
            if (null != e) return e[n] || e["@@iterator"] || o[i(e)]
        }
    }, function(e, t) {
        e.exports = function(e, t, r) {
            var i = void 0 === r;
            switch (t.length) {
                case 0:
                    return i ? e() : e.call(r);
                case 1:
                    return i ? e(t[0]) : e.call(r, t[0]);
                case 2:
                    return i ? e(t[0], t[1]) : e.call(r, t[0], t[1]);
                case 3:
                    return i ? e(t[0], t[1], t[2]) : e.call(r, t[0], t[1], t[2]);
                case 4:
                    return i ? e(t[0], t[1], t[2], t[3]) : e.call(r, t[0], t[1], t[2], t[3])
            }
            return e.apply(r, t)
        }
    }, function(e, t, r) {
        var i = r(4),
            n = r(95).set,
            o = i.MutationObserver || i.WebKitMutationObserver,
            s = i.process,
            a = i.Promise,
            d = "process" == r(31)(s);
        e.exports = function() {
            var e, t, r, c = function() {
                var i, n;
                for (d && (i = s.domain) && i.exit(); e;) {
                    n = e.fn, e = e.next;
                    try {
                        n()
                    } catch (i) {
                        throw e ? r() : t = void 0, i
                    }
                }
                t = void 0, i && i.enter()
            };
            if (d) r = function() {
                s.nextTick(c)
            };
            else if (!o || i.navigator && i.navigator.standalone)
                if (a && a.resolve) {
                    var u = a.resolve(void 0);
                    r = function() {
                        u.then(c)
                    }
                } else r = function() {
                    n.call(i, c)
                };
            else {
                var l = !0,
                    p = document.createTextNode("");
                new o(c).observe(p, {
                    characterData: !0
                }), r = function() {
                    p.data = l = !l
                }
            }
            return function(i) {
                var n = {
                    fn: i,
                    next: void 0
                };
                t && (t.next = n), e || (e = n, r()), t = n
            }
        }
    }, function(e, t, r) {
        var i = r(4).navigator;
        e.exports = i && i.userAgent || ""
    }, function(e, t, r) {
        var i = r(14);
        e.exports = function(e, t, r) {
            for (var n in t) r && e[n] ? e[n] = t[n] : i(e, n, t[n]);
            return e
        }
    }, function(e, t, r) {
        "use strict";
        var i = r(4),
            n = r(7),
            o = r(15),
            s = r(17),
            a = r(5)("species");
        e.exports = function(e) {
            var t = "function" == typeof n[e] ? n[e] : i[e];
            s && t && !t[a] && o.f(t, a, {
                configurable: !0,
                get: function() {
                    return this
                }
            })
        }
    }, function(e, t, r) {
        var i = r(5)("iterator"),
            n = !1;
        try {
            var o = [7][i]();
            o.return = function() {
                n = !0
            }, Array.from(o, (function() {
                throw 2
            }))
        } catch (e) {}
        e.exports = function(e, t) {
            if (!t && !n) return !1;
            var r = !1;
            try {
                var o = [7],
                    s = o[i]();
                s.next = function() {
                    return {
                        done: r = !0
                    }
                }, o[i] = function() {
                    return s
                }, e(o)
            } catch (e) {}
            return r
        }
    }, function(e, t, r) {
        "use strict";
        var i = r(29),
            n = r(7),
            o = r(4),
            s = r(94),
            a = r(97);
        i(i.P + i.R, "Promise", {
            finally: function(e) {
                var t = s(this, n.Promise || o.Promise),
                    r = "function" == typeof e;
                return this.then(r ? function(r) {
                    return a(t, e()).then((function() {
                        return r
                    }))
                } : e, r ? function(r) {
                    return a(t, e()).then((function() {
                        throw r
                    }))
                } : e)
            }
        })
    }, function(e, t, r) {
        "use strict";
        var i = r(29),
            n = r(63),
            o = r(96);
        i(i.S, "Promise", {
            try: function(e) {
                var t = n.f(this),
                    r = o(e);
                return (r.e ? t.reject : t.resolve)(r.v), t.promise
            }
        })
    }, function(e, t, r) {
        e.exports = function(e) {
            function t(e) {
                let r, n = null;

                function o(...e) {
                    if (!o.enabled) return;
                    const i = o,
                        n = Number(new Date),
                        s = n - (r || n);
                    i.diff = s, i.prev = r, i.curr = n, r = n, e[0] = t.coerce(e[0]), "string" != typeof e[0] && e.unshift("%O");
                    let a = 0;
                    e[0] = e[0].replace(/%([a-zA-Z%])/g, (r, n) => {
                        if ("%%" === r) return "%";
                        a++;
                        const o = t.formatters[n];
                        if ("function" == typeof o) {
                            const t = e[a];
                            r = o.call(i, t), e.splice(a, 1), a--
                        }
                        return r
                    }), t.formatArgs.call(i, e);
                    (i.log || t.log).apply(i, e)
                }
                return o.namespace = e, o.useColors = t.useColors(), o.color = t.selectColor(e), o.extend = i, o.destroy = t.destroy, Object.defineProperty(o, "enabled", {
                    enumerable: !0,
                    configurable: !1,
                    get: () => null === n ? t.enabled(e) : n,
                    set: e => {
                        n = e
                    }
                }), "function" == typeof t.init && t.init(o), o
            }

            function i(e, r) {
                const i = t(this.namespace + (void 0 === r ? ":" : r) + e);
                return i.log = this.log, i
            }

            function n(e) {
                return e.toString().substring(2, e.toString().length - 2).replace(/\.\*\?$/, "*")
            }
            return t.debug = t, t.default = t, t.coerce = function(e) {
                if (e instanceof Error) return e.stack || e.message;
                return e
            }, t.disable = function() {
                const e = [...t.names.map(n), ...t.skips.map(n).map(e => "-" + e)].join(",");
                return t.enable(""), e
            }, t.enable = function(e) {
                let r;
                t.save(e), t.names = [], t.skips = [];
                const i = ("string" == typeof e ? e : "").split(/[\s,]+/),
                    n = i.length;
                for (r = 0; r < n; r++) i[r] && ("-" === (e = i[r].replace(/\*/g, ".*?"))[0] ? t.skips.push(new RegExp("^" + e.substr(1) + "$")) : t.names.push(new RegExp("^" + e + "$")))
            }, t.enabled = function(e) {
                if ("*" === e[e.length - 1]) return !0;
                let r, i;
                for (r = 0, i = t.skips.length; r < i; r++)
                    if (t.skips[r].test(e)) return !1;
                for (r = 0, i = t.names.length; r < i; r++)
                    if (t.names[r].test(e)) return !0;
                return !1
            }, t.humanize = r(181), t.destroy = function() {
                console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")
            }, Object.keys(e).forEach(r => {
                t[r] = e[r]
            }), t.names = [], t.skips = [], t.formatters = {}, t.selectColor = function(e) {
                let r = 0;
                for (let t = 0; t < e.length; t++) r = (r << 5) - r + e.charCodeAt(t), r |= 0;
                return t.colors[Math.abs(r) % t.colors.length]
            }, t.enable(t.load()), t
        }
    }, function(e, t) {
        var r = 1e3,
            i = 6e4,
            n = 60 * i,
            o = 24 * n;

        function s(e, t, r, i) {
            var n = t >= 1.5 * r;
            return Math.round(e / r) + " " + i + (n ? "s" : "")
        }
        e.exports = function(e, t) {
            t = t || {};
            var a = typeof e;
            if ("string" === a && e.length > 0) return function(e) {
                if ((e = String(e)).length > 100) return;
                var t = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);
                if (!t) return;
                var s = parseFloat(t[1]);
                switch ((t[2] || "ms").toLowerCase()) {
                    case "years":
                    case "year":
                    case "yrs":
                    case "yr":
                    case "y":
                        return 315576e5 * s;
                    case "weeks":
                    case "week":
                    case "w":
                        return 6048e5 * s;
                    case "days":
                    case "day":
                    case "d":
                        return s * o;
                    case "hours":
                    case "hour":
                    case "hrs":
                    case "hr":
                    case "h":
                        return s * n;
                    case "minutes":
                    case "minute":
                    case "mins":
                    case "min":
                    case "m":
                        return s * i;
                    case "seconds":
                    case "second":
                    case "secs":
                    case "sec":
                    case "s":
                        return s * r;
                    case "milliseconds":
                    case "millisecond":
                    case "msecs":
                    case "msec":
                    case "ms":
                        return s;
                    default:
                        return
                }
            }(e);
            if ("number" === a && isFinite(e)) return t.long ? function(e) {
                var t = Math.abs(e);
                if (t >= o) return s(e, t, o, "day");
                if (t >= n) return s(e, t, n, "hour");
                if (t >= i) return s(e, t, i, "minute");
                if (t >= r) return s(e, t, r, "second");
                return e + " ms"
            }(e) : function(e) {
                var t = Math.abs(e);
                if (t >= o) return Math.round(e / o) + "d";
                if (t >= n) return Math.round(e / n) + "h";
                if (t >= i) return Math.round(e / i) + "m";
                if (t >= r) return Math.round(e / r) + "s";
                return e + "ms"
            }(e);
            throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e))
        }
    }, function(e, t, r) {
        "use strict";
        t.__esModule = !0;
        var i = s(r(183)),
            n = s(r(185)),
            o = "function" == typeof n.default && "symbol" == typeof i.default ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof n.default && e.constructor === n.default && e !== n.default.prototype ? "symbol" : typeof e
            };

        function s(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }
        t.default = "function" == typeof n.default && "symbol" === o(i.default) ? function(e) {
            return void 0 === e ? "undefined" : o(e)
        } : function(e) {
            return e && "function" == typeof n.default && e.constructor === n.default && e !== n.default.prototype ? "symbol" : void 0 === e ? "undefined" : o(e)
        }
    }, function(e, t, r) {
        e.exports = {
            default: r(184),
            __esModule: !0
        }
    }, function(e, t, r) {
        r(83), r(92), e.exports = r(64).f("iterator")
    }, function(e, t, r) {
        e.exports = {
            default: r(186),
            __esModule: !0
        }
    }, function(e, t, r) {
        r(187), r(82), r(193), r(194), e.exports = r(7).Symbol
    }, function(e, t, r) {
        "use strict";
        var i = r(4),
            n = r(18),
            o = r(17),
            s = r(29),
            a = r(86),
            d = r(188).KEY,
            c = r(41),
            u = r(61),
            l = r(44),
            p = r(43),
            f = r(5),
            h = r(64),
            m = r(65),
            g = r(189),
            v = r(190),
            y = r(9),
            _ = r(16),
            S = r(91),
            b = r(21),
            R = r(58),
            w = r(42),
            T = r(87),
            E = r(191),
            A = r(192),
            O = r(103),
            I = r(15),
            x = r(59),
            P = A.f,
            k = I.f,
            C = E.f,
            D = i.Symbol,
            M = i.JSON,
            N = M && M.stringify,
            L = f("_hidden"),
            j = f("toPrimitive"),
            F = {}.propertyIsEnumerable,
            V = u("symbol-registry"),
            U = u("symbols"),
            B = u("op-symbols"),
            H = Object.prototype,
            W = "function" == typeof D && !!O.f,
            $ = i.QObject,
            z = !$ || !$.prototype || !$.prototype.findChild,
            q = o && c((function() {
                return 7 != T(k({}, "a", {
                    get: function() {
                        return k(this, "a", {
                            value: 7
                        }).a
                    }
                })).a
            })) ? function(e, t, r) {
                var i = P(H, t);
                i && delete H[t], k(e, t, r), i && e !== H && k(H, t, i)
            } : k,
            G = function(e) {
                var t = U[e] = T(D.prototype);
                return t._k = e, t
            },
            J = W && "symbol" == typeof D.iterator ? function(e) {
                return "symbol" == typeof e
            } : function(e) {
                return e instanceof D
            },
            Q = function(e, t, r) {
                return e === H && Q(B, t, r), y(e), t = R(t, !0), y(r), n(U, t) ? (r.enumerable ? (n(e, L) && e[L][t] && (e[L][t] = !1), r = T(r, {
                    enumerable: w(0, !1)
                })) : (n(e, L) || k(e, L, w(1, {})), e[L][t] = !0), q(e, t, r)) : k(e, t, r)
            },
            K = function(e, t) {
                y(e);
                for (var r, i = g(t = b(t)), n = 0, o = i.length; o > n;) Q(e, r = i[n++], t[r]);
                return e
            },
            Y = function(e) {
                var t = F.call(this, e = R(e, !0));
                return !(this === H && n(U, e) && !n(B, e)) && (!(t || !n(this, e) || !n(U, e) || n(this, L) && this[L][e]) || t)
            },
            X = function(e, t) {
                if (e = b(e), t = R(t, !0), e !== H || !n(U, t) || n(B, t)) {
                    var r = P(e, t);
                    return !r || !n(U, t) || n(e, L) && e[L][t] || (r.enumerable = !0), r
                }
            },
            Z = function(e) {
                for (var t, r = C(b(e)), i = [], o = 0; r.length > o;) n(U, t = r[o++]) || t == L || t == d || i.push(t);
                return i
            },
            ee = function(e) {
                for (var t, r = e === H, i = C(r ? B : b(e)), o = [], s = 0; i.length > s;) !n(U, t = i[s++]) || r && !n(H, t) || o.push(U[t]);
                return o
            };
        W || (a((D = function() {
            if (this instanceof D) throw TypeError("Symbol is not a constructor!");
            var e = p(arguments.length > 0 ? arguments[0] : void 0),
                t = function(r) {
                    this === H && t.call(B, r), n(this, L) && n(this[L], e) && (this[L][e] = !1), q(this, e, w(1, r))
                };
            return o && z && q(H, e, {
                configurable: !0,
                set: t
            }), G(e)
        }).prototype, "toString", (function() {
            return this._k
        })), A.f = X, I.f = Q, r(104).f = E.f = Z, r(66).f = Y, O.f = ee, o && !r(28) && a(H, "propertyIsEnumerable", Y, !0), h.f = function(e) {
            return G(f(e))
        }), s(s.G + s.W + s.F * !W, {
            Symbol: D
        });
        for (var te = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), re = 0; te.length > re;) f(te[re++]);
        for (var ie = x(f.store), ne = 0; ie.length > ne;) m(ie[ne++]);
        s(s.S + s.F * !W, "Symbol", {
            for: function(e) {
                return n(V, e += "") ? V[e] : V[e] = D(e)
            },
            keyFor: function(e) {
                if (!J(e)) throw TypeError(e + " is not a symbol!");
                for (var t in V)
                    if (V[t] === e) return t
            },
            useSetter: function() {
                z = !0
            },
            useSimple: function() {
                z = !1
            }
        }), s(s.S + s.F * !W, "Object", {
            create: function(e, t) {
                return void 0 === t ? T(e) : K(T(e), t)
            },
            defineProperty: Q,
            defineProperties: K,
            getOwnPropertyDescriptor: X,
            getOwnPropertyNames: Z,
            getOwnPropertySymbols: ee
        });
        var oe = c((function() {
            O.f(1)
        }));
        s(s.S + s.F * oe, "Object", {
            getOwnPropertySymbols: function(e) {
                return O.f(S(e))
            }
        }), M && s(s.S + s.F * (!W || c((function() {
            var e = D();
            return "[null]" != N([e]) || "{}" != N({
                a: e
            }) || "{}" != N(Object(e))
        }))), "JSON", {
            stringify: function(e) {
                for (var t, r, i = [e], n = 1; arguments.length > n;) i.push(arguments[n++]);
                if (r = t = i[1], (_(t) || void 0 !== e) && !J(e)) return v(t) || (t = function(e, t) {
                    if ("function" == typeof r && (t = r.call(this, e, t)), !J(t)) return t
                }), i[1] = t, N.apply(M, i)
            }
        }), D.prototype[j] || r(14)(D.prototype, j, D.prototype.valueOf), l(D, "Symbol"), l(Math, "Math", !0), l(i.JSON, "JSON", !0)
    }, function(e, t, r) {
        var i = r(43)("meta"),
            n = r(16),
            o = r(18),
            s = r(15).f,
            a = 0,
            d = Object.isExtensible || function() {
                return !0
            },
            c = !r(41)((function() {
                return d(Object.preventExtensions({}))
            })),
            u = function(e) {
                s(e, i, {
                    value: {
                        i: "O" + ++a,
                        w: {}
                    }
                })
            },
            l = e.exports = {
                KEY: i,
                NEED: !1,
                fastKey: function(e, t) {
                    if (!n(e)) return "symbol" == typeof e ? e : ("string" == typeof e ? "S" : "P") + e;
                    if (!o(e, i)) {
                        if (!d(e)) return "F";
                        if (!t) return "E";
                        u(e)
                    }
                    return e[i].i
                },
                getWeak: function(e, t) {
                    if (!o(e, i)) {
                        if (!d(e)) return !0;
                        if (!t) return !1;
                        u(e)
                    }
                    return e[i].w
                },
                onFreeze: function(e) {
                    return c && l.NEED && d(e) && !o(e, i) && u(e), e
                }
            }
    }, function(e, t, r) {
        var i = r(59),
            n = r(103),
            o = r(66);
        e.exports = function(e) {
            var t = i(e),
                r = n.f;
            if (r)
                for (var s, a = r(e), d = o.f, c = 0; a.length > c;) d.call(e, s = a[c++]) && t.push(s);
            return t
        }
    }, function(e, t, r) {
        var i = r(31);
        e.exports = Array.isArray || function(e) {
            return "Array" == i(e)
        }
    }, function(e, t, r) {
        var i = r(21),
            n = r(104).f,
            o = {}.toString,
            s = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
        e.exports.f = function(e) {
            return s && "[object Window]" == o.call(e) ? function(e) {
                try {
                    return n(e)
                } catch (e) {
                    return s.slice()
                }
            }(e) : n(i(e))
        }
    }, function(e, t, r) {
        var i = r(66),
            n = r(42),
            o = r(21),
            s = r(58),
            a = r(18),
            d = r(85),
            c = Object.getOwnPropertyDescriptor;
        t.f = r(17) ? c : function(e, t) {
            if (e = o(e), t = s(t, !0), d) try {
                return c(e, t)
            } catch (e) {}
            if (a(e, t)) return n(!i.f.call(e, t), e[t])
        }
    }, function(e, t, r) {
        r(65)("asyncIterator")
    }, function(e, t, r) {
        r(65)("observable")
    }, function(e, t, r) {
        "use strict";
        t.generateRandomNumber = function() {
            return Math.round(1e7 * Math.random())
        }
    }, function(e, t, r) {
        "use strict";
        var i = o(r(53)),
            n = o(r(54));

        function o(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }
        var s = r(197),
            a = r(45),
            d = r(100),
            c = r(102),
            u = r(48),
            l = {
                retries: 10,
                factor: 2,
                minTimeout: 1e3,
                maxTimeout: 8e3
            },
            p = new a("WebSocketTransport");
        e.exports = class extends d {
            constructor(e, t) {
                super(p), p.debug("constructor() [url:%s, options:%o]", e, t), this._closed = !1, this._url = e, this._options = t || {}, this._ws = null, this._runWebSocket()
            }
            get closed() {
                return this._closed
            }
            close() {
                if (!this._closed) {
                    p.debug("close()"), this._closed = !0, this.safeEmit("close");
                    try {
                        this._ws.onopen = null, this._ws.onclose = null, this._ws.onerror = null, this._ws.onmessage = null, this._ws.close()
                    } catch (e) {
                        p.error("close() | error closing the WebSocket: %o", e)
                    }
                }
            }
            send(e) {
                var t = this;
                return (0, n.default)(i.default.mark((function r() {
                    return i.default.wrap((function(r) {
                        for (;;) switch (r.prev = r.next) {
                            case 0:
                                if (!t._closed) {
                                    r.next = 2;
                                    break
                                }
                                throw new Error("transport closed");
                            case 2:
                                r.prev = 2, t._ws.send(u.stringify(e)), r.next = 10;
                                break;
                            case 6:
                                throw r.prev = 6, r.t0 = r.catch(2), p.warn("send() failed:%o", r.t0), r.t0;
                            case 10:
                            case "end":
                                return r.stop()
                        }
                    }), r, t, [
                        [2, 6]
                    ])
                })))()
            }
            _runWebSocket() {
                var e = this,
                    t = s.operation(this._options.retry || l),
                    r = !1;
                t.attempt((function(i) {
                    e._closed ? t.stop() : (p.debug("_runWebSocket() [currentAttempt:%s]", i), e._ws = new WebSocket(e._url, ["protoo"]), e._ws.onopen = function() {
                        e._closed || (r = !0, e.safeEmit("open"))
                    }, e._ws.onclose = function(n) {
                        if (!e._closed) {
                            if (p.warn('WebSocket "close" event [wasClean:%s, code:%s, reason:"%s"]', n.wasClean, n.code, n.reason), 4e3 !== n.code) {
                                if (r) {
                                    if (t.stop(), e.safeEmit("disconnected"), e._closed) return;
                                    return void e._runWebSocket()
                                }
                                if (e.safeEmit("failed", i), e._closed) return;
                                if (t.retry(!0)) return
                            }
                            e._closed = !0, e.safeEmit("close")
                        }
                    }, e._ws.onerror = function() {
                        e._closed || p.error('WebSocket "error" event')
                    }, e._ws.onmessage = function(t) {
                        if (!e._closed) {
                            var r = c.parse(t.data);
                            r && (0 !== e.listenerCount("message") ? e.safeEmit("message", r) : p.error('no listeners for WebSocket "message" event, ignoring received message'))
                        }
                    })
                }))
            }
        }
    }, function(e, t, r) {
        e.exports = r(198)
    }, function(e, t, r) {
        var i = r(199);
        t.operation = function(e) {
            var r = t.timeouts(e);
            return new i(r, {
                forever: e && e.forever,
                unref: e && e.unref,
                maxRetryTime: e && e.maxRetryTime
            })
        }, t.timeouts = function(e) {
            if (e instanceof Array) return [].concat(e);
            var t = {
                retries: 10,
                factor: 2,
                minTimeout: 1e3,
                maxTimeout: 1 / 0,
                randomize: !1
            };
            for (var r in e) t[r] = e[r];
            if (t.minTimeout > t.maxTimeout) throw new Error("minTimeout is greater than maxTimeout");
            for (var i = [], n = 0; n < t.retries; n++) i.push(this.createTimeout(n, t));
            return e && e.forever && !i.length && i.push(this.createTimeout(n, t)), i.sort((function(e, t) {
                return e - t
            })), i
        }, t.createTimeout = function(e, t) {
            var r = t.randomize ? Math.random() + 1 : 1,
                i = Math.round(r * t.minTimeout * Math.pow(t.factor, e));
            return i = Math.min(i, t.maxTimeout)
        }, t.wrap = function(e, r, i) {
            if (r instanceof Array && (i = r, r = null), !i)
                for (var n in i = [], e) "function" == typeof e[n] && i.push(n);
            for (var o = 0; o < i.length; o++) {
                var s = i[o],
                    a = e[s];
                e[s] = function(i) {
                    var n = t.operation(r),
                        o = Array.prototype.slice.call(arguments, 1),
                        s = o.pop();
                    o.push((function(e) {
                        n.retry(e) || (e && (arguments[0] = n.mainError()), s.apply(this, arguments))
                    })), n.attempt((function() {
                        i.apply(e, o)
                    }))
                }.bind(e, a), e[s].options = r
            }
        }
    }, function(e, t) {
        function r(e, t) {
            "boolean" == typeof t && (t = {
                forever: t
            }), this._originalTimeouts = JSON.parse(JSON.stringify(e)), this._timeouts = e, this._options = t || {}, this._maxRetryTime = t && t.maxRetryTime || 1 / 0, this._fn = null, this._errors = [], this._attempts = 1, this._operationTimeout = null, this._operationTimeoutCb = null, this._timeout = null, this._operationStart = null, this._options.forever && (this._cachedTimeouts = this._timeouts.slice(0))
        }
        e.exports = r, r.prototype.reset = function() {
            this._attempts = 1, this._timeouts = this._originalTimeouts
        }, r.prototype.stop = function() {
            this._timeout && clearTimeout(this._timeout), this._timeouts = [], this._cachedTimeouts = null
        }, r.prototype.retry = function(e) {
            if (this._timeout && clearTimeout(this._timeout), !e) return !1;
            var t = (new Date).getTime();
            if (e && t - this._operationStart >= this._maxRetryTime) return this._errors.unshift(new Error("RetryOperation timeout occurred")), !1;
            this._errors.push(e);
            var r = this._timeouts.shift();
            if (void 0 === r) {
                if (!this._cachedTimeouts) return !1;
                this._errors.splice(this._errors.length - 1, this._errors.length), this._timeouts = this._cachedTimeouts.slice(0), r = this._timeouts.shift()
            }
            var i = this,
                n = setTimeout((function() {
                    i._attempts++, i._operationTimeoutCb && (i._timeout = setTimeout((function() {
                        i._operationTimeoutCb(i._attempts)
                    }), i._operationTimeout), i._options.unref && i._timeout.unref()), i._fn(i._attempts)
                }), r);
            return this._options.unref && n.unref(), !0
        }, r.prototype.attempt = function(e, t) {
            this._fn = e, t && (t.timeout && (this._operationTimeout = t.timeout), t.cb && (this._operationTimeoutCb = t.cb));
            var r = this;
            this._operationTimeoutCb && (this._timeout = setTimeout((function() {
                r._operationTimeoutCb()
            }), r._operationTimeout)), this._operationStart = (new Date).getTime(), this._fn(this._attempts)
        }, r.prototype.try = function(e) {
            console.log("Using RetryOperation.try() is deprecated"), this.attempt(e)
        }, r.prototype.start = function(e) {
            console.log("Using RetryOperation.start() is deprecated"), this.attempt(e)
        }, r.prototype.start = r.prototype.try, r.prototype.errors = function() {
            return this._errors
        }, r.prototype.attempts = function() {
            return this._attempts
        }, r.prototype.mainError = function() {
            if (0 === this._errors.length) return null;
            for (var e = {}, t = null, r = 0, i = 0; i < this._errors.length; i++) {
                var n = this._errors[i],
                    o = n.message,
                    s = (e[o] || 0) + 1;
                e[o] = s, s >= r && (t = n, r = s)
            }
            return t
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            },
            s = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Mediasoup = void 0;
        const a = r(3),
            d = o(r(105)),
            c = r(214),
            u = s(r(11)),
            l = s(r(1)),
            p = s(r(0));
        class f extends a.EventEmitter {
            constructor(e) {
                super(), this._timeout = 3e4, this._edgeRtpCapabilities = null, this._mediasoupDevice = null, this._sendTransportIceParameters = null, this._recvTransportIceParameters = null, this._micProducer = null, this._micProducerId = null, this._webcamProducer = null, this._webcamProducerId = null, this._screenProducer = null, this._screenProducerId = null, this._webcamProducerCodec = null, this._screenProducerCodec = null, this._consumers = null, this._sendTransport = null, this._recvTransport = null, this._sendTransportTimeoutTimer = null, this._recvTransportTimeoutTimer = null, this._protoo = null, this._eventQueue = [], this.senderEncodingParameter = {
                    ssrcList: [],
                    audio: null,
                    video: null,
                    screen: null
                }, this.unsupportedProducers = [], this._reset(), this.adapterRef = e.adapterRef, this.sdkRef = e.sdkRef
            }
            get consumers() {
                return this._consumers
            }
            _reset() {
                this._timeout = 3e4, this._edgeRtpCapabilities = null, this._mediasoupDevice = null, this._sendTransportIceParameters = null, this._recvTransportIceParameters = null, this._micProducer = null, this._micProducerId = null, this._webcamProducer = null, this._webcamProducerId = null, this._screenProducer = null, this._screenProducerId = null, this._consumers = null, this._sendTransportTimeoutTimer && clearTimeout(this._sendTransportTimeoutTimer), this._sendTransportTimeoutTimer = null, this._recvTransportTimeoutTimer && clearTimeout(this._recvTransportTimeoutTimer), this._recvTransportTimeoutTimer = null, this._sendTransport && this._sendTransport.close(), this._sendTransport = null, this._recvTransport && this._recvTransport.close(), this._recvTransport = null, this.resetConsumeRequestStatus()
            }
            async init() {
                if (this.adapterRef.logger.log("初始化 devices、transport"), this.adapterRef._enableRts) return;
                this._mediasoupDevice || (this._mediasoupDevice = new d.Device, this._mediasoupDevice && await this._mediasoupDevice.load({
                    routerRtpCapabilities: this._edgeRtpCapabilities
                }));
                let e = [],
                    t = "all";
                if (this.adapterRef.channelInfo.relaytoken && this.adapterRef.channelInfo.relayaddrs && (this.adapterRef.channelInfo.relayaddrs.forEach(t => {
                        e.push({
                            urls: "turn:" + t,
                            credential: this.adapterRef.channelInfo.uid + "/" + this.adapterRef.channelInfo.cid,
                            username: this.adapterRef.channelInfo.relaytoken
                        })
                    }), t = "relay"), this.adapterRef.testConf.turnAddr && (e.length = 0, e.push({
                        urls: this.adapterRef.testConf.turnAddr,
                        credential: this.adapterRef.channelInfo.uid + "/" + this.adapterRef.channelInfo.cid,
                        username: this.adapterRef.testConf.relaytoken || "123456"
                    }), t = "relay"), !this._sendTransport && this._mediasoupDevice && (this._sendTransport = this._mediasoupDevice.createSendTransport({
                        id: this.adapterRef.channelInfo.uid,
                        iceParameters: void 0,
                        iceCandidates: void 0,
                        dtlsParameters: void 0,
                        sctpParameters: void 0,
                        iceServers: e,
                        iceTransportPolicy: t,
                        proprietaryConstraints: {
                            optional: [{
                                googDscp: !0
                            }, {
                                googIPv6: !1
                            }]
                        },
                        appData: {
                            cid: this.adapterRef.channelInfo.cid,
                            uid: this.adapterRef.channelInfo.uid,
                            encodedInsertableStreams: this.adapterRef.encryption.encodedInsertableStreams
                        }
                    }), this.senderEncodingParameter = {
                        ssrcList: [],
                        audio: null,
                        video: null,
                        screen: null
                    }, this._sendTransport.on("connectionstatechange", this._sendTransportConnectionstatechange.bind(this, this._sendTransport))), !this._recvTransport) {
                    const r = this._mediasoupDevice.createRecvTransport({
                        id: this.adapterRef.channelInfo.uid,
                        iceParameters: void 0,
                        iceCandidates: void 0,
                        dtlsParameters: void 0,
                        sctpParameters: void 0,
                        iceServers: e,
                        iceTransportPolicy: t,
                        proprietaryConstraints: {
                            optional: [{
                                googDscp: !0
                            }]
                        },
                        appData: {
                            cid: this.adapterRef.channelInfo.cid,
                            uid: this.adapterRef.channelInfo.uid,
                            encodedInsertableStreams: this.adapterRef.encryption.encodedInsertableStreams
                        }
                    });
                    this._recvTransport = r, r.on("connectionstatechange", this._recvTransportConnectionstatechange.bind(this, r))
                }
                this.emit("transportReady")
            }
            async _sendTransportConnectionstatechange(e, t) {
                if (this._sendTransport === e)
                    if (this.adapterRef.logger.log("send connection state changed to %s", t), this.emit("upstream-state-change", {
                            connectionState: t
                        }), "failed" === t) try {
                        if (this._sendTransport) {
                            this._sendTransportTimeoutTimer || (this._sendTransportTimeoutTimer = setTimeout(() => {
                                this._sendTransportConnectTimeout()
                            }, this._timeout));
                            let e = null;
                            if (this._protoo && this._protoo.connected) {
                                if (!this.adapterRef._signalling || !this.adapterRef._signalling._protoo) throw new l.default({
                                    code: p.default.NOT_FOUND,
                                    message: "No _protoo 1"
                                });
                                e = await this.adapterRef._signalling._protoo.request("restartIce", {
                                    transportId: this._sendTransport.id
                                })
                            } else e = this._sendTransportIceParameters;
                            await this._sendTransport.restartIce({
                                iceParameters: e
                            })
                        }
                    } catch (e) {
                        this.adapterRef.logger.error("restartIce() | failed:%o", e)
                    } else "connected" === t && this._sendTransportTimeoutTimer && (clearTimeout(this._sendTransportTimeoutTimer), this._sendTransportTimeoutTimer = null);
                    else this.adapterRef.logger.error("_sendTransportConnectionstatechange：出现了_sendTransport绑定不一致的状况。")
            }
            async _recvTransportConnectionstatechange(e, t) {
                if (this._recvTransport === e)
                    if (this.adapterRef.logger.log("recv connection state changed to %s", t), this.emit("downstream-state-change", {
                            connectionState: t
                        }), "failed" === t) try {
                        if (this._recvTransport) {
                            this._recvTransportTimeoutTimer || (this._recvTransportTimeoutTimer = setTimeout(() => {
                                this._recvTransportConnectTimeout()
                            }, this._timeout));
                            let e = null;
                            e = this._protoo && this._protoo.connected ? await this._protoo.request("restartIce", {
                                transportId: this._recvTransport.id
                            }) : this._recvTransportIceParameters, await this._recvTransport.restartIce({
                                iceParameters: e
                            })
                        }
                    } catch (e) {
                        this.adapterRef.logger.error("restartIce() | failed:%o", e)
                    } else "connected" === t && this._recvTransportTimeoutTimer && (clearTimeout(this._recvTransportTimeoutTimer), this._recvTransportTimeoutTimer = null);
                    else this.adapterRef.logger.error("_recvTransportConnectionstatechange：出现了_recvTransport绑定不一致的状况。")
            }
            async _sendTransportConnectTimeout() {
                this.adapterRef.logger.warn("媒体上行传输通道连接失败"), this.adapterRef._signalling && "DISCONNECTING" !== this.adapterRef.connectState.curState && "DISCONNECTED" !== this.adapterRef.connectState.curState ? (this.adapterRef.logger.error("媒体上行传输通道连接失败，尝试整体重连"), this.adapterRef.channelStatus = "connectioning", this.adapterRef._signalling._reconnection()) : (this.adapterRef.logger.error("媒体上行传输通道建立失败，抛错错误"), this.adapterRef.instance.emit("error", "SOCKET_ERROR"), this.adapterRef.instance.leave())
            }
            async _recvTransportConnectTimeout() {
                this.adapterRef.logger.warn("媒体下行传输通道建立失败"), this.adapterRef._signalling && "DISCONNECTING" !== this.adapterRef.connectState.curState && "DISCONNECTED" !== this.adapterRef.connectState.curState ? (this.adapterRef.logger.error("媒体下行传输通道连接失败，尝试整体重连"), this.adapterRef.channelStatus = "connectioning", this.adapterRef._signalling._reconnection()) : (this.adapterRef.logger.error("媒体下行传输通道建立失败，抛错错误"), this.adapterRef.instance.emit("error", "SOCKET_ERROR"), this.adapterRef.instance.leave())
            }
            async createProduce(e) {
                if (this.adapterRef.logger.log("发布音视频: ", e.getId()), !this._sendTransport) throw new l.default({
                    code: p.default.NOT_FOUND,
                    message: "No send trasnport 1"
                });
                if (0 === this._sendTransport.listenerCount("produce") && this._sendTransport.on("produce", async ({
                        kind: e,
                        rtpParameters: t,
                        appData: r,
                        localDtlsParameters: i,
                        offer: n
                    }, o, s) => {
                        if (this.adapterRef.logger.log("produce 反馈 [kind= %s, appData= %o]", e, JSON.stringify(r, null, " ")), !this._sendTransport) throw new l.default({
                            code: p.default.NOT_FOUND,
                            message: "No send trasnport 2"
                        });
                        const a = "screenShare" == r.mediaType ? "screen" : r.mediaType,
                            d = n.sdp.match(/a=ice-ufrag:([0-9a-zA-Z#=+-_\/\\\\]+)/);
                        try {
                            let s = Object.assign({
                                    requestId: "" + Math.ceil(1e9 * Math.random()),
                                    kind: e,
                                    rtpParameters: t,
                                    iceUfrag: d.length ? d[1] : `${this.adapterRef.channelInfo.cid}#${this.adapterRef.channelInfo.uid}#send`,
                                    externData: {
                                        producerInfo: {
                                            mediaType: r.mediaType,
                                            subStream: "screenShare" === r.mediaType,
                                            simulcastEnable: !1,
                                            mute: !1,
                                            spatialLayer: 0,
                                            temporalLayer: ""
                                        }
                                    }
                                }, r),
                                c = this.senderEncodingParameter[a],
                                u = n.sdp.indexOf(s.deviceId);
                            if (!c) {
                                if (t.encodings && (c = t.encodings[0], c && this.senderEncodingParameter.ssrcList.indexOf(c.ssrc) > -1 && (c = null)), !c && s.deviceId && u > -1) {
                                    const e = n.sdp.substring(u).match(/a=ssrc-group:FID (\d+) (\d+)/);
                                    e && (c = {
                                        ssrc: parseInt(e[1]),
                                        rtx: {
                                            ssrc: parseInt(e[2])
                                        }
                                    }), c && this.senderEncodingParameter.ssrcList.indexOf(c.ssrc) > -1 && (c = null)
                                }
                                c || (this.adapterRef.logger.log("使用sdp中第一个ssrc"), c = {
                                    ssrc: parseInt(n.sdp.match(/a=ssrc:(\d+)/)[1]),
                                    dtx: !1
                                }), this.senderEncodingParameter[a] = c, this.senderEncodingParameter.ssrcList.push(c.ssrc)
                            }
                            if (t.encodings && t.encodings[0] && (t.encodings[0].ssrc = c.ssrc, t.encodings[0].rtx && c.rtx && c.rtx && (t.encodings[0].rtx.ssrc = c.rtx.ssrc)), "video" === r.mediaType && (s.mediaProfile = [{
                                    ssrc: c.ssrc,
                                    res: "640*480",
                                    fps: "15",
                                    spatialLayer: 0,
                                    maxBitrate: 1e3
                                }]), "screenShare" === r.mediaType && (s.mediaProfile = [{
                                    ssrc: c.ssrc,
                                    res: "640*480",
                                    fps: "15",
                                    spatialLayer: 0,
                                    maxBitrate: 1e3
                                }]), void 0 === i ? s.transportId = this._sendTransport.id : s.dtlsParameters = i, !this.adapterRef._signalling || !this.adapterRef._signalling._protoo) throw new l.default({
                                code: p.default.NOT_FOUND,
                                message: "No _protoo 2"
                            });
                            const {
                                transportId: f,
                                iceParameters: h,
                                iceCandidates: m,
                                dtlsParameters: g,
                                producerId: v
                            } = await this.adapterRef._signalling._protoo.request("Produce", s);
                            void 0 !== f && (this._sendTransport._id = f), this.adapterRef.logger.log("produce请求反馈结果, kind: %s, producerId: %s", e, v);
                            let y = {
                                codecParam: null,
                                codecName: null
                            };
                            if ("audio" === r.mediaType ? this._micProducerId = v : "video" === r.mediaType ? (this._webcamProducerId = v, y = this.adapterRef.mediaCapability.getCodecSend("video", this._sendTransport.handler._sendingRtpParametersByKind.video), this._webcamProducerCodec = y.codecName) : "screenShare" === r.mediaType && (this._screenProducerId = v, y = this.adapterRef.mediaCapability.getCodecSend("screen", this._sendTransport.handler._sendingRtpParametersByKind.video), this._screenProducerCodec = y.codecName), h && (this._sendTransportIceParameters = h), !this.adapterRef.localStream) throw new l.default({
                                code: p.default.NO_LOCALSTREAM,
                                message: "localStream not found"
                            });
                            this._sendTransport.fillRemoteRecvSdp({
                                kind: e,
                                appData: r,
                                iceParameters: h,
                                iceCandidates: m,
                                dtlsParameters: g,
                                sctpParameters: void 0,
                                sendingRtpParameters: t,
                                codecOptions: "audio" === e ? {
                                    opusStereo: 1,
                                    opusDtx: 1
                                } : {
                                    videoGoogleStartBitrate: 1e3
                                },
                                offer: n,
                                codec: y.codecParam,
                                audioProfile: this.adapterRef.localStream.audioProfile
                            }), "video" === e && this.adapterRef.localStream.adjustResolution(a), o({
                                id: v
                            })
                        } catch (e) {
                            s(e)
                        }
                    }), e.mediaHelper && e.mediaHelper.audioStream && this._micProducer) this.adapterRef.logger.log("音频已经publish，重复操作");
                else if (e.mediaHelper && e.mediaHelper.audioStream) {
                    const t = e.mediaHelper.audioStream.getAudioTracks()[0];
                    t && (this.adapterRef.logger.log("发布 audioTrack: ", t.id, t.label), e.pubStatus.audio.audio = !0, this._micProducer = await this._sendTransport.produce({
                        track: t,
                        codecOptions: {
                            opusStereo: !0,
                            opusDtx: !0
                        },
                        appData: {
                            deviceId: t.id,
                            mediaType: "audio"
                        }
                    }))
                }
                if (e.mediaHelper && e.mediaHelper.videoStream && this._webcamProducer) this.adapterRef.logger.log("视频已经publish，重复操作");
                else if (e.mediaHelper && e.mediaHelper.videoStream) {
                    let t = e.mediaHelper.videoStream.getVideoTracks()[0];
                    this.adapterRef.logger.log("发布 videoTrack: ", t.id, t.label), e.pubStatus.video.video = !0;
                    const r = this.adapterRef.mediaCapability.getCodecSend("video", this._sendTransport.handler._sendingRtpParametersByKind.video);
                    if (this._webcamProducer = await this._sendTransport.produce({
                            track: t,
                            codec: r.codecParam,
                            codecOptions: {
                                videoGoogleStartBitrate: 1e3
                            },
                            appData: {
                                deviceId: t.id,
                                mediaType: "video"
                            }
                        }), this.adapterRef.encryption.encodedInsertableStreams && this._webcamProducer.rtpSender && !this._webcamProducer.rtpSender.senderStreams) {
                        this.adapterRef.logger.log("发送端开始解密", this.adapterRef.encryption.encryptionMode);
                        const e = this._webcamProducer.rtpSender.createEncodedStreams(),
                            t = new TransformStream({
                                transform: this.adapterRef.encryption.encodeFunctionH264.bind(this.adapterRef.encryption)
                            });
                        e.readable.pipeThrough(t).pipeTo(e.writable), this._webcamProducer.rtpSender.senderStreams = e
                    }
                    this.adapterRef.state.startPubVideoTime || (this.adapterRef.state.startPubVideoTime = Date.now())
                }
                if (e.mediaHelper && e.mediaHelper.screenStream && this._screenProducer) this.adapterRef.logger.log("屏幕共享已经publish，重复操作");
                else if (e.mediaHelper && e.mediaHelper.screenStream) {
                    const t = e.mediaHelper.screenStream.getVideoTracks()[0];
                    this.adapterRef.logger.log("发布 screenTrack: ", t.id, t.label), e.pubStatus.screen.screen = !0;
                    const r = this.adapterRef.mediaCapability.getCodecSend("screen", this._sendTransport.handler._sendingRtpParametersByKind.video);
                    this._screenProducer = await this._sendTransport.produce({
                        track: t,
                        codec: r.codecParam,
                        codecOptions: {
                            videoGoogleStartBitrate: 1e3
                        },
                        appData: {
                            deviceId: t.id,
                            mediaType: "screenShare"
                        }
                    }), this.adapterRef.state.startPubScreenTime || (this.adapterRef.state.startPubScreenTime = Date.now())
                }
            }
            async destroyProduce(e) {
                let t = null,
                    r = null;
                if ("audio" === e) {
                    if (t = this._micProducer, r = this._micProducerId, this._micProducer = this._micProducerId = null, !this.adapterRef.localStream) throw new l.default({
                        code: p.default.NO_LOCALSTREAM,
                        message: "localStream not found"
                    });
                    this.adapterRef.localStream.pubStatus.audio.audio = !1
                } else if ("video" === e) {
                    if (t = this._webcamProducer, r = this._webcamProducerId, this._webcamProducer = this._webcamProducerId = null, !this.adapterRef.localStream) throw new l.default({
                        code: p.default.NO_LOCALSTREAM,
                        message: "localStream not found"
                    });
                    this.adapterRef.localStream.pubStatus.video.video = !1
                } else if ("screen" === e) {
                    if (t = this._screenProducer, r = this._screenProducerId, this._screenProducer = this._screenProducerId = null, !this.adapterRef.localStream) throw new l.default({
                        code: p.default.NO_LOCALSTREAM,
                        message: "localStream not found"
                    });
                    this.adapterRef.localStream.pubStatus.screen.screen = !1
                }
                try {
                    if (this.adapterRef.logger.warn(`停止发布 destroyProduce ${e} producerId=%o`, r), !t) return;
                    if (await t.close(), !this.adapterRef._signalling || !this.adapterRef._signalling._protoo) throw new l.default({
                        code: p.default.NOT_FOUND,
                        message: "No _protoo 3"
                    });
                    await this.adapterRef._signalling._protoo.request("CloseProducer", {
                        requestId: "" + Math.ceil(1e9 * Math.random()),
                        producerId: r
                    })
                } catch (e) {
                    this.adapterRef.logger.error("_destroyConsumer() | failed:", e.name, e.message)
                }
            }
            async createConsumer(e, t, r, i, n = 0) {
                return new Promise((o, s) => {
                    this._eventQueue.push({
                        uid: e,
                        kind: t,
                        id: i,
                        mediaType: r,
                        preferredSpatialLayer: n,
                        resolve: o,
                        reject: s
                    }), this._eventQueue.length > 1 || (this.adapterRef._enableRts ? this._createConsumerRts(this._eventQueue[0]) : this._createConsumer(this._eventQueue[0]))
                })
            }
            async resetConsumeRequestStatus() {
                const e = this._eventQueue;
                this._eventQueue = [];
                for (let t = 0; t < e.length; t++) {
                    const r = e[t];
                    this.adapterRef.logger.log(`resetConsumeRequestStatus：uid ${r.uid}, uid ${r.uid}, kind ${r.kind}, id ${r.id}`), r.reject("resetConsumeRequestStatus")
                }
            }
            removeUselessConsumeRequest(e) {
                const {
                    producerId: t,
                    uid: r
                } = e;
                if (t && r) {
                    this.adapterRef.logger.log(`removeUselessConsumeRequest：producerId ${t}, uid ${r}`);
                    for (let e = 0; e < this._eventQueue.length; e++) {
                        const i = this._eventQueue[e];
                        this.adapterRef.logger.log(`removeUselessConsumeRequest：uid ${i.uid}, uid ${i.uid}, kind ${i.kind}, id ${i.id}`), i.id !== t && i.uid !== r || (this._eventQueue.splice(e, 1), e++)
                    }
                }
            }
            checkConsumerList(e) {
                this._eventQueue.shift(), e.resolve(null), this.adapterRef.logger.log("查看事件队列, _eventQueue: ", this._eventQueue.length), this._eventQueue.forEach(e => {
                    this.adapterRef.logger.log(`consumerList, uid: ${e.uid}, kind: ${e.kind}, mediaType: ${e.mediaType}, id: ${e.id}`)
                }), this._eventQueue.length > 0 && (this.adapterRef._enableRts ? this._createConsumerRts(this._eventQueue[0]) : this._createConsumer(this._eventQueue[0]))
            }
            async _createConsumer(e) {
                const {
                    uid: t,
                    kind: r,
                    mediaType: i,
                    id: n,
                    preferredSpatialLayer: o = 0
                } = e, s = "screenShare" === i ? "screen" : i;
                if (this.adapterRef.logger.log("开始订阅 %s 的 %s 媒体: %s 大小流: ", t, s, n, o), !n) return this.checkConsumerList(e);
                const a = this.adapterRef.remoteStreamMap[t];
                if (!a || !a.pubStatus[s][s] || !a.pubStatus[s].producerId) return this.checkConsumerList(e);
                if (a.pubStatus[s].consumerId) {
                    this.adapterRef.logger.log("已经订阅过");
                    let t = !0;
                    if (a.Play && (t = await a.Play.isPlayStreamError(s)), t) return this.adapterRef.logger.log("当前播放正常，直接返回"), this.checkConsumerList(e);
                    if ("start" !== a.pubStatus[s].stopconsumerStatus) {
                        this.adapterRef.logger.log("先停止之前的订阅");
                        try {
                            if (a.pubStatus[s].stopconsumerStatus = "start", !this.adapterRef._mediasoup) throw new l.default({
                                code: p.default.NO_MEDIASERVER,
                                message: "media server error 21"
                            });
                            await this.destroyConsumer(a.pubStatus.audio.consumerId), this.adapterRef.instance.removeSsrc(a.getId(), s), a.pubStatus[s].consumerId = "", a.stop(s), a.pubStatus[s].stopconsumerStatus = "end"
                        } catch (e) {
                            this.adapterRef.logger.error("停止之前的订阅出现错误: ", e.name, e.message)
                        }
                        this.adapterRef.logger.log("停止之前的订阅完成")
                    }
                }
                let d = null;
                if ("audio" === s && (d = {
                        opusStereo: 1
                    }), this._mediasoupDevice && this._mediasoupDevice.loaded || (this.adapterRef.logger.error("createConsumer：Waiting for Transport Ready"), await c.waitForEvent(this, "transportReady", 3e3)), !this._recvTransport) throw e.resolve(null), new l.default({
                    code: p.default.NOT_FOUND,
                    message: "No receive transport"
                });
                this.adapterRef.logger.log(`prepareLocalSdp [kind: ${r}, mediaTypeShort: ${s}, uid: ${t}]`), this._recvTransport.id === this.adapterRef.channelInfo.uid && (this.adapterRef.logger.log("transporth还没有协商，需要dtls消息"), this._recvTransport._handler._transportReady = !1);
                const f = await this._recvTransport.prepareLocalSdp(r, this._edgeRtpCapabilities, t);
                if (!this.adapterRef || "DISCONNECTING" == this.adapterRef.connectState.curState || "DISCONNECTED" == this.adapterRef.connectState.curState) return;
                this.adapterRef.logger.log("获取本地sdp，mid = %o", f.mid);
                let {
                    rtpCapabilities: h,
                    offer: m,
                    iceUfragReg: g
                } = f, v = f.mid;
                const y = f.dtlsParameters;
                v = "number" == typeof v && v < 0 ? void 0 : "" + v;
                let _ = t;
                "string" === this.adapterRef.channelInfo.uidType && (_ = new u.default(_));
                let S = {
                    requestId: "" + Math.ceil(1e9 * Math.random()),
                    kind: r,
                    rtpCapabilities: h,
                    uid: _,
                    producerId: n,
                    preferredSpatialLayer: o,
                    mid: v,
                    pause: !1,
                    iceUfrag: `${this.adapterRef.channelInfo.cid}#${this.adapterRef.channelInfo.uid}#recv`
                };
                if (this.adapterRef.instance.apiEventReport("setFunction", {
                        name: "set_video_sub",
                        oper: "1",
                        value: JSON.stringify(o)
                    }), void 0 === y ? S.transportId = this._recvTransport.id : S.dtlsParameters = y, this.adapterRef.logger.log(`发送consume请求, uid: ${t}, kind: ${r}, mediaTypeShort: ${s}, producerId: ${S.producerId}, transportId: ${S.transportId}, requestId: ${S.requestId}`), !this.adapterRef._signalling || !this.adapterRef._signalling._protoo) throw e.resolve(null), new l.default({
                    code: p.default.NOT_FOUND,
                    message: "No _protoo 4"
                });
                const b = await this.adapterRef._signalling._protoo.request("Consume", S);
                let {
                    transportId: R,
                    iceParameters: w,
                    iceCandidates: T,
                    dtlsParameters: E,
                    probeSSrc: A,
                    rtpParameters: O,
                    producerId: I,
                    consumerId: x,
                    code: P,
                    errMsg: k
                } = b;
                if (this.adapterRef.logger.log(`consume反馈结果: code: ${P} uid: ${t}, mid: ${O&&O.mid}, kind: ${r}, producerId: ${I}, consumerId: ${x}, transportId: ${R}, requestId: ${b.requestId}, errMsg: ${k}`), this._recvTransport) try {
                    const i = b.uid;
                    if (200 !== P || !this.adapterRef.remoteStreamMap[t]) return this.adapterRef.logger.warn("remoteStream.pubStatus: ", a.pubStatus), i && t != i && (this.adapterRef.logger.log("peerId: ", i), this.adapterRef.logger.log("id 不匹配不处理")), a[s] && a.pubStatus[s][s] && a.pubStatus[s].producerId || this.adapterRef.logger.log(`${t} 的 ${s} 的媒体已经停止发布了，直接返回`), await this._recvTransport.recoverLocalSdp(t, v, r), this.adapterRef.logger.log("发送请求的 producerId: ", n), this.adapterRef.logger.log("当前的 producerId：", a.pubStatus[s].producerId), a.pubStatus[s].producerId && n != a.pubStatus[s].producerId && (this.adapterRef.logger.log("此前的订阅已经失效，重新订阅"), this.adapterRef.instance.subscribe(a)), this.checkConsumerList(e);
                    O && O.encodings && O.encodings.length && O.encodings[0].ssrc && this.adapterRef.instance.addSsrc(t, s, O.encodings[0].ssrc), void 0 !== R && (this._recvTransport._id = R), void 0 !== A && (this._probeSSrc = A), w && (this._recvTransportIceParameters = w);
                    let o = {};
                    null != O.mid && (O.mid = O.mid + "");
                    const c = await this._recvTransport.consume({
                        id: x,
                        producerId: I,
                        kind: r,
                        rtpParameters: O,
                        codecOptions: d,
                        appData: Object.assign(Object.assign({}, o), {
                            peerId: i,
                            remoteUid: t
                        }),
                        offer: m,
                        iceParameters: w,
                        iceCandidates: T,
                        dtlsParameters: E,
                        sctpParameters: void 0,
                        probeSSrc: this._probeSSrc
                    });
                    if (this.adapterRef.encryption.encodedInsertableStreams && "video" === s && !c.rtpReceiver.receiverStreams) {
                        this.adapterRef.logger.log("接收端开始解密", this.adapterRef.encryption.encryptionMode);
                        const e = c.rtpReceiver.createEncodedStreams(),
                            t = new TransformStream({
                                transform: this.adapterRef.encryption.decodeFunctionH264.bind(this.adapterRef.encryption)
                            });
                        e.readable.pipeThrough(t).pipeTo(e.writable), c.rtpReceiver.receiverStreams = e
                    }
                    if (this._consumers || (this._consumers = {}), this._consumers[c.id] = c, c.on("transportclose", () => {
                            this._consumers && delete this._consumers[c.id]
                        }), this.adapterRef.logger.log("订阅consume完成 peerId = %s", i), a && a.pubStatus[s].producerId) {
                        if (a.subStatus[s] = !0, a.pubStatus[s][s] = !0, a.pubStatus[s].consumerId = x, a.pubStatus[s].producerId = I, !a.mediaHelper) throw new l.default({
                            code: p.default.NO_MEDIAHELPER,
                            message: "No remoteStream.mediaHelper"
                        });
                        a.mediaHelper.updateStream(s, c.track), this.adapterRef.instance.emit("stream-subscribed", {
                            stream: a,
                            mediaType: s
                        })
                    } else this.adapterRef.logger.log("该次consume状态错误： ", JSON.stringify(a.pubStatus, null, ""));
                    return this.checkConsumerList(e)
                } catch (e) {
                    this.adapterRef && this.adapterRef.logger.error('"newConsumer" request failed:%o', e.name, e.message), this.adapterRef.logger.error("订阅 %s 的 %s 媒体失败，做容错处理: 重新建立下行连接", t, r), this.resetConsumeRequestStatus(), this._recvTransport && await this.closeTransport(this._recvTransport), this._recvTransport = null, this.adapterRef.instance.reBuildRecvTransport()
                } else this.adapterRef.logger.error("transport undefined，直接返回")
            }
            async _createConsumerRts(e) {
                const {
                    uid: t,
                    kind: r,
                    id: i,
                    mediaType: n,
                    preferredSpatialLayer: o = 0
                } = e, s = "screenShare" === n ? "screen" : n;
                if (this.adapterRef.logger.log("开始订阅 %s 的 %s 媒体: %s 大小流: ", t, s, i, o), !this.adapterRef._rtsTransport) throw new l.default({
                    code: p.default.NOT_FOUND,
                    message: "_createConsumerRts: _rtsTransport is null"
                });
                if (!(this.adapterRef._signalling && this.adapterRef._signalling._protoo && this.adapterRef._signalling._protoo.request)) throw new l.default({
                    code: p.default.NOT_FOUND,
                    message: "_createConsumerRts: _protoo is null"
                });
                if ("audio" !== s && "video" !== s && "screen" !== s) throw new l.default({
                    code: p.default.UNKNOWN_TYPE,
                    message: "_createConsumerRts: mediaType type error"
                });
                if (!i) return this.checkConsumerList(e);
                let a = this.adapterRef.remoteStreamMap[t];
                if (!a || !a.pubStatus[s][s] || !a.pubStatus[s].producerId) return this.checkConsumerList(e);
                if (a.pubStatus[s].consumerId) return this.adapterRef.logger.log("已经订阅过，返回"), this.checkConsumerList(e);
                const d = {
                    requestId: "" + Math.ceil(1e9 * Math.random()),
                    transportId: this.adapterRef._rtsTransport.transportId,
                    uid: t,
                    producerId: i,
                    preferredSpatialLayer: o,
                    pause: !1,
                    rtsCapabilities: {
                        codecs: [{
                            kind: s,
                            codec: "video" == s || "screen" == s ? "h264" : "opus",
                            payloadType: "video" == s || "screen" == s ? 2 : 1
                        }]
                    }
                };
                if (this.adapterRef.instance.apiEventReport("setFunction", {
                        name: "set_video_sub",
                        oper: "1",
                        value: JSON.stringify(o)
                    }), this.adapterRef.logger.log("发送consume请求 = %o", d), !this.adapterRef._signalling || !this.adapterRef._signalling._protoo) throw e.resolve(null), new l.default({
                    code: p.default.NOT_FOUND,
                    message: "No _protoo 5"
                });
                const c = await this.adapterRef._signalling._protoo.request("WsConsume", d);
                this.adapterRef.logger.log("consume反馈结果 = %o", c);
                let {
                    transportId: u,
                    rtpParameters: f,
                    producerId: h,
                    consumerId: m,
                    code: g,
                    errMsg: v
                } = c;
                try {
                    const i = c.uid;
                    return 200 === g && this.adapterRef.remoteStreamMap[t] ? (this._consumers || (this._consumers = {}), this._consumers[m] = {
                        producerId: h,
                        close: function() {
                            return Promise.resolve()
                        }
                    }, this.adapterRef.logger.log("订阅consume完成 peerId = %s", i), a = this.adapterRef.remoteStreamMap[t], a && a.pubStatus[s].producerId ? (a.subStatus[s] = !0, a.pubStatus[s][s] = !0, a.pubStatus[s].consumerId = m, a.pubStatus[s].producerId = h) : this.adapterRef.logger.log("该次consume状态错误： ", JSON.stringify(a.pubStatus, null, "")), this.checkConsumerList(e)) : (this.adapterRef.logger.error("订阅 %s 的 %s 媒体失败, errcode: %s, reason: %s ，做容错处理: 重新建立下行连接", t, r, g, v), this._eventQueue.length = 0, void(this._recvTransport = null))
                } catch (e) {
                    return this.adapterRef && this.adapterRef.logger.error('"newConsumer" request failed:', e.name, e.message, e), this.adapterRef.logger.error("订阅 %s 的 %s 媒体失败，做容错处理: 重新建立下行连接", t, s), this.adapterRef.instance.reBuildRecvTransport()
                }
            }
            async destroyConsumer(e) {
                if (e) try {
                    if (this.adapterRef.logger.log("停止订阅 destroyConsumer consumerId=%o", e), !this._consumers) throw new l.default({
                        code: p.default.NOT_FOUND,
                        message: "No _consumers"
                    });
                    const t = this._consumers[e];
                    if (!t) return;
                    if (!this.adapterRef._signalling || !this.adapterRef._signalling._protoo) throw new l.default({
                        code: p.default.NOT_FOUND,
                        message: "No _protoo 6"
                    });
                    this.adapterRef._signalling._protoo.request("CloseConsumer", {
                        requestId: "" + Math.ceil(1e9 * Math.random()),
                        consumerId: e,
                        producerId: t.producerId
                    }), t.close(), delete this._consumers[e]
                } catch (e) {
                    this.adapterRef.logger.error("destroyConsumer() | failed:%o", e.name, e.message, e.stack)
                }
            }
            async closeTransport(e) {
                if (e && e.id) try {
                    if (this.adapterRef.logger.log("closeTransport() [停止通道 transportId=%o ]", e.id), !this.adapterRef._signalling || !this.adapterRef._signalling._protoo) throw new l.default({
                        code: p.default.NOT_FOUND,
                        message: "No _protoo 7"
                    });
                    const t = await this.adapterRef._signalling._protoo.request("CloseTransport", {
                        requestId: "" + Math.ceil(1e9 * Math.random()),
                        transportId: e.id
                    });
                    this.adapterRef.logger.log("closeTransport() [停止通道反馈结果 result=%s ]", JSON.stringify(t, null, " ")), e.close()
                } catch (e) {
                    this.adapterRef.logger.error("closeTransport() | failed:", e.name, e.message, e)
                }
            }
            async muteAudio() {
                if (this.adapterRef.logger.log("mute音频"), !this._micProducer) throw new l.default({
                    code: p.default.NOT_FOUND,
                    message: "No _micProducer"
                });
                this._micProducer.pause();
                try {
                    if (!this.adapterRef._signalling || !this.adapterRef._signalling._protoo) throw new l.default({
                        code: p.default.NOT_FOUND,
                        message: "No _protoo 8"
                    });
                    let e = this.adapterRef.channelInfo.uid;
                    "string" === this.adapterRef.channelInfo.uidType && (e = new u.default(e)), await this.adapterRef._signalling._protoo.request("SendUserData", {
                        externData: {
                            type: "Mute",
                            cid: this.adapterRef.channelInfo.cid,
                            uid: e,
                            data: {
                                producerId: this._micProducer.id,
                                mute: !0
                            }
                        }
                    })
                } catch (e) {
                    this.adapterRef.logger.error("muteMic() | failed:", e.name, e.message, e)
                }
            }
            async unmuteAudio() {
                if (this.adapterRef.logger.log("resume音频"), !this._micProducer) throw new l.default({
                    code: p.default.NOT_FOUND,
                    message: "No _micProducer"
                });
                this._micProducer.resume();
                try {
                    if (!this.adapterRef._signalling || !this.adapterRef._signalling._protoo) throw new l.default({
                        code: p.default.NOT_FOUND,
                        message: "No _protoo 9"
                    });
                    let e = this.adapterRef.channelInfo.uid;
                    "string" === this.adapterRef.channelInfo.uidType && (e = new u.default(e)), await this.adapterRef._signalling._protoo.request("SendUserData", {
                        externData: {
                            type: "Mute",
                            cid: this.adapterRef.channelInfo.cid,
                            uid: e,
                            data: {
                                producerId: this._micProducer.id,
                                mute: !1
                            }
                        }
                    })
                } catch (e) {
                    return this.adapterRef.logger.error("muteMic() | failed: ", e.name, e.message, e), Promise.reject(e)
                }
            }
            async muteVideo() {
                if (this.adapterRef.logger.log("mute视频"), !this._webcamProducer) throw new l.default({
                    code: p.default.NOT_FOUND,
                    message: "No _webcamProducer"
                });
                this._webcamProducer.pause();
                try {
                    if (!this.adapterRef._signalling || !this.adapterRef._signalling._protoo) throw new l.default({
                        code: p.default.NOT_FOUND,
                        message: "No _protoo 10"
                    });
                    let e = this.adapterRef.channelInfo.uid;
                    "string" === this.adapterRef.channelInfo.uidType && (e = new u.default(e)), await this.adapterRef._signalling._protoo.request("SendUserData", {
                        externData: {
                            type: "Mute",
                            cid: this.adapterRef.channelInfo.cid,
                            uid: e,
                            data: {
                                producerId: this._webcamProducer.id,
                                mute: !0
                            }
                        }
                    })
                } catch (e) {
                    this.adapterRef.logger.error("muteMic() | failed:", e.name, e.message, e)
                }
            }
            async unmuteVideo() {
                if (this.adapterRef.logger.log("resume视频"), !this._webcamProducer) throw new l.default({
                    code: p.default.NOT_FOUND,
                    message: "No _webcamProducer"
                });
                this._webcamProducer.resume();
                try {
                    if (!this.adapterRef._signalling || !this.adapterRef._signalling._protoo) throw new l.default({
                        code: p.default.NOT_FOUND,
                        message: "No _protoo 11"
                    });
                    let e = this.adapterRef.channelInfo.uid;
                    "string" === this.adapterRef.channelInfo.uidType && (e = new u.default(e)), await this.adapterRef._signalling._protoo.request("SendUserData", {
                        externData: {
                            type: "Mute",
                            cid: this.adapterRef.channelInfo.cid,
                            uid: e,
                            data: {
                                producerId: this._webcamProducer.id,
                                mute: !1
                            }
                        }
                    })
                } catch (e) {
                    this.adapterRef.logger.error("muteMic() | failed:", e.name, e.message, e)
                }
            }
            async muteScreen() {
                if (this.adapterRef.logger.log("mute视频"), !this._screenProducer) throw new l.default({
                    code: p.default.NOT_FOUND,
                    message: "No _screenProducer 1"
                });
                this._screenProducer.pause();
                try {
                    if (!this.adapterRef._signalling || !this.adapterRef._signalling._protoo) throw new l.default({
                        code: p.default.NOT_FOUND,
                        message: "No _protoo 12"
                    });
                    let e = this.adapterRef.channelInfo.uid;
                    "string" === this.adapterRef.channelInfo.uidType && (e = new u.default(e)), await this.adapterRef._signalling._protoo.request("SendUserData", {
                        externData: {
                            type: "Mute",
                            cid: this.adapterRef.channelInfo.cid,
                            uid: e,
                            data: {
                                producerId: this._screenProducer.id,
                                mute: !0
                            }
                        }
                    })
                } catch (e) {
                    this.adapterRef.logger.error("muteScreen() | failed: ", e.name, e.message, e)
                }
            }
            async unmuteScreen() {
                if (this.adapterRef.logger.log("resume视频"), !this._screenProducer) throw new l.default({
                    code: p.default.NOT_FOUND,
                    message: "No _screenProducer 2"
                });
                this._screenProducer.resume();
                try {
                    if (!this.adapterRef._signalling || !this.adapterRef._signalling._protoo) throw new l.default({
                        code: p.default.NOT_FOUND,
                        message: "No _protoo 13"
                    });
                    let e = this.adapterRef.channelInfo.uid;
                    "string" === this.adapterRef.channelInfo.uidType && (e = new u.default(e)), await this.adapterRef._signalling._protoo.request("SendUserData", {
                        externData: {
                            type: "Mute",
                            cid: this.adapterRef.channelInfo.cid,
                            uid: e,
                            data: {
                                producerId: this._screenProducer.id,
                                mute: !1
                            }
                        }
                    })
                } catch (e) {
                    this.adapterRef.logger.error("muteMic() | failed:", e.name, e.message, e)
                }
            }
            async updateUserRole(e) {
                this.adapterRef.logger.log("updateUserRole:更新用户角色为" + e);
                try {
                    if (!this.adapterRef._signalling || !this.adapterRef._signalling._protoo) throw new l.default({
                        code: p.default.NOT_FOUND,
                        message: "No _protoo 14"
                    });
                    let t = this.adapterRef.channelInfo.uid;
                    "string" === this.adapterRef.channelInfo.uidType && (t = new u.default(t)), await this.adapterRef._signalling._protoo.request("SendUserData", {
                        externData: {
                            type: "UserRole",
                            cid: this.adapterRef.channelInfo.cid,
                            uid: t,
                            data: {
                                userRole: e
                            }
                        }
                    })
                } catch (e) {
                    throw this.adapterRef.logger.error("updateUserRole failed:", e.name, e.message, e), e
                }
            }
            destroy() {
                this.adapterRef.logger.log("清除 meidasoup"), this._reset()
            }
        }
        t.Mediasoup = f
    }, function(e, t, r) {
        const i = r(98)("h264-profile-level-id");
        i.log = console.info.bind(console);
        t.ProfileConstrainedBaseline = 1, t.ProfileBaseline = 2, t.ProfileMain = 3, t.ProfileConstrainedHigh = 4, t.ProfileHigh = 5;
        t.Level1_b = 0, t.Level1 = 10, t.Level1_1 = 11, t.Level1_2 = 12, t.Level1_3 = 13, t.Level2 = 20, t.Level2_1 = 21, t.Level2_2 = 22, t.Level3 = 30, t.Level3_1 = 31, t.Level3_2 = 32, t.Level4 = 40, t.Level4_1 = 41, t.Level4_2 = 42, t.Level5 = 50, t.Level5_1 = 51, t.Level5_2 = 52;
        class n {
            constructor(e, t) {
                this.profile = e, this.level = t
            }
        }
        t.ProfileLevelId = n;
        const o = new n(1, 31);
        class s {
            constructor(e) {
                this._mask = ~c("x", e), this._maskedValue = c("1", e)
            }
            isMatch(e) {
                return this._maskedValue === (e & this._mask)
            }
        }
        class a {
            constructor(e, t, r) {
                this.profile_idc = e, this.profile_iop = t, this.profile = r
            }
        }
        const d = [new a(66, new s("x1xx0000"), 1), new a(77, new s("1xxx0000"), 1), new a(88, new s("11xx0000"), 1), new a(66, new s("x0xx0000"), 2), new a(88, new s("10xx0000"), 2), new a(77, new s("0x0x0000"), 3), new a(100, new s("00000000"), 5), new a(100, new s("00001100"), 4)];

        function c(e, t) {
            return (t[0] === e) << 7 | (t[1] === e) << 6 | (t[2] === e) << 5 | (t[3] === e) << 4 | (t[4] === e) << 3 | (t[5] === e) << 2 | (t[6] === e) << 1 | (t[7] === e) << 0
        }

        function u(e = {}) {
            const t = e["level-asymmetry-allowed"];
            return 1 === t || "1" === t
        }
        t.parseProfileLevelId = function(e) {
            if ("string" != typeof e || 6 !== e.length) return null;
            const t = parseInt(e, 16);
            if (0 === t) return null;
            const r = 255 & t,
                o = t >> 8 & 255,
                s = t >> 16 & 255;
            let a;
            switch (r) {
                case 11:
                    a = 0 != (16 & o) ? 0 : 11;
                    break;
                case 10:
                case 12:
                case 13:
                case 20:
                case 21:
                case 22:
                case 30:
                case 31:
                case 32:
                case 40:
                case 41:
                case 42:
                case 50:
                case 51:
                case 52:
                    a = r;
                    break;
                default:
                    return i("parseProfileLevelId() | unrecognized level_idc:%s", r), null
            }
            for (const e of d)
                if (s === e.profile_idc && e.profile_iop.isMatch(o)) return new n(e.profile, a);
            return i("parseProfileLevelId() | unrecognized profile_idc/profile_iop combination"), null
        }, t.profileLevelIdToString = function(e) {
            if (0 == e.level) switch (e.profile) {
                case 1:
                    return "42f00b";
                case 2:
                    return "42100b";
                case 3:
                    return "4d100b";
                default:
                    return i("profileLevelIdToString() | Level 1_b not is allowed for profile:%s", e.profile), null
            }
            let t;
            switch (e.profile) {
                case 1:
                    t = "42e0";
                    break;
                case 2:
                    t = "4200";
                    break;
                case 3:
                    t = "4d00";
                    break;
                case 4:
                    t = "640c";
                    break;
                case 5:
                    t = "6400";
                    break;
                default:
                    return i("profileLevelIdToString() | unrecognized profile:%s", e.profile), null
            }
            let r = e.level.toString(16);
            return 1 === r.length && (r = "0" + r), `${t}${r}`
        }, t.parseSdpProfileLevelId = function(e = {}) {
            const r = e["profile-level-id"];
            return r ? t.parseProfileLevelId(r) : o
        }, t.isSameProfile = function(e = {}, r = {}) {
            const i = t.parseSdpProfileLevelId(e),
                n = t.parseSdpProfileLevelId(r);
            return Boolean(i && n && i.profile === n.profile)
        }, t.generateProfileLevelIdForAnswer = function(e = {}, r = {}) {
            if (!e["profile-level-id"] && !r["profile-level-id"]) return i("generateProfileLevelIdForAnswer() | no profile-level-id in local and remote params"), null;
            const o = t.parseSdpProfileLevelId(e),
                s = t.parseSdpProfileLevelId(r);
            if (!o) throw new TypeError("invalid local_profile_level_id");
            if (!s) throw new TypeError("invalid remote_profile_level_id");
            if (o.profile !== s.profile) throw new TypeError("H264 Profile mismatch");
            const a = u(e) && u(r),
                d = o.level,
                c = s.level,
                l = function(e, t) {
                    return 0 === e ? 10 !== t && 0 !== t : 0 === t ? 10 !== e : e < t
                }(p = d, f = c) ? p : f;
            var p, f;
            const h = a ? d : l;
            return i("generateProfileLevelIdForAnswer() | result: [profile:%s, level:%s]", o.profile, h), t.profileLevelIdToString(new n(o.profile, h))
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__awaiter || function(e, t, r, i) {
            return new(r || (r = Promise))((function(n, o) {
                function s(e) {
                    try {
                        d(i.next(e))
                    } catch (e) {
                        o(e)
                    }
                }

                function a(e) {
                    try {
                        d(i.throw(e))
                    } catch (e) {
                        o(e)
                    }
                }

                function d(e) {
                    var t;
                    e.done ? n(e.value) : (t = e.value, t instanceof r ? t : new r((function(e) {
                        e(t)
                    }))).then(s, a)
                }
                d((i = i.apply(e, t || [])).next())
            }))
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        t.AwaitQueue = class {
            constructor({
                ClosedErrorClass: e = Error,
                StoppedErrorClass: t = Error
            } = {
                ClosedErrorClass: Error,
                StoppedErrorClass: Error
            }) {
                this.closed = !1, this.pendingTasks = [], this.ClosedErrorClass = Error, this.StoppedErrorClass = Error, this.ClosedErrorClass = e, this.StoppedErrorClass = t
            }
            get size() {
                return this.pendingTasks.length
            }
            close() {
                if (!this.closed) {
                    this.closed = !0;
                    for (const e of this.pendingTasks) e.stopped = !0, e.reject(new this.ClosedErrorClass("AwaitQueue closed"));
                    this.pendingTasks.length = 0
                }
            }
            push(e, t) {
                return i(this, void 0, void 0, (function*() {
                    if (this.closed) throw new this.ClosedErrorClass("AwaitQueue closed");
                    if ("function" != typeof e) throw new TypeError("given task is not a function");
                    if (!e.name && t) try {
                        Object.defineProperty(e, "name", {
                            value: t
                        })
                    } catch (e) {}
                    return new Promise((r, i) => {
                        const n = {
                            task: e,
                            name: t,
                            resolve: r,
                            reject: i,
                            stopped: !1,
                            enqueuedAt: new Date,
                            executedAt: void 0
                        };
                        this.pendingTasks.push(n), 1 === this.pendingTasks.length && this.next()
                    })
                }))
            }
            stop() {
                if (!this.closed) {
                    for (const e of this.pendingTasks) e.stopped = !0, e.reject(new this.StoppedErrorClass("AwaitQueue stopped"));
                    this.pendingTasks.length = 0
                }
            }
            dump() {
                const e = new Date;
                return this.pendingTasks.map(t => ({
                    task: t.task,
                    name: t.name,
                    enqueuedTime: t.executedAt ? t.executedAt.getTime() - t.enqueuedAt.getTime() : e.getTime() - t.enqueuedAt.getTime(),
                    executingTime: t.executedAt ? e.getTime() - t.executedAt.getTime() : 0
                }))
            }
            next() {
                return i(this, void 0, void 0, (function*() {
                    const e = this.pendingTasks[0];
                    e && (yield this.executeTask(e), this.pendingTasks.shift(), this.next())
                }))
            }
            executeTask(e) {
                return i(this, void 0, void 0, (function*() {
                    if (!e.stopped) {
                        e.executedAt = new Date;
                        try {
                            const t = yield e.task();
                            if (e.stopped) return;
                            e.resolve(t)
                        } catch (t) {
                            if (e.stopped) return;
                            e.reject(t)
                        }
                    }
                }))
            }
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            },
            s = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Chrome74 = void 0;
        const a = o(r(47)),
            d = r(10),
            c = o(r(22)),
            u = o(r(46)),
            l = o(r(112)),
            p = o(r(113)),
            f = r(67),
            h = r(114),
            m = r(20),
            g = s(r(1)),
            v = s(r(0)),
            y = "Chrome74",
            _ = {
                OS: 1024,
                MIS: 1024
            };
        class S extends f.HandlerInterface {
            constructor() {
                super(), this._sendingRemoteRtpParametersByKind = {}, this._mapMidTransceiver = new Map, this._sendStream = new MediaStream, this._transportReady = !1, this._appData = {}
            }
            static createFactory() {
                return () => new S
            }
            get name() {
                return "Chrome74"
            }
            close() {
                if (d.Logger.debug(y, "close()"), this._pc) try {
                    this._pc.onconnectionstatechange = null, this._pc.close()
                } catch (e) {}
            }
            async getNativeRtpCapabilities() {
                d.Logger.debug(y, "getNativeRtpCapabilities()");
                const e = new RTCPeerConnection({
                    iceServers: [],
                    iceTransportPolicy: "all",
                    bundlePolicy: "max-bundle",
                    rtcpMuxPolicy: "require",
                    sdpSemantics: "unified-plan"
                });
                try {
                    e.addTransceiver("audio"), e.addTransceiver("video");
                    const t = await e.createOffer();
                    t.sdp = t.sdp.replace(/a=rtcp-fb:111 transport-cc/g, "a=rtcp-fb:111 transport-cc\r\na=rtcp-fb:111 nack");
                    try {
                        e.close()
                    } catch (e) {}
                    const r = a.parse(t.sdp);
                    return l.extractRtpCapabilities({
                        sdpObject: r
                    })
                } catch (t) {
                    try {
                        e.close()
                    } catch (e) {}
                    throw t
                }
            }
            async getNativeSctpCapabilities() {
                return d.Logger.debug(y, "getNativeSctpCapabilities()"), {
                    numStreams: _
                }
            }
            run({
                direction: e,
                iceParameters: t,
                iceCandidates: r,
                dtlsParameters: i,
                sctpParameters: n,
                iceServers: o,
                iceTransportPolicy: s,
                additionalSettings: a,
                proprietaryConstraints: c,
                extendedRtpCapabilities: l,
                appData: p
            }) {
                d.Logger.debug(y, "run()", p), this._appData = p, this._direction = e, this._sendingRtpParametersByKind = {
                    audio: u.getSendingRtpParameters("audio", l),
                    video: u.getSendingRtpParameters("video", l)
                }, this._sendingRemoteRtpParametersByKind = {
                    audio: u.getSendingRemoteRtpParameters("audio", l),
                    video: u.getSendingRemoteRtpParameters("video", l)
                }, d.Logger.debug(y, "iceServers: %o", o);
                const f = {
                    iceServers: o || [],
                    iceTransportPolicy: s || "all",
                    rtcpMuxPolicy: "require",
                    sdpSemantics: "unified-plan"
                };
                p.encodedInsertableStreams && (f.encodedInsertableStreams = !0), this._pc = new RTCPeerConnection(f, c), this._pc.onconnectionstatechange = () => {
                    switch (this._pc.connectionState) {
                        case "checking":
                            this.emit("@connectionstatechange", "connecting");
                            break;
                        case "connected":
                        case "completed":
                            this.emit("@connectionstatechange", "connected");
                            break;
                        case "failed":
                            this.emit("@connectionstatechange", "failed");
                            break;
                        case "disconnected":
                            this.emit("@connectionstatechange", "disconnected");
                            break;
                        case "closed":
                            this.emit("@connectionstatechange", "closed")
                    }
                }, this._pc.onicecandidate = e => {}, this._pc.onicecandidateerror = e => {
                    console.error("地址收集失败: ", e)
                }
            }
            async updateIceServers(e) {
                d.Logger.debug(y, "updateIceServers()");
                const t = this._pc.getConfiguration();
                t.iceServers = e, this._pc.setConfiguration(t)
            }
            async restartIce(e) {
                if (d.Logger.debug(y, "restartIce()"), this._remoteSdp.updateIceParameters(e), this._transportReady)
                    if (this._direction) {
                        const e = await this._pc.createOffer({
                            iceRestart: !0
                        });
                        e.sdp.indexOf(`a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#`) < 0 && (e.sdp = e.sdp.replace(/a=ice-ufrag:([0-9a-zA-Z=+-_\/\\\\]+)/g, `a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#${this._direction}`));
                        let t = a.parse(e.sdp);
                        t.media.forEach(e => {
                            "audio" === e.type && "send" === this._direction && e.ext && e.rtcpFb && (e.ext = e.ext.filter(e => -1 == e.uri.indexOf("transport-wide-cc") && -1 == e.uri.indexOf("abs-send-time")), e.rtcpFb = e.rtcpFb.map(e => (e.type = e.type.replace(/transport-cc/g, "nack"), e)))
                        }), e.sdp = a.write(t), d.Logger.debug(y, "restartIce() | calling pc.setLocalDescription()"), await this._pc.setLocalDescription(e);
                        const r = {
                            type: "answer",
                            sdp: this._remoteSdp.getSdp()
                        };
                        d.Logger.debug(y, "restartIce() | calling pc.setRemoteDescription() [answer:%o]", r), await this._pc.setRemoteDescription(r)
                    } else {
                        const e = {
                            type: "offer",
                            sdp: this._remoteSdp.getSdp()
                        };
                        d.Logger.debug(y, "restartIce() | calling pc.setRemoteDescription() [offer:%o]", e), await this._pc.setRemoteDescription(e);
                        const t = await this._pc.createAnswer();
                        d.Logger.debug(y, "restartIce() | calling pc.setLocalDescription() [answer:%o]", t), await this._pc.setLocalDescription(t)
                    }
            }
            async getTransportStats() {
                return this._pc.getStats()
            }
            async send({
                track: e,
                encodings: t,
                codecOptions: r,
                codec: i,
                appData: n
            }) {
                this._assertSendDirection(), d.Logger.debug(y, "send() [kind:%s, track.id:%s]", e.kind, e.id, t, n), t && t.length > 1 && t.forEach((e, t) => {
                    e.rid = "r" + t
                });
                const o = c.clone(this._sendingRtpParametersByKind[e.kind], {});
                o.codecs = m.reduceCodecs(o.codecs, i);
                let s = {};
                if ("audio" === n.mediaType && this._pc.audioSender) d.Logger.debug(y, "audioSender更新track: ", this._pc.audioSender.track, "=>", e), this._pc.audioSender.replaceTrack(e);
                else if ("video" === n.mediaType && this._pc.videoSender) d.Logger.debug(y, "videoSender更新track: ", this._pc.videoSender.track, "=>", e), this._pc.videoSender.replaceTrack(e);
                else if ("screenShare" === n.mediaType && this._pc.screenSender) d.Logger.debug(y, "screenSender更新track: ", this._pc.screenSender.track, "=>", e), this._pc.screenSender.replaceTrack(e);
                else {
                    (new MediaStream).addTrack(e), s = this._pc.addTransceiver(e, {
                        direction: "sendonly",
                        streams: [this._sendStream],
                        sendEncodings: t
                    }), "audio" !== n.mediaType || this._pc.audioSender ? "video" !== n.mediaType || this._pc.videoSender ? "screenShare" !== n.mediaType || this._pc.screenSender || (this._pc.screenSender = s.sender) : this._pc.videoSender = s.sender : this._pc.audioSender = s.sender
                }
                d.Logger.debug(y, "send() | [transceivers:%d]", this._pc.getTransceivers().length);
                let u = await this._pc.createOffer();
                u.sdp.indexOf(`a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#`) < 0 && (u.sdp = u.sdp.replace(/a=ice-ufrag:([0-9a-zA-Z=+-_\/\\\\]+)/g, `a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#send`));
                let f, h = a.parse(u.sdp),
                    g = void 0;
                this._transportReady || (g = await this._setupTransport({
                    localDtlsRole: "server",
                    localSdpObject: h
                }));
                const v = s.mid;
                o.mid = v;
                let _ = -1;
                for (let e in h.media)
                    if ("audio" === n.mediaType) {
                        if ("audio" === h.media[e].type) {
                            _ = parseInt(e);
                            break
                        }
                    } else if ("video" === n.mediaType) {
                    if (!("video" !== h.media[e].type || this._pc.screenSender && this._pc.screenSender.offerMediaObject && this._pc.screenSender.offerMediaObject.msid === h.media[e].msid)) {
                        _ = parseInt(e);
                        break
                    }
                    if (!("screenShare" !== h.media[e].type || this._pc.videoSender && this._pc.videoSender.offerMediaObject && this._pc.videoSender.offerMediaObject.msid === h.media[e].msid)) {
                        _ = parseInt(e);
                        break
                    }
                }
                if (-1 === _ && (_ = h.media.length - 1), f = h.media[_], d.Logger.debug(y, "要检查M行: ", f), o.rtcp.cname = l.getCname({
                        offerMediaObject: f
                    }), t)
                    if (1 === t.length) {
                        let e = p.getRtpEncodings({
                            offerMediaObject: f
                        });
                        Object.assign(e[0], t[0]), o.encodings = e
                    } else o.encodings = t;
                else o.encodings = p.getRtpEncodings({
                    offerMediaObject: f
                });
                if (o.encodings.length > 1 && ("video/vp8" === o.codecs[0].mimeType.toLowerCase() || "video/h264" === o.codecs[0].mimeType.toLowerCase()))
                    for (const e of o.encodings) e.scalabilityMode = "S1T3";
                return h.media.forEach(e => {
                    "audio" === e.type && e.ext && e.rtcpFb && (e.ext = e.ext.filter(e => -1 == e.uri.indexOf("transport-wide-cc") && -1 == e.uri.indexOf("abs-send-time")), e.rtcpFb = e.rtcpFb.map(e => (e.type = e.type.replace(/transport-cc/g, "nack"), e)))
                }), u.sdp = a.write(h), this._mapMidTransceiver.set(v, s), {
                    localId: v,
                    rtpParameters: o,
                    rtpSender: s.sender,
                    dtlsParameters: g,
                    offer: u
                }
            }
            async fillRemoteRecvSdp({
                kind: e,
                iceParameters: t,
                iceCandidates: r,
                dtlsParameters: i,
                sctpParameters: n,
                sendingRtpParameters: o,
                codecOptions: s,
                offer: u,
                audioProfile: l,
                codec: p
            }) {
                d.Logger.debug(y, "fillRemoteRecvSdp() | calling pc.setLocalDescription()"), await this._pc.setLocalDescription(u), this._remoteSdp || (this._remoteSdp = new h.RemoteSdp({
                    iceParameters: t,
                    iceCandidates: r,
                    dtlsParameters: i,
                    sctpParameters: n
                }), this._remoteSdp.updateDtlsRole("client"));
                const f = c.clone(this._sendingRemoteRtpParametersByKind[e]);
                f.codecs = m.reduceCodecs(f.codecs, p);
                let g = a.parse(this._pc.localDescription.sdp);
                const v = this._remoteSdp.getNextMediaSectionIdx();
                let _ = g.media[v.idx];
                this._remoteSdp.send({
                    offerMediaObject: _,
                    reuseMid: v.reuseMid,
                    offerRtpParameters: o,
                    answerRtpParameters: f,
                    codecOptions: s,
                    extmapAllowMixed: !0
                });
                const S = {
                    type: "answer",
                    sdp: this._remoteSdp.getSdp()
                };
                if (d.Logger.debug(y, "audioProfile设置为: ", l), l) {
                    let e = null;
                    switch (l) {
                        case "speech_low_quality":
                            e = "maxplaybackrate=16000;sprop-maxcapturerate=16000;maxaveragebitrate=32000";
                            break;
                        case "speech_standard":
                            e = "maxplaybackrate=32000;sprop-maxcapturerate=32000;maxaveragebitrate=36000";
                            break;
                        case "music_standard":
                            e = "maxplaybackrate=48000;sprop-maxcapturerate=48000;";
                            break;
                        case "standard_stereo":
                            e = "stereo=1;sprop-stereo=1;maxplaybackrate=48000;sprop-maxcapturerate=48000;maxaveragebitrate=56000";
                            break;
                        case "high_quality":
                            e = "maxplaybackrate=48000;sprop-maxcapturerate=48000;maxaveragebitrate=128000";
                            break;
                        case "high_quality_stereo":
                            e = "stereo=1;sprop-stereo=1;maxplaybackrate=48000;sprop-maxcapturerate=48000;maxaveragebitrate=192000"
                    }
                    S.sdp.indexOf("a=fmtp:111") && (S.sdp = S.sdp.replace(/a=fmtp:111 ([0-9=;a-zA-Z]*)/, "a=fmtp:111 minptime=10;useinbandfec=1;" + e)), S.sdp = S.sdp.replace(/a=rtcp-fb:111 transport-cc/g, "a=maxptime:60")
                }
                d.Logger.debug(y, "fillRemoteRecvSdp() | calling pc.setRemoteDescription() [answer]: ", S.sdp), await this._pc.setRemoteDescription(S)
            }
            async stopSending(e, t) {
                this._assertSendDirection(), d.Logger.debug(y, "stopSending() [localId:%s]", e);
                const r = this._mapMidTransceiver.get(e);
                if (!r) throw new g.default({
                    code: v.default.NOT_FOUND,
                    message: "associated RTCRtpTransceiver not found"
                });
                "audio" === t ? this._pc.audioSender.replaceTrack(null) : "video" === t ? this._pc.videoSender.replaceTrack(null) : "screenShare" === t ? this._pc.screenSender.replaceTrack(null) : r.sender.replaceTrack(null);
                const i = await this._pc.createOffer();
                i.sdp.indexOf(`a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#`) < 0 && (i.sdp = i.sdp.replace(/a=ice-ufrag:([0-9a-zA-Z=+-\/\\\\]+)/g, `a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#send`));
                let n = a.parse(i.sdp);
                n.media.forEach(e => {
                    "audio" === e.type && e.ext && e.rtcpFb && (e.ext = e.ext.filter(e => -1 == e.uri.indexOf("transport-wide-cc") && -1 == e.uri.indexOf("abs-send-time")), e.rtcpFb = e.rtcpFb.map(e => (e.type = e.type.replace(/transport-cc/g, "nack"), e)))
                }), i.sdp = a.write(n), d.Logger.debug(y, "stopSending() | calling pc.setLocalDescription()");
                try {
                    await this._pc.setLocalDescription(i)
                } catch (e) {
                    d.Logger.debug(y, "setLocalDescription error = %o", e)
                }
                const o = {
                    type: "answer",
                    sdp: this._remoteSdp.getSdp()
                };
                d.Logger.debug(y, "stopSending() | calling pc.setRemoteDescription() [answer:%o]", o), await this._pc.setRemoteDescription(o)
            }
            async replaceTrack(e, t) {
                this._assertSendDirection(), t ? d.Logger.debug(y, "replaceTrack() [localId:%s, track.id:%s]", e, t.id) : d.Logger.debug(y, "replaceTrack() [localId:%s, no track]", e);
                const r = this._mapMidTransceiver.get(e);
                if (!r) throw new g.default({
                    code: v.default.NOT_FOUND,
                    message: "associated RTCRtpTransceiver not found"
                });
                await r.sender.replaceTrack(t)
            }
            async setMaxSpatialLayer(e, t) {
                this._assertSendDirection(), d.Logger.debug(y, "setMaxSpatialLayer() [localId:%s, spatialLayer:%s]", e, t);
                const r = this._mapMidTransceiver.get(e);
                if (!r) throw new g.default({
                    code: v.default.NOT_FOUND,
                    message: "associated RTCRtpTransceiver not found"
                });
                const i = r.sender.getParameters();
                i.encodings.forEach((e, r) => {
                    e.active = r <= t
                }), await r.sender.setParameters(i)
            }
            async setRtpEncodingParameters(e, t) {
                this._assertSendDirection(), d.Logger.debug(y, "setRtpEncodingParameters() [localId:%s, params:%o]", e, t);
                const r = this._mapMidTransceiver.get(e);
                if (!r) throw new g.default({
                    code: v.default.NOT_FOUND,
                    message: "associated RTCRtpTransceiver not found"
                });
                const i = r.sender.getParameters();
                i.encodings.forEach((e, r) => {
                    i.encodings[r] = Object.assign(Object.assign({}, e), t)
                }), await r.sender.setParameters(i)
            }
            async getSenderStats(e) {
                this._assertSendDirection();
                const t = this._mapMidTransceiver.get(e);
                if (!t) throw new g.default({
                    code: v.default.NOT_FOUND,
                    message: "associated RTCRtpTransceiver not found"
                });
                return t.sender.getStats()
            }
            async recoverTransceiver(e, t, r) {
                d.Logger.debug(y, "recoverTransceiver() [kind:%s, remoteUid:%s, mid: %s]", r, e, t);
                const i = this._mapMidTransceiver.get(t);
                i ? i.isUseless = !0 : d.Logger.debug(y, "recoverTransceiver() transceiver undefined")
            }
            async prepareLocalSdp(e, t) {
                d.Logger.debug(y, "prepareLocalSdp() [kind:%s, remoteUid:%s]", e, t);
                let r = -1;
                for (const t of this._mapMidTransceiver.keys()) {
                    const i = this._mapMidTransceiver.get(t);
                    if (!i) continue;
                    const n = i.receiver && i.receiver.track && i.receiver.track.kind || e;
                    if (d.Logger.debug(y, "prepareLocalSdp() transceiver M行信息 [mid: %s, mediaType: %s, isUseless: %s]", i.mid || t, n, i.isUseless), i.isUseless && n === e) {
                        r = t - 0, i.isUseless = !1;
                        break
                    }
                }
                let i = this._pc.localDescription,
                    n = null; - 1 === r && (d.Logger.debug(y, "prepareLocalSdp() 添加一个M行"), n = this._pc.addTransceiver(e, {
                    direction: "recvonly"
                }), i = await this._pc.createOffer(), i.sdp.indexOf(`a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#`) < 0 && (i.sdp = i.sdp.replace(/a=ice-ufrag:([0-9a-zA-Z=+-_\/\\\\]+)/g, `a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#recv`), i.sdp = i.sdp.replace(/a=rtcp-fb:111 transport-cc/g, "a=rtcp-fb:111 transport-cc\r\na=rtcp-fb:111 nack")), d.Logger.debug(y, "prepareLocalSdp() | calling pc.setLocalDescription()"), await this._pc.setLocalDescription(i));
                const o = a.parse(i.sdp);
                let s = void 0;
                this._transportReady || (s = await this._setupTransport({
                    localDtlsRole: "server",
                    localSdpObject: o
                }));
                const c = l.extractRtpCapabilities({
                    sdpObject: o
                });
                return -1 === r && (r = o.media.length - 1, this._mapMidTransceiver.set("" + r, n)), {
                    dtlsParameters: s,
                    rtpCapabilities: c,
                    offer: i,
                    mid: r,
                    iceUfragReg: ""
                }
            }
            async receive({
                iceParameters: e,
                iceCandidates: t,
                dtlsParameters: r,
                sctpParameters: i,
                trackId: n,
                kind: o,
                rtpParameters: s,
                offer: c,
                probeSSrc: u = -1,
                remoteUid: l,
                extendedRtpCapabilities: p
            }) {
                this._assertRecvDirection(), d.Logger.debug(y, "receive() [trackId: %s, kind: %s, remoteUid: %s]", n, o, l), this._remoteSdp || (this._remoteSdp = new h.RemoteSdp({
                    iceParameters: e,
                    iceCandidates: t,
                    dtlsParameters: r,
                    sctpParameters: i
                }), this._remoteSdp.updateDtlsRole("client"));
                const f = s.mid;
                if (d.Logger.debug(y, "处理对端的M行 mid: ", f), !f) throw new g.default({
                    code: v.default.NOT_FOUND,
                    message: "No localId"
                });
                const m = this._pc.getTransceivers().length,
                    _ = this._remoteSdp._mediaSections.length + 1;
                if (d.Logger.debug(y, `offerMediaSessionLength: ${m}，answerMediaSessionLength: ${_}`), m < _);
                else if (m > _) {
                    d.Logger.debug(y, "mediaSession 不匹配, 兼容处理");
                    const e = [];
                    a.parse(c.sdp).media.forEach(t => {
                        let r = !1;
                        this._remoteSdp._mediaSections.forEach(e => {
                            t.mid != e.mid || (r = !0)
                        }), r || e.push({
                            mid: t.mid,
                            kind: t.type
                        })
                    }), d.Logger.debug(y, "receive() 检索出来了缺失的media Session: ", e), e.forEach(e => {
                        this._remoteSdp.receive({
                            mid: "" + e.mid,
                            kind: e.kind,
                            offerRtpParameters: {
                                codecs: p.codecs.filter(t => t.kind == e.kind),
                                encodings: [{
                                    ssrc: 0
                                }],
                                headerExtensions: [],
                                rtcp: {},
                                mid: "" + e.mid
                            }
                        }), this._remoteSdp.disableMediaSection("" + e.mid)
                    })
                }
                c.sdp.indexOf(`a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#`) < 0 && (c.sdp = c.sdp.replace(/a=ice-ufrag:([0-9a-zA-Z=+-_\/\\\\]+)/g, `a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#recv`), c.sdp = c.sdp.replace(/a=rtcp-fb:111 transport-cc/g, "a=rtcp-fb:111 transport-cc\r\na=rtcp-fb:111 nack")), this._remoteSdp.receive({
                    mid: f,
                    kind: o,
                    offerRtpParameters: s,
                    streamId: s.rtcp.cname,
                    trackId: n,
                    reuseMid: null
                });
                const S = {
                    type: "answer",
                    sdp: this._remoteSdp.getSdp()
                };
                d.Logger.debug(y, "receive() | calling pc.setRemoteDescription() [answer]: ", S.sdp), "stable" === this._pc.signalingState && (await this._pc.setLocalDescription(c), d.Logger.debug(y, "receive() | calling pc.setLocalDescription()")), await this._pc.setRemoteDescription(S);
                const b = this._pc.getTransceivers().find(e => e.mid === f);
                if (!b) throw new g.default({
                    code: v.default.NOT_FOUND,
                    message: "new RTCRtpTransceiver not found"
                });
                return this._mapMidTransceiver.set(f, b), {
                    localId: f,
                    track: b.receiver.track,
                    rtpReceiver: b.receiver
                }
            }
            async stopReceiving(e) {
                this._assertRecvDirection(), d.Logger.debug(y, "stopReceiving() [localId:%s]", e);
                const t = this._mapMidTransceiver.get(e);
                if (!t || !t.mid) throw new g.default({
                    code: v.default.NOT_FOUND,
                    message: "associated RTCRtpTransceiver not found"
                });
                t.receiver && t.receiver.track && t.receiver.track && "audio" === t.receiver.track.kind || (t.isUseless = !0), this._remoteSdp.disableMediaSection(t.mid);
                const r = this._pc.localDescription;
                r.sdp.indexOf(`a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#`) < 0 && (r.sdp = r.sdp.replace(/a=ice-ufrag:([0-9a-zA-Z=+-_\/\\\\]+)/g, `a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#recv`)), d.Logger.debug(y, "stopReceiving() | calling pc.setLocalDescription()"), await this._pc.setLocalDescription(r);
                const i = {
                    type: "answer",
                    sdp: this._remoteSdp.getSdp()
                };
                d.Logger.debug(y, "stopReceiving() | calling pc.setRemoteDescription() [answer:%s]", i.sdp), await this._pc.setRemoteDescription(i)
            }
            async getReceiverStats(e) {
                this._assertRecvDirection();
                const t = this._mapMidTransceiver.get(e);
                if (!t) throw new g.default({
                    code: v.default.NOT_FOUND,
                    message: "associated RTCRtpTransceiver not found"
                });
                return t.receiver.getStats()
            }
            async _setupTransport({
                localDtlsRole: e,
                localSdpObject: t
            }) {
                t || (t = a.parse(this._pc.localDescription.sdp));
                const r = l.extractDtlsParameters({
                    sdpObject: t
                });
                return r.role = e, this._transportReady = !0, r
            }
            _assertSendDirection() {
                if ("send" !== this._direction) throw new g.default({
                    code: v.default.INVALID_OPERATION,
                    message: 'method can just be called for handlers with "send" direction'
                })
            }
            _assertRecvDirection() {
                if ("recv" !== this._direction) throw new g.default({
                    code: v.default.INVALID_OPERATION,
                    message: 'method can just be called for handlers with "recv" direction'
                })
            }
        }
        t.Chrome74 = S
    }, function(e, t, r) {
        var i = function(e) {
                return String(Number(e)) === e ? Number(e) : e
            },
            n = function(e, t, r) {
                var n = e.name && e.names;
                e.push && !t[e.push] ? t[e.push] = [] : n && !t[e.name] && (t[e.name] = {});
                var o = e.push ? {} : n ? t[e.name] : t;
                ! function(e, t, r, n) {
                    if (n && !r) t[n] = i(e[1]);
                    else
                        for (var o = 0; o < r.length; o += 1) null != e[o + 1] && (t[r[o]] = i(e[o + 1]))
                }(r.match(e.reg), o, e.names, e.name), e.push && t[e.push].push(o)
            },
            o = r(111),
            s = RegExp.prototype.test.bind(/^([a-z])=(.*)/);
        t.parse = function(e) {
            var t = {},
                r = [],
                i = t;
            return e.split(/(\r\n|\r|\n)/).filter(s).forEach((function(e) {
                var t = e[0],
                    s = e.slice(2);
                "m" === t && (r.push({
                    rtp: [],
                    fmtp: []
                }), i = r[r.length - 1]);
                for (var a = 0; a < (o[t] || []).length; a += 1) {
                    var d = o[t][a];
                    if (d.reg.test(s)) return n(d, i, s)
                }
            })), t.media = r, t
        };
        var a = function(e, t) {
            var r = t.split(/=(.+)/, 2);
            return 2 === r.length ? e[r[0]] = i(r[1]) : 1 === r.length && t.length > 1 && (e[r[0]] = void 0), e
        };
        t.parseParams = function(e) {
            return e.split(/;\s?/).reduce(a, {})
        }, t.parseFmtpConfig = t.parseParams, t.parsePayloads = function(e) {
            return e.toString().split(" ").map(Number)
        }, t.parseRemoteCandidates = function(e) {
            for (var t = [], r = e.split(" ").map(i), n = 0; n < r.length; n += 3) t.push({
                component: r[n],
                ip: r[n + 1],
                port: r[n + 2]
            });
            return t
        }, t.parseImageAttributes = function(e) {
            return e.split(" ").map((function(e) {
                return e.substring(1, e.length - 1).split(",").reduce(a, {})
            }))
        }, t.parseSimulcastStreamList = function(e) {
            return e.split(";").map((function(e) {
                return e.split(",").map((function(e) {
                    var t, r = !1;
                    return "~" !== e[0] ? t = i(e) : (t = i(e.substring(1, e.length)), r = !0), {
                        scid: t,
                        paused: r
                    }
                }))
            }))
        }
    }, function(e, t, r) {
        var i = r(111),
            n = /%[sdv%]/g,
            o = function(e) {
                var t = 1,
                    r = arguments,
                    i = r.length;
                return e.replace(n, (function(e) {
                    if (t >= i) return e;
                    var n = r[t];
                    switch (t += 1, e) {
                        case "%%":
                            return "%";
                        case "%s":
                            return String(n);
                        case "%d":
                            return Number(n);
                        case "%v":
                            return ""
                    }
                }))
            },
            s = function(e, t, r) {
                var i = [e + "=" + (t.format instanceof Function ? t.format(t.push ? r : r[t.name]) : t.format)];
                if (t.names)
                    for (var n = 0; n < t.names.length; n += 1) {
                        var s = t.names[n];
                        t.name ? i.push(r[t.name][s]) : i.push(r[t.names[n]])
                    } else i.push(r[t.name]);
                return o.apply(null, i)
            },
            a = ["v", "o", "s", "i", "u", "e", "p", "c", "b", "t", "r", "z", "a"],
            d = ["i", "c", "b", "a"];
        e.exports = function(e, t) {
            t = t || {}, null == e.version && (e.version = 0), null == e.name && (e.name = " "), e.media.forEach((function(e) {
                null == e.payloads && (e.payloads = "")
            }));
            var r = t.outerOrder || a,
                n = t.innerOrder || d,
                o = [];
            return r.forEach((function(t) {
                i[t].forEach((function(r) {
                    r.name in e && null != e[r.name] ? o.push(s(t, r, e)) : r.push in e && null != e[r.push] && e[r.push].forEach((function(e) {
                        o.push(s(t, r, e))
                    }))
                }))
            })), e.media.forEach((function(e) {
                o.push(s("m", i.m[0], e)), n.forEach((function(t) {
                    i[t].forEach((function(r) {
                        r.name in e && null != e[r.name] ? o.push(s(t, r, e)) : r.push in e && null != e[r.push] && e[r.push].forEach((function(e) {
                            o.push(s(t, r, e))
                        }))
                    }))
                }))
            })), o.join("\r\n") + "\r\n"
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.OfferMediaSection = t.AnswerMediaSection = t.MediaSection = void 0;
        const s = o(r(22));
        class a {
            constructor({
                iceParameters: e,
                iceCandidates: t,
                dtlsParameters: r,
                planB: i = !1
            }) {
                if (this._mediaObject = {}, this._planB = i, e && this.setIceParameters(e), t) {
                    this._mediaObject.candidates = [];
                    for (const e of t) {
                        const t = {
                            component: 1
                        };
                        t.foundation = e.foundation, t.ip = e.ip, t.port = e.port, t.priority = e.priority, t.transport = e.protocol, t.type = e.type, e.tcpType && (t.tcptype = e.tcpType), this._mediaObject.candidates.push(t)
                    }
                    this._mediaObject.endOfCandidates = "end-of-candidates", this._mediaObject.iceOptions = "renomination"
                }
                r && this.setDtlsRole(r.role)
            }
            get mid() {
                return String(this._mediaObject.mid)
            }
            get closed() {
                return 0 === this._mediaObject.port
            }
            getObject() {
                return this._mediaObject
            }
            setIceParameters(e) {
                this._mediaObject.iceUfrag = e.usernameFragment, this._mediaObject.icePwd = e.password
            }
            disable() {
                delete this._mediaObject.ext, delete this._mediaObject.ssrcs, delete this._mediaObject.ssrcGroups, delete this._mediaObject.simulcast, delete this._mediaObject.simulcast_03, delete this._mediaObject.rids
            }
            close() {
                this._mediaObject.direction = "inactive", this._mediaObject.port = 0, delete this._mediaObject.ext, delete this._mediaObject.ssrcs, delete this._mediaObject.ssrcGroups, delete this._mediaObject.simulcast, delete this._mediaObject.simulcast_03, delete this._mediaObject.rids, delete this._mediaObject.extmapAllowMixed
            }
        }
        t.MediaSection = a;
        t.AnswerMediaSection = class extends a {
            constructor({
                iceParameters: e,
                iceCandidates: t,
                dtlsParameters: r,
                sctpParameters: i,
                plainRtpParameters: n,
                planB: o = !1,
                offerMediaObject: a,
                offerRtpParameters: c,
                answerRtpParameters: u,
                codecOptions: l,
                extmapAllowMixed: p = !1
            }) {
                switch (super({
                    iceParameters: e,
                    iceCandidates: t,
                    dtlsParameters: r,
                    planB: o
                }), this._mediaObject.mid = String(a.mid), this._mediaObject.type = a.type, this._mediaObject.protocol = a.protocol, n ? (this._mediaObject.connection = {
                    ip: n.ip,
                    version: n.ipVersion
                }, this._mediaObject.port = n.port) : (this._mediaObject.connection = {
                    ip: "127.0.0.1",
                    version: 4
                }, this._mediaObject.port = 7), a.type) {
                    case "audio":
                    case "video":
                        this._mediaObject.direction = "recvonly", this._mediaObject.rtp = [], this._mediaObject.rtcpFb = [], this._mediaObject.fmtp = [];
                        for (const e of u.codecs) {
                            const t = {
                                payload: e.payloadType,
                                codec: d(e),
                                rate: e.clockRate
                            };
                            e.channels > 1 && (t.encoding = e.channels), this._mediaObject.rtp.push(t);
                            const r = s.clone(e.parameters, {});
                            if (l) {
                                const {
                                    opusStereo: t,
                                    opusFec: i,
                                    opusDtx: n,
                                    opusMaxPlaybackRate: o,
                                    opusPtime: s,
                                    videoGoogleStartBitrate: a,
                                    videoGoogleMaxBitrate: d,
                                    videoGoogleMinBitrate: u
                                } = l, p = c.codecs.find(t => t.payloadType === e.payloadType);
                                switch (e.mimeType.toLowerCase()) {
                                    case "audio/opus":
                                        void 0 !== t && (p.parameters["sprop-stereo"] = t ? 1 : 0, r.stereo = t ? 1 : 0), void 0 !== i && (p.parameters.useinbandfec = i ? 1 : 0, r.useinbandfec = i ? 1 : 0), void 0 !== n && (p.parameters.usedtx = n ? 1 : 0, r.usedtx = n ? 1 : 0), void 0 !== o && (r.maxplaybackrate = o), void 0 !== s && (p.parameters.ptime = s, r.ptime = s);
                                        break;
                                    case "video/vp8":
                                    case "video/vp9":
                                    case "video/h264":
                                    case "video/h265":
                                        void 0 !== a && (r["x-google-start-bitrate"] = a), void 0 !== d && (r["x-google-max-bitrate"] = d), void 0 !== u && (r["x-google-min-bitrate"] = u)
                                }
                            }
                            const i = {
                                payload: e.payloadType,
                                config: ""
                            };
                            for (const e of Object.keys(r)) i.config && (i.config += ";"), i.config += `${e}=${r[e]}`;
                            i.config && this._mediaObject.fmtp.push(i);
                            for (const t of e.rtcpFeedback) this._mediaObject.rtcpFb.push({
                                payload: e.payloadType,
                                type: t.type,
                                subtype: t.parameter
                            })
                        }
                        this._mediaObject.payloads = u.codecs.map(e => e.payloadType).join(" "), this._mediaObject.ext = [];
                        for (const e of u.headerExtensions) {
                            (a.ext || []).some(t => t.uri === e.uri) && this._mediaObject.ext.push({
                                uri: e.uri,
                                value: e.id
                            })
                        }
                        if (p && "extmap-allow-mixed" === a.extmapAllowMixed && (this._mediaObject.extmapAllowMixed = "extmap-allow-mixed"), a.simulcast) {
                            this._mediaObject.simulcast = {
                                dir1: "recv",
                                list1: a.simulcast.list1
                            }, this._mediaObject.rids = [];
                            for (const e of a.rids || []) "send" === e.direction && this._mediaObject.rids.push({
                                id: e.id,
                                direction: "recv"
                            })
                        } else if (a.simulcast_03) {
                            this._mediaObject.simulcast_03 = {
                                value: a.simulcast_03.value.replace(/send/g, "recv")
                            }, this._mediaObject.rids = [];
                            for (const e of a.rids || []) "send" === e.direction && this._mediaObject.rids.push({
                                id: e.id,
                                direction: "recv"
                            })
                        }
                        this._mediaObject.rtcpMux = "rtcp-mux", this._mediaObject.rtcpRsize = "rtcp-rsize", this._planB && "video" === this._mediaObject.type && (this._mediaObject.xGoogleFlag = "conference");
                        break;
                    case "application":
                        "number" == typeof a.sctpPort ? (this._mediaObject.payloads = "webrtc-datachannel", this._mediaObject.sctpPort = i.port, this._mediaObject.maxMessageSize = i.maxMessageSize) : a.sctpmap && (this._mediaObject.payloads = i.port, this._mediaObject.sctpmap = {
                            app: "webrtc-datachannel",
                            sctpmapNumber: i.port,
                            maxMessageSize: i.maxMessageSize
                        })
                }
            }
            setDtlsRole(e) {
                switch (e) {
                    case "client":
                        this._mediaObject.setup = "active";
                        break;
                    case "server":
                        this._mediaObject.setup = "passive";
                        break;
                    case "auto":
                        this._mediaObject.setup = "actpass"
                }
            }
        };

        function d(e) {
            const t = new RegExp("^(audio|video)/(.+)", "i").exec(e.mimeType);
            if (!t) throw new TypeError("invalid codec.mimeType");
            return t[2]
        }
        t.OfferMediaSection = class extends a {
            constructor({
                iceParameters: e,
                iceCandidates: t,
                dtlsParameters: r,
                sctpParameters: i,
                plainRtpParameters: n,
                planB: o = !1,
                mid: s,
                kind: a,
                offerRtpParameters: c,
                streamId: u,
                trackId: l,
                oldDataChannelSpec: p = !1
            }) {
                switch (super({
                    iceParameters: e,
                    iceCandidates: t,
                    dtlsParameters: r,
                    planB: o
                }), this._mediaObject.mid = String(s), this._mediaObject.type = a, n ? (this._mediaObject.connection = {
                    ip: n.ip,
                    version: n.ipVersion
                }, this._mediaObject.protocol = "RTP/AVP", this._mediaObject.port = n.port) : (this._mediaObject.connection = {
                    ip: "127.0.0.1",
                    version: 4
                }, this._mediaObject.protocol = i ? "UDP/DTLS/SCTP" : "UDP/TLS/RTP/SAVPF", this._mediaObject.port = 7), a) {
                    case "audio":
                    case "video": {
                        this._mediaObject.direction = "sendonly", this._mediaObject.rtp = [], this._mediaObject.rtcpFb = [], this._mediaObject.fmtp = [], this._planB || (this._mediaObject.msid = `${u||"-"} ${l}`);
                        for (const e of c.codecs) {
                            const t = {
                                payload: e.payloadType || e.localPayloadType || 125,
                                codec: d(e),
                                rate: e.clockRate
                            };
                            e.channels > 1 && (t.encoding = e.channels), this._mediaObject.rtp.push(t);
                            const r = {
                                    payload: e.payloadType || e.localPayloadType || 125,
                                    config: ""
                                },
                                i = e.parameters || e.localParameters || {};
                            for (const e of Object.keys(i)) r.config && (r.config += ";"), r.config += `${e}=${i[e]}`;
                            r.config && this._mediaObject.fmtp.push(r);
                            for (const t of e.rtcpFeedback) this._mediaObject.rtcpFb.push({
                                payload: e.payloadType,
                                type: t.type,
                                subtype: t.parameter
                            })
                        }
                        this._mediaObject.payloads = c.codecs.map(e => e.payloadType || e.localPayloadType || 125).join(" "), this._mediaObject.ext = [];
                        for (const e of c.headerExtensions) this._mediaObject.ext.push({
                            uri: e.uri,
                            value: e.id
                        });
                        this._mediaObject.rtcpMux = "rtcp-mux", this._mediaObject.rtcpRsize = "rtcp-rsize";
                        const e = c.encodings[0],
                            t = e.ssrc,
                            r = e.rtx && e.rtx.ssrc ? e.rtx.ssrc : void 0;
                        this._mediaObject.ssrcs = [], this._mediaObject.ssrcGroups = [], c.rtcp.cname && this._mediaObject.ssrcs.push({
                            id: t,
                            attribute: "cname",
                            value: c.rtcp.cname
                        }), this._planB && this._mediaObject.ssrcs.push({
                            id: t,
                            attribute: "msid",
                            value: `${u||"-"} ${l}`
                        }), r && (c.rtcp.cname && this._mediaObject.ssrcs.push({
                            id: r,
                            attribute: "cname",
                            value: c.rtcp.cname
                        }), this._planB && this._mediaObject.ssrcs.push({
                            id: r,
                            attribute: "msid",
                            value: `${u||"-"} ${l}`
                        }), this._mediaObject.ssrcGroups.push({
                            semantics: "FID",
                            ssrcs: `${t} ${r}`
                        }));
                        break
                    }
                    case "application":
                        p ? (this._mediaObject.payloads = i.port, this._mediaObject.sctpmap = {
                            app: "webrtc-datachannel",
                            sctpmapNumber: i.port,
                            maxMessageSize: i.maxMessageSize
                        }) : (this._mediaObject.payloads = "webrtc-datachannel", this._mediaObject.sctpPort = i.port, this._mediaObject.maxMessageSize = i.maxMessageSize)
                }
            }
            setDtlsRole(e) {
                switch (e) {
                    case "client":
                        this._mediaObject.setup = "active";
                        break;
                    case "server":
                        this._mediaObject.setup = "passive";
                        break;
                    case "auto":
                        this._mediaObject.setup = "actpass"
                }
            }
            planBReceive({
                offerRtpParameters: e,
                streamId: t,
                trackId: r
            }) {
                const i = e.encodings[0],
                    n = i.ssrc,
                    o = i.rtx && i.rtx.ssrc ? i.rtx.ssrc : void 0;
                e.rtcp.cname && this._mediaObject.ssrcs.push({
                    id: n,
                    attribute: "cname",
                    value: e.rtcp.cname
                }), this._mediaObject.ssrcs.push({
                    id: n,
                    attribute: "msid",
                    value: `${t||"-"} ${r}`
                }), o && (e.rtcp.cname && this._mediaObject.ssrcs.push({
                    id: o,
                    attribute: "cname",
                    value: e.rtcp.cname
                }), this._mediaObject.ssrcs.push({
                    id: o,
                    attribute: "msid",
                    value: `${t||"-"} ${r}`
                }), this._mediaObject.ssrcGroups.push({
                    semantics: "FID",
                    ssrcs: `${n} ${o}`
                }))
            }
            planBStopReceiving({
                offerRtpParameters: e
            }) {
                const t = e.encodings[0],
                    r = t.ssrc,
                    i = t.rtx && t.rtx.ssrc ? t.rtx.ssrc : void 0;
                this._mediaObject.ssrcs = this._mediaObject.ssrcs.filter(e => e.id !== r && e.id !== i), i && (this._mediaObject.ssrcGroups = this._mediaObject.ssrcGroups.filter(e => e.ssrcs !== `${r} ${i}`))
            }
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            },
            s = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Safari12 = void 0;
        const a = o(r(47)),
            d = r(10),
            c = o(r(22)),
            u = o(r(46)),
            l = o(r(112)),
            p = o(r(113)),
            f = r(67),
            h = r(114),
            m = r(20),
            g = r(208),
            v = s(r(1)),
            y = s(r(0)),
            _ = r(209),
            S = "Safari12",
            b = {
                OS: 1024,
                MIS: 1024
            };
        class R extends f.HandlerInterface {
            constructor() {
                super(), this._sendingRemoteRtpParametersByKind = {}, this._mapMidTransceiver = new Map, this._sendStream = new MediaStream, this._transportReady = !1, this._appData = {}
            }
            static createFactory() {
                return () => new R
            }
            get name() {
                return "Safari12"
            }
            close() {
                if (d.Logger.debug(S, "close()"), this._pc) try {
                    this._pc.close()
                } catch (e) {}
            }
            async getNativeRtpCapabilities() {
                d.Logger.debug(S, "getNativeRtpCapabilities()");
                const e = new RTCPeerConnection({
                    iceServers: [],
                    iceTransportPolicy: "all",
                    bundlePolicy: "max-bundle",
                    rtcpMuxPolicy: "require"
                });
                try {
                    e.addTransceiver("audio"), e.addTransceiver("video");
                    const t = await e.createOffer();
                    t.sdp = t.sdp.replace(/a=rtcp-fb:111 transport-cc/g, "a=rtcp-fb:111 transport-cc\r\na=rtcp-fb:111 nack");
                    try {
                        e.close()
                    } catch (e) {}
                    const r = a.parse(t.sdp);
                    return l.extractRtpCapabilities({
                        sdpObject: r
                    })
                } catch (t) {
                    try {
                        e.close()
                    } catch (e) {}
                    throw t
                }
            }
            async getNativeSctpCapabilities() {
                return d.Logger.debug(S, "getNativeSctpCapabilities()"), {
                    numStreams: b
                }
            }
            run({
                direction: e,
                iceParameters: t,
                iceCandidates: r,
                dtlsParameters: i,
                sctpParameters: n,
                iceServers: o,
                iceTransportPolicy: s,
                additionalSettings: a,
                proprietaryConstraints: c,
                extendedRtpCapabilities: l,
                appData: p
            }) {
                d.Logger.debug(S, "run()"), this._direction = e, this._appData = p, this._sendingRtpParametersByKind = {
                    audio: u.getSendingRtpParameters("audio", l),
                    video: u.getSendingRtpParameters("video", l)
                }, this._sendingRemoteRtpParametersByKind = {
                    audio: u.getSendingRemoteRtpParameters("audio", l),
                    video: u.getSendingRemoteRtpParameters("video", l)
                }, this._pc = new RTCPeerConnection(Object.assign({
                    iceServers: o || [],
                    iceTransportPolicy: s || "all",
                    bundlePolicy: "max-bundle",
                    rtcpMuxPolicy: "require"
                }, a), c), this._pc.onconnectionstatechange = () => {
                    switch (this._pc.connectionState) {
                        case "checking":
                            this.emit("@connectionstatechange", "connecting");
                            break;
                        case "connected":
                        case "completed":
                            this.emit("@connectionstatechange", "connected");
                            break;
                        case "failed":
                            this.emit("@connectionstatechange", "failed");
                            break;
                        case "disconnected":
                            this.emit("@connectionstatechange", "disconnected");
                            break;
                        case "closed":
                            this.emit("@connectionstatechange", "closed")
                    }
                }
            }
            async updateIceServers(e) {
                d.Logger.debug(S, "updateIceServers()");
                const t = this._pc.getConfiguration();
                t.iceServers = e, this._pc.setConfiguration(t)
            }
            async restartIce(e) {
                if (d.Logger.debug(S, "restartIce()"), this._remoteSdp.updateIceParameters(e), this._transportReady)
                    if (this._direction) {
                        const e = await this._pc.createOffer({
                            iceRestart: !0
                        });
                        e.sdp.indexOf(`a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#`) < 0 && (e.sdp = e.sdp.replace(/a=ice-ufrag:([0-9a-zA-Z=+-_\/\\\\]+)/g, `a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#${this._direction}`));
                        let t = a.parse(e.sdp);
                        t.media.forEach(e => {
                            "audio" === e.type && "send" === this._direction && e.ext && e.rtcpFb && (e.ext = e.ext.filter(e => -1 == e.uri.indexOf("transport-wide-cc") && -1 == e.uri.indexOf("abs-send-time")), e.rtcpFb = e.rtcpFb.map(e => (e.type = e.type.replace(/transport-cc/g, "nack"), e)))
                        }), e.sdp = a.write(t), d.Logger.debug(S, "restartIce() | calling pc.setLocalDescription() [offer:%o]", e), await this._pc.setLocalDescription(e);
                        const r = {
                            type: "answer",
                            sdp: this._remoteSdp.getSdp()
                        };
                        d.Logger.debug(S, "restartIce() | calling pc.setRemoteDescription() [answer:%o]", r), await this._pc.setRemoteDescription(r)
                    } else {
                        const e = {
                            type: "offer",
                            sdp: this._remoteSdp.getSdp()
                        };
                        d.Logger.debug(S, "restartIce() | calling pc.setRemoteDescription() [offer:%o]", e), await this._pc.setRemoteDescription(e);
                        const t = await this._pc.createAnswer();
                        d.Logger.debug(S, "restartIce() | calling pc.setLocalDescription() [answer:%o]", t), await this._pc.setLocalDescription(t)
                    }
            }
            async getTransportStats() {
                return this._pc.getStats()
            }
            async send({
                track: e,
                encodings: t,
                codecOptions: r,
                codec: i,
                appData: n
            }) {
                this._assertSendDirection(), d.Logger.debug(S, "send() [kind:%s, track.id:%s]", e.kind, e.id);
                const o = c.clone(this._sendingRtpParametersByKind[e.kind], {});
                o.codecs = m.reduceCodecs(o.codecs, i);
                let s = {};
                if ("audio" === n.mediaType && this._pc.audioSender) d.Logger.warn(S, "audioSender更新track: ", this._pc.audioSender.track, "=>", e), this._pc.audioSender.replaceTrack(e);
                else if ("video" === n.mediaType && this._pc.videoSender) d.Logger.warn(S, "videoSender更新track: ", this._pc.videoSender.track, "=>", e), this._pc.videoSender.replaceTrack(e);
                else if ("screenShare" === n.mediaType && this._pc.screenSender) d.Logger.warn(S, "screenSender更新track: ", this._pc.screenSender.track, "=>", e), this._pc.screenSender.replaceTrack(e);
                else {
                    let r = new MediaStream;
                    r.addTrack(e), s = this._pc.addTransceiver(e, {
                        direction: "sendonly",
                        streams: [r],
                        sendEncodings: t
                    })
                }
                "audio" !== n.mediaType || this._pc.audioSender ? "video" !== n.mediaType || this._pc.videoSender ? "screenShare" !== n.mediaType || this._pc.screenSender || (this._pc.screenSender = s.sender) : this._pc.videoSender = s.sender : this._pc.audioSender = s.sender, d.Logger.debug(S, "send() | [transceivers:%d]", this._pc.getTransceivers().length);
                let u = await this._pc.createOffer();
                u.sdp.indexOf(`a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#`) < 0 && (u.sdp = u.sdp.replace(/a=ice-ufrag:([0-9a-zA-Z=+-_\/\\\\]+)/g, `a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#send`));
                let f, h = a.parse(u.sdp),
                    v = void 0;
                if (this._transportReady || (v = await this._setupTransport({
                        localDtlsRole: "server",
                        localSdpObject: h
                    })), t && t.length > 1) {
                    d.Logger.debug(S, "send() | enabling legacy simulcast"), h = a.parse(u.sdp);
                    let e = g.getMediaSecionIdx(h, n, this._pc);
                    f = h.media[e], p.addLegacySimulcast({
                        offerMediaObject: f,
                        numStreams: t.length
                    }), u = {
                        type: "offer",
                        sdp: a.write(h)
                    }
                }
                d.Logger.debug(S, "send() | calling pc.setLocalDescription() [offer:%o]", u);
                const y = s.mid;
                o.mid = y, h = a.parse(u.sdp);
                let _ = g.getMediaSecionIdx(h, n, this._pc);
                if (f = h.media[_], o.rtcp.cname = l.getCname({
                        offerMediaObject: f
                    }), o.encodings = p.getRtpEncodings({
                        offerMediaObject: f
                    }), t)
                    for (let e = 0; e < o.encodings.length; ++e) t[e] && Object.assign(o.encodings[e], t[e]);
                if (o.encodings.length > 1 && ("video/vp8" === o.codecs[0].mimeType.toLowerCase() || "video/h264" === o.codecs[0].mimeType.toLowerCase()))
                    for (const e of o.encodings) e.scalabilityMode = "S1T3";
                return h.media.forEach(e => {
                    "audio" === e.type && e.ext && e.rtcpFb && (e.ext = e.ext.filter(e => -1 == e.uri.indexOf("transport-wide-cc") && -1 == e.uri.indexOf("abs-send-time")), e.rtcpFb = e.rtcpFb.map(e => (e.type = e.type.replace(/transport-cc/g, "nack"), e)))
                }), u.sdp = a.write(h), this._mapMidTransceiver.set(y, s), {
                    localId: y,
                    rtpParameters: o,
                    rtpSender: s.sender,
                    dtlsParameters: v,
                    offer: u
                }
            }
            async fillRemoteRecvSdp({
                kind: e,
                iceParameters: t,
                iceCandidates: r,
                dtlsParameters: i,
                sctpParameters: n,
                sendingRtpParameters: o,
                codecOptions: s,
                offer: u,
                audioProfile: l,
                codec: p
            }) {
                let f = a.parse(u.sdp);
                f.media.forEach(e => {
                    "audio" === e.type && e.ext && e.rtcpFb && (e.ext = e.ext.filter(e => -1 == e.uri.indexOf("transport-wide-cc") && -1 == e.uri.indexOf("abs-send-time")), e.rtcpFb = e.rtcpFb.map(e => (e.type = e.type.replace(/transport-cc/g, "nack"), e)))
                }), u.sdp = a.write(f), d.Logger.debug(S, "fillRemoteRecvSdp() | calling pc.setLocalDescription()"), await this._pc.setLocalDescription(u), this._remoteSdp || (this._remoteSdp = new h.RemoteSdp({
                    iceParameters: t,
                    iceCandidates: r,
                    dtlsParameters: i,
                    sctpParameters: n
                }), this._remoteSdp.updateDtlsRole("client"));
                const g = c.clone(this._sendingRemoteRtpParametersByKind[e]);
                g.codecs = m.reduceCodecs(g.codecs, p);
                let v = a.parse(this._pc.localDescription.sdp);
                const y = this._remoteSdp.getNextMediaSectionIdx();
                let b = v.media[y.idx];
                this._remoteSdp.send({
                    offerMediaObject: b,
                    reuseMid: y.reuseMid,
                    offerRtpParameters: o,
                    answerRtpParameters: g,
                    codecOptions: s,
                    extmapAllowMixed: !0
                });
                const R = {
                    type: "answer",
                    sdp: this._remoteSdp.getSdp()
                };
                if (d.Logger.debug(S, "audioProfile设置为: ", l), l) {
                    let e = null;
                    switch (l) {
                        case "speech_low_quality":
                            e = "maxplaybackrate=16000;sprop-maxcapturerate=16000;maxaveragebitrate=32000";
                            break;
                        case "speech_standard":
                            e = "maxplaybackrate=32000;sprop-maxcapturerate=32000;maxaveragebitrate=36000";
                            break;
                        case "music_standard":
                            e = "maxplaybackrate=48000;sprop-maxcapturerate=48000;";
                            break;
                        case "standard_stereo":
                            e = "stereo=1;sprop-stereo=1;maxplaybackrate=48000;sprop-maxcapturerate=48000;maxaveragebitrate=56000";
                            break;
                        case "high_quality":
                            e = "maxplaybackrate=48000;sprop-maxcapturerate=48000;maxaveragebitrate=128000";
                            break;
                        case "high_quality_stereo":
                            e = "stereo=1;sprop-stereo=1;maxplaybackrate=48000;sprop-maxcapturerate=48000;maxaveragebitrate=192000"
                    }
                    R.sdp.indexOf("a=fmtp:111") && (R.sdp = R.sdp.replace(/a=fmtp:111 ([0-9=;a-zA-Z]*)/, "a=fmtp:111 minptime=10;useinbandfec=1;" + e)), R.sdp = R.sdp.replace(/a=rtcp-fb:111 transport-cc/g, "a=maxptime:60")
                }
                _.canShimVideoOrientation(u, R) && _.shimVideoOrientation(u, R), d.Logger.debug(S, "fillRemoteRecvSdp() | calling pc.setRemoteDescription() [answer:%o]", R.sdp), await this._pc.setRemoteDescription(R)
            }
            async stopSending(e, t) {
                this._assertSendDirection(), d.Logger.debug(S, "stopSending() [localId:%s]", e);
                const r = this._mapMidTransceiver.get(e);
                if (!r) throw new v.default({
                    code: y.default.NOT_FOUND,
                    message: "associated RTCRtpTransceiver not found"
                });
                "audio" === t ? (this._pc.audioSender.replaceTrack(null), d.Logger.debug(S, "删除发送的audio track: ", this._pc.audioSender)) : "video" === t ? (this._pc.videoSender.replaceTrack(null), d.Logger.debug(S, "删除发送的video track: ", this._pc.videoSender)) : "screenShare" === t ? (this._pc.screenSender.replaceTrack(null), d.Logger.debug(S, "删除发送的screen track: ", this._pc.screenSender)) : r.sender.replaceTrack(null);
                const i = await this._pc.createOffer();
                i.sdp.indexOf(`a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#`) < 0 && (i.sdp = i.sdp.replace(/a=ice-ufrag:([0-9a-zA-Z=+-\/\\\\]+)/g, `a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#send`));
                let n = a.parse(i.sdp);
                n.media.forEach(e => {
                    "audio" === e.type && e.ext && e.rtcpFb && (e.ext = e.ext.filter(e => -1 == e.uri.indexOf("transport-wide-cc") && -1 == e.uri.indexOf("abs-send-time")), e.rtcpFb = e.rtcpFb.map(e => (e.type = e.type.replace(/transport-cc/g, "nack"), e)))
                }), i.sdp = a.write(n), d.Logger.debug(S, "stopSending() | calling pc.setLocalDescription() [offer:%o]", i.sdp), await this._pc.setLocalDescription(i);
                const o = {
                    type: "answer",
                    sdp: this._remoteSdp.getSdp()
                };
                d.Logger.debug(S, "stopSending() | calling pc.setRemoteDescription() [answer:%o]", o), await this._pc.setRemoteDescription(o)
            }
            async replaceTrack(e, t) {
                this._assertSendDirection(), t ? d.Logger.debug(S, "replaceTrack() [localId:%s, track.id:%s]", e, t.id) : d.Logger.debug(S, "replaceTrack() [localId:%s, no track]", e);
                const r = this._mapMidTransceiver.get(e);
                if (!r) throw new v.default({
                    code: y.default.NOT_FOUND,
                    message: "associated RTCRtpTransceiver not found"
                });
                await r.sender.replaceTrack(t)
            }
            async setMaxSpatialLayer(e, t) {
                this._assertSendDirection(), d.Logger.debug(S, "setMaxSpatialLayer() [localId:%s, spatialLayer:%s]", e, t);
                const r = this._mapMidTransceiver.get(e);
                if (!r) throw new v.default({
                    code: y.default.NOT_FOUND,
                    message: "associated RTCRtpTransceiver not found"
                });
                const i = r.sender.getParameters();
                i.encodings.forEach((e, r) => {
                    e.active = r <= t
                }), await r.sender.setParameters(i)
            }
            async setRtpEncodingParameters(e, t) {
                this._assertSendDirection(), d.Logger.debug(S, "setRtpEncodingParameters() [localId:%s, params:%o]", e, t);
                const r = this._mapMidTransceiver.get(e);
                if (!r) throw new v.default({
                    code: y.default.NOT_FOUND,
                    message: "associated RTCRtpTransceiver not found"
                });
                const i = r.sender.getParameters();
                i.encodings.forEach((e, r) => {
                    i.encodings[r] = Object.assign(Object.assign({}, e), t)
                }), await r.sender.setParameters(i)
            }
            async getSenderStats(e) {
                this._assertSendDirection();
                const t = this._mapMidTransceiver.get(e);
                if (!t) throw new v.default({
                    code: y.default.NOT_FOUND,
                    message: "associated RTCRtpTransceiver not found"
                });
                return t.sender.getStats()
            }
            async recoverTransceiver(e, t, r) {
                d.Logger.debug(S, "recoverTransceiver() [kind:%s, remoteUid:%s, mid: %s]", r, e, t);
                const i = this._mapMidTransceiver.get(t);
                i ? i.isUseless = !0 : d.Logger.debug(S, "recoverTransceiver() transceiver undefined")
            }
            async prepareLocalSdp(e, t) {
                d.Logger.debug(S, "prepareLocalSdp() [kind:%s, remoteUid:%s]", e, t);
                let r = -1;
                for (const t of this._mapMidTransceiver.keys()) {
                    const i = this._mapMidTransceiver.get(t);
                    if (!i) continue;
                    const n = i.receiver && i.receiver.track && i.receiver.track.kind || e;
                    if (d.Logger.debug(S, "prepareLocalSdp() transceiver M行信息 [mid: %s, mediaType: %s, isUseless: %s]", i.mid || t, n, i.isUseless), i.isUseless && n === e) {
                        r = t - 0, i.isUseless = !1;
                        break
                    }
                }
                let i = this._pc.localDescription,
                    n = null; - 1 === r && (d.Logger.debug(S, "prepareLocalSdp() 添加一个M行"), n = this._pc.addTransceiver(e, {
                    direction: "recvonly"
                }), i = await this._pc.createOffer(), i.sdp.indexOf(`a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#`) < 0 && (i.sdp = i.sdp.replace(/a=ice-ufrag:([0-9a-zA-Z=+-_\/\\\\]+)/g, `a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#recv`), i.sdp = i.sdp.replace(/a=rtcp-fb:111 transport-cc/g, "a=rtcp-fb:111 transport-cc\r\na=rtcp-fb:111 nack")), d.Logger.debug(S, "prepareLocalSdp() | calling pc.setLocalDescription()"), await this._pc.setLocalDescription(i));
                const o = a.parse(i.sdp);
                let s = void 0;
                this._transportReady || (s = await this._setupTransport({
                    localDtlsRole: "server",
                    localSdpObject: o
                }));
                const c = l.extractRtpCapabilities({
                    sdpObject: o
                });
                return -1 === r && (r = o.media.length - 1, this._mapMidTransceiver.set("" + r, n)), {
                    dtlsParameters: s,
                    rtpCapabilities: c,
                    offer: i,
                    mid: r,
                    iceUfragReg: ""
                }
            }
            async receive({
                iceParameters: e,
                iceCandidates: t,
                dtlsParameters: r,
                sctpParameters: i,
                trackId: n,
                kind: o,
                rtpParameters: s,
                offer: c,
                probeSSrc: u = -1,
                remoteUid: l,
                extendedRtpCapabilities: p
            }) {
                if (this._assertRecvDirection(), !s.mid) throw new v.default({
                    code: y.default.NOT_FOUND,
                    message: "No rtpParameters.mid"
                });
                d.Logger.debug(S, "receive() [trackId: %s, kind: %s, remoteUid: %s]", n, o, l), this._remoteSdp || (this._remoteSdp = new h.RemoteSdp({
                    iceParameters: e,
                    iceCandidates: t,
                    dtlsParameters: r,
                    sctpParameters: i
                }), this._remoteSdp.updateDtlsRole("client"));
                const f = s.mid;
                d.Logger.debug(S, "处理对端的M行 mid: ", f);
                const m = this._pc.getTransceivers().length,
                    g = this._remoteSdp._mediaSections.length + 1;
                if (d.Logger.debug(S, `offerMediaSessionLength: ${m}，answerMediaSessionLength: ${g}`), m < g);
                else if (m > g) {
                    d.Logger.debug(S, "mediaSession 不匹配, 兼容处理");
                    const e = [];
                    a.parse(c.sdp).media.forEach(t => {
                        let r = !1;
                        this._remoteSdp._mediaSections.forEach(e => {
                            t.mid != e.mid || (r = !0)
                        }), r || e.push({
                            mid: t.mid,
                            kind: t.type
                        })
                    }), d.Logger.debug(S, "receive() 检索出来了缺失的media Session: ", e), e.forEach(e => {
                        this._remoteSdp.receive({
                            mid: "" + e.mid,
                            kind: e.kind,
                            offerRtpParameters: {
                                codecs: p.codecs.filter(t => t.kind == e.kind),
                                encodings: [{
                                    ssrc: 0
                                }],
                                headerExtensions: [],
                                rtcp: {},
                                mid: "" + e.mid
                            }
                        }), this._remoteSdp.disableMediaSection("" + e.mid)
                    })
                }
                c.sdp.indexOf(`a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#`) < 0 && (c.sdp = c.sdp.replace(/a=ice-ufrag:([0-9a-zA-Z=+-_\/\\\\]+)/g, `a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#recv`), c.sdp = c.sdp.replace(/a=rtcp-fb:111 transport-cc/g, "a=rtcp-fb:111 transport-cc\r\na=rtcp-fb:111 nack")), this._remoteSdp.receive({
                    mid: s.mid,
                    kind: o,
                    offerRtpParameters: s,
                    streamId: s.rtcp.cname,
                    trackId: n
                });
                const _ = {
                    type: "answer",
                    sdp: this._remoteSdp.getSdp()
                };
                d.Logger.debug(S, "receive() | calling pc.setRemoteDescription() [answer]: ", _.sdp), "stable" === this._pc.signalingState && (await this._pc.setLocalDescription(c), d.Logger.debug(S, "receive() | calling pc.setLocalDescription()")), await this._pc.setRemoteDescription(_);
                const b = this._pc.getTransceivers().find(e => e.mid === f);
                if (!b) throw new v.default({
                    code: y.default.NOT_FOUND,
                    message: "new RTCRtpTransceiver not found"
                });
                return this._mapMidTransceiver.set(f, b), {
                    localId: f,
                    track: b.receiver.track,
                    rtpReceiver: b.receiver
                }
            }
            async stopReceiving(e) {
                this._assertRecvDirection(), d.Logger.debug(S, "stopReceiving() [localId:%s]", e);
                const t = this._mapMidTransceiver.get(e);
                if (!t || !t.mid) throw new v.default({
                    code: y.default.NOT_FOUND,
                    message: "associated RTCRtpTransceiver not found"
                });
                d.Logger.debug(S, "transceiver: ", t), t.receiver && t.receiver.track && t.receiver.track && "audio" === t.receiver.track.kind || (t.isUseless = !0), this._remoteSdp.disableMediaSection(t.mid);
                const r = this._pc.localDescription;
                r.sdp.indexOf(`a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#`) < 0 && (r.sdp = r.sdp.replace(/a=ice-ufrag:([0-9a-zA-Z=+-_\/\\\\]+)/g, `a=ice-ufrag:${this._appData.cid}#${this._appData.uid}#recv`)), d.Logger.debug(S, "stopReceiving() | calling pc.setLocalDescription()"), await this._pc.setLocalDescription(r);
                const i = {
                    type: "answer",
                    sdp: this._remoteSdp.getSdp()
                };
                d.Logger.debug(S, "stopReceiving() | calling pc.setRemoteDescription() [answer:%o]", i.sdp), await this._pc.setRemoteDescription(i)
            }
            async getReceiverStats(e) {
                this._assertRecvDirection();
                const t = this._mapMidTransceiver.get(e);
                if (!t) throw new v.default({
                    code: y.default.NOT_FOUND,
                    message: "associated RTCRtpTransceiver not found"
                });
                return t.receiver.getStats()
            }
            async _setupTransport({
                localDtlsRole: e,
                localSdpObject: t
            }) {
                t || (t = a.parse(this._pc.localDescription.sdp));
                const r = l.extractDtlsParameters({
                    sdpObject: t
                });
                return r.role = e, this._transportReady = !0, r
            }
            _assertSendDirection() {
                if ("send" !== this._direction) throw new v.default({
                    code: y.default.INVALID_OPERATION,
                    message: 'method can just be called for handlers with "send" direction'
                })
            }
            _assertRecvDirection() {
                if ("recv" !== this._direction) throw new v.default({
                    code: y.default.INVALID_OPERATION,
                    message: 'method can just be called for handlers with "recv" direction'
                })
            }
        }
        t.Safari12 = R
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.getMediaSecionIdx = void 0, t.getMediaSecionIdx = function(e, t, r) {
            let i = -1;
            for (let n = 0; n < e.media.length; n++)
                if ("audio" === t.mediaType) {
                    if ("audio" === e.media[n].type) {
                        i = n;
                        break
                    }
                } else if ("video" === t.mediaType) {
                if (!("video" !== e.media[n].type || r.screenSender && r.screenSender.offerMediaObject && r.screenSender.offerMediaObject.msid === e.media[n].msId)) {
                    i = n;
                    break
                }
                if (!("screenShare" !== e.media[n].type || r.videoSender && r.videoSender.offerMediaObject && r.videoSender.offerMediaObject.msid === e.media[n].msId)) {
                    i = n;
                    break
                }
            }
            return -1 === i && (i = e.media.length - 1), i
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.shimVideoOrientation = t.canShimVideoOrientation = void 0;
        const i = r(26),
            n = r(13),
            o = "a=extmap:4 ";
        t.canShimVideoOrientation = function(e, t) {
            var r, s, a;
            if ("never" === n.getParameters().shimVideoOrientation) return !1;
            if ("ios151" === n.getParameters().shimVideoOrientation) {
                if (!i.RtcSystem.ios()) return !1;
                if ("safari" === (null === (r = i.RtcSystem.browser) || void 0 === r ? void 0 : r.ua)) {
                    if (parseFloat(null === (s = i.RtcSystem.browser) || void 0 === s ? void 0 : s.UIVersion) < 15.1) return !1
                } else {
                    if ("weixin" !== (null === (a = i.RtcSystem.browser) || void 0 === a ? void 0 : a.ua)) return !1;
                    if (!navigator.userAgent.match(/OS 15_[1-9]/)) return !1
                }
            }
            if (-1 === t.sdp.indexOf("H264") || -1 === t.sdp.indexOf("m=video")) return !1;
            const d = e.sdp.match(/\r\n(.*3gpp\:video-orientation.*)\r\n/);
            return !!(d && e.sdp.indexOf(o) > -1 && -1 === t.sdp.indexOf(d[1]))
        }, t.shimVideoOrientation = function(e, t) {
            var r;
            if (-1 === t.sdp.indexOf("H264") || -1 === t.sdp.indexOf("m=video")) return;
            const n = e.sdp.match(/\r\n(.*3gpp\:video-orientation.*)\r\n/);
            if (n && e.sdp.indexOf(o) > -1 && -1 === t.sdp.indexOf(n[1])) {
                const e = n[1];
                console.log(`shimVideoOrientation for ${i.RtcSystem.browser.ua} ${null===(r=i.RtcSystem.browser)||void 0===r?void 0:r.UIVersion} ${e}`), t.sdp = t.sdp.split(o).join(e + "\r\n" + o)
            } else console.error("Failed to shimVideoOrientation", n, e.sdp.indexOf(o), n && t.sdp.indexOf(n[1]))
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__exportStar || function(e, t) {
                for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || i(t, e, r)
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), n(r(106), t), n(r(108), t), n(r(109), t), n(r(110), t), n(r(211), t), n(r(212), t), n(r(67), t), n(r(33), t)
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.parse = void 0;
        const i = new RegExp("^[LS]([1-9]\\d{0,1})T([1-9]\\d{0,1})");
        t.parse = function(e) {
            const t = i.exec(e || "");
            return t ? {
                spatialLayers: Number(t[1]),
                temporalLayers: Number(t[2])
            } : {
                spatialLayers: 1,
                temporalLayers: 1
            }
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.waitForEvent = void 0, t.waitForEvent = async function(e, t, r) {
            return new Promise((i, n) => {
                let o;
                const s = e => {
                    o && clearTimeout(o), i(e)
                };
                r && (o = setTimeout(() => {
                    e.removeListener(t, s), n(`timed out after ${r}ms:${t}`)
                }, r)), e.once(t, s)
            })
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            },
            s = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.StatsReport = void 0;
        const a = r(3),
            d = r(216),
            c = r(217),
            u = s(r(218)),
            l = s(r(219)),
            p = o(r(38)),
            f = r(12),
            h = r(68),
            m = s(r(240)),
            g = r(127),
            v = h.randomId(),
            y = (new Date).getTime();
        class _ extends a.EventEmitter {
            constructor(e) {
                super(), this._reset(), this.heartbeat_ = -1, this.wsTransport_ = null, this.sdkRef = e.sdkRef, this.adapterRef = e.adapterRef, this.prevStats_ = {}, this.appKey = this.adapterRef.instance._params.appkey || this.adapterRef.channelInfo && this.adapterRef.channelInfo.appKey || "", this.stats = new d.GetStats({
                    adapterRef: this.adapterRef,
                    interval: 1e3
                }), this.stats.on("stats", (e, t) => {
                    this.formativeStatsReport && this.formativeStatsReport.update(e, t)
                }), this.formativeStatsReport = new c.FormativeStatsReport({
                    adapterRef: this.adapterRef,
                    sdkRef: this.sdkRef,
                    appkey: this.appKey
                })
            }
            _reset() {
                this.stats && this.stats.destroy(), this.stats = null, this.formativeStatsReport && this.formativeStatsReport.destroy(), this.formativeStatsReport = null, this.stopHeartbeat()
            }
            stop() {
                this.stats && this.stats.stop(), this.formativeStatsReport && this.formativeStatsReport.stop()
            }
            start() {
                this.formativeStatsReport && this.formativeStatsReport.start();
                let e = g(`0${y}${f.SDK_VERSION}webwebrtc${v}40f5a1a1871e46089e1e5139a779dd77`),
                    t = `wss://statistic.live.126.net/lps-websocket/websocket/collect?deviceId=${v}&isTest=0&sdkVer=${f.SDK_VERSION}&sdktype=webrtc&timestamp=${y}&platform=web&checkSum=${e}`;
                this.wsTransport_ = new l.default({
                    url: t,
                    adapterRef: this.adapterRef
                }), this.wsTransport_.init()
            }
            startHeartbeat() {
                if (-1 === this.heartbeat_) {
                    const e = 2e3;
                    this.adapterRef.logger.log("startHeartbeat..."), this.heartbeat_ = u.default.setInterval(this.doHeartbeat.bind(this), e)
                }
            }
            stopHeartbeat() {
                -1 !== this.heartbeat_ && (u.default.clearInterval(this.heartbeat_), this.heartbeat_ = -1)
            }
            async doHeartbeat() {
                var e;
                try {
                    let t = await (null === (e = this.stats) || void 0 === e ? void 0 : e.getAllStats()),
                        r = this.calculateReport(t);
                    this.wsTransport_.sendPB(r)
                } catch (e) {
                    this.adapterRef.logger.error("getStats失败：", e)
                }
            }
            calculateReport(e) {
                if (p.IS_CHROME) {
                    let a = e.local.audio_ssrc ? e.local.audio_ssrc : [],
                        d = e.local.video_ssrc ? e.local.video_ssrc : [],
                        c = e.local.screen_ssrc ? e.local.screen_ssrc : [],
                        u = e.remote.audio_ssrc ? e.remote.audio_ssrc : [],
                        l = e.remote.video_ssrc ? e.remote.video_ssrc : [],
                        p = e.remote.screen_ssrc ? e.remote.screen_ssrc : [];
                    if (!m.default(this.prevStats_)) var t = this.prevStats_.local.audio_ssrc ? this.prevStats_.local.audio_ssrc : [],
                        r = this.prevStats_.local.video_ssrc ? this.prevStats_.local.video_ssrc : [],
                        i = this.prevStats_.local.screen_ssrc ? this.prevStats_.local.screen_ssrc : [],
                        n = this.prevStats_.remote.audio_ssrc ? this.prevStats_.remote.audio_ssrc : [],
                        o = this.prevStats_.remote.video_ssrc ? this.prevStats_.remote.video_ssrc : [],
                        s = this.prevStats_.remote.screen_ssrc ? this.prevStats_.remote.screen_ssrc : [];
                    if (m.default(this.prevStats_) || a.length !== t.length || d.length !== r.length || c.length !== i.length || u.length !== n.length || l.length !== o.length || p.length !== s.length) {
                        this.prevStats_ = e, Object.keys(this.prevStats_.local).length && (this.prevStats_.local.audio_ssrc && (this.prevStats_.local.audio_ssrc[0].bytesSentPerSecond = this.prevStats_.local.audio_ssrc[0].bytesSent), this.prevStats_.local.video_ssrc && (this.prevStats_.local.video_ssrc[0].bytesSentPerSecond = this.prevStats_.local.video_ssrc[0].bytesSent), this.prevStats_.local.video_ssrc && (this.prevStats_.local.video_ssrc[0].framesEncodedPerSecond = this.prevStats_.local.video_ssrc[0].framesEncoded), this.prevStats_.local.screen_ssrc && (this.prevStats_.local.screen_ssrc[0].bytesSentPerSecond = this.prevStats_.local.screen_ssrc[0].bytesSent), this.prevStats_.local.screen_ssrc && (this.prevStats_.local.screen_ssrc[0].framesEncodedPerSecond = this.prevStats_.local.screen_ssrc[0].framesEncoded));
                        for (let e in this.prevStats_.remote)
                            if (e.indexOf("ssrc") > -1)
                                for (let t = 0; t < this.prevStats_.remote[e].length; t++) this.prevStats_.remote[e][t].bytesReceivedPerSecond = this.prevStats_.remote[e][t].bytesReceived, this.prevStats_.remote[e][t].packetsLostPerSecond = this.prevStats_.remote[e][t].packetsLost, "video" === this.prevStats_.remote[e][t].mediaType && (this.prevStats_.remote[e][t].framesDecodedPerSecond = this.prevStats_.remote[e][t].framesDecoded)
                    } else {
                        let t = e.local,
                            r = this.prevStats_.local,
                            i = e.remote,
                            n = this.prevStats_.remote;
                        Object.keys(t).length && (t.audio_ssrc && (t.audio_ssrc[0].bytesSentPerSecond = (t.audio_ssrc[0].bytesSent - 0 - r.audio_ssrc[0].bytesSent) / 2), t.video_ssrc && (t.video_ssrc[0].bytesSentPerSecond = (t.video_ssrc[0].bytesSent - 0 - r.video_ssrc[0].bytesSent) / 2), t.video_ssrc && (t.video_ssrc[0].framesEncodedPerSecond = (t.video_ssrc[0].framesEncoded - 0 - r.video_ssrc[0].framesEncoded) / 2), t.screen_ssrc && (t.screen_ssrc[0].bytesSentPerSecond = (t.screen_ssrc[0].bytesSent - 0 - r.screen_ssrc[0].bytesSent) / 2), t.screen_ssrc && (t.screen_ssrc[0].framesEncodedPerSecond = (t.screen_ssrc[0].framesEncoded - 0 - r.screen_ssrc[0].framesEncoded) / 2));
                        for (let e in i)
                            if (e.indexOf("ssrc") > -1)
                                for (let t = 0; t < i[e].length; t++) i[e][t].bytesReceivedPerSecond = (i[e][t].bytesReceived - 0 - n[e][t].bytesReceived) / 2, i[e][t].packetsLostPerSecond = (i[e][t].packetsLost - 0 - n[e][t].packetsLost) / 2, "video" === this.prevStats_.remote[e][t].mediaType && (i[e][t].framesDecodedPerSecond = (i[e][t].framesDecoded - 0 - n[e][t].framesDecoded) / 2)
                    }
                } else if (p.IS_SAFARI) {
                    let t = e.local.audio_outbound_rtp ? e.local.audio_outbound_rtp : [],
                        r = e.local.video_outbound_rtp ? e.local.video_outbound_rtp : [],
                        i = e.local.video_track ? e.local.video_track : [],
                        n = e.remote.audio_inbound_rtp ? e.remote.audio_inbound_rtp : [],
                        o = e.remote.video_inbound_rtp ? e.remote.video_inbound_rtp : [],
                        s = e.remote.video_track ? e.remote.video_track : [];
                    if (!m.default(this.prevStats_)) var a = this.prevStats_.local.audio_outbound_rtp ? this.prevStats_.local.audio_outbound_rtp : [],
                        d = this.prevStats_.local.video_outbound_rtp ? this.prevStats_.local.video_outbound_rtp : [],
                        c = this.prevStats_.local.video_track ? this.prevStats_.local.video_track : [],
                        u = this.prevStats_.remote.audio_inbound_rtp ? this.prevStats_.remote.audio_inbound_rtp : [],
                        l = this.prevStats_.remote.video_inbound_rtp ? this.prevStats_.remote.video_inbound_rtp : [],
                        f = this.prevStats_.remote.video_track ? this.prevStats_.remote.video_track : [];
                    if (m.default(this.prevStats_) || t.length !== a.length || r.length !== d.length || i.length !== c.length || n.length !== u.length || o.length !== l.length || s.length !== f.length) {
                        this.prevStats_ = e, Object.keys(this.prevStats_.local).length && (this.prevStats_.local.audio_outbound_rtp && (this.prevStats_.local.audio_outbound_rtp[0].bytesSentPerSecond = this.prevStats_.local.audio_outbound_rtp[0].bytesSent), this.prevStats_.local.video_outbound_rtp && (this.prevStats_.local.video_outbound_rtp[0].bytesSentPerSecond = this.prevStats_.local.video_outbound_rtp[0].bytesSent), this.prevStats_.local.video_outbound_rtp && (this.prevStats_.local.video_outbound_rtp[0].framesEncodedPerSecond = this.prevStats_.local.video_outbound_rtp[0].framesEncoded), this.prevStats_.local.video_track && (this.prevStats_.local.video_track[0].framesSentPerSecond = this.prevStats_.local.video_track[0].framesSent));
                        for (let e in this.prevStats_.remote)
                            if (e.indexOf("inbound_rtp") > -1)
                                for (let t = 0; t < this.prevStats_.remote[e].length; t++) this.prevStats_.remote[e][t].bytesReceivedPerSecond = this.prevStats_.remote[e][t].bytesReceived, this.prevStats_.remote[e][t].packetsLostPerSecond = this.prevStats_.remote[e][t].packetsLost, "video" === this.prevStats_.remote[e][t].mediaType && (this.prevStats_.remote[e][t].framesDecodedPerSecond = this.prevStats_.remote[e][t].framesDecoded)
                    } else {
                        let t = e.local,
                            r = this.prevStats_.local,
                            i = e.remote,
                            n = this.prevStats_.remote;
                        Object.keys(t).length && (t.audio_outbound_rtp && (t.audio_outbound_rtp[0].bytesSentPerSecond = (t.audio_outbound_rtp[0].bytesSent - 0 - r.audio_outbound_rtp[0].bytesSent) / 2), t.video_outbound_rtp && (t.video_outbound_rtp[0].bytesSentPerSecond = (t.video_outbound_rtp[0].bytesSent - 0 - r.video_outbound_rtp[0].bytesSent) / 2), t.video_outbound_rtp && (t.video_outbound_rtp[0].framesEncodedPerSecond = (t.video_outbound_rtp[0].framesEncoded - 0 - r.video_outbound_rtp[0].framesEncoded) / 2), t.video_track && (t.video_track[0].framesSentPerSecond = Math.round((t.video_track[0].framesSent - 0 - r.video_track[0].framesSent) / 2)));
                        for (let e in i)
                            if (e.indexOf("inbound_rtp") > -1)
                                for (let t = 0; t < i[e].length; t++) i[e][t].bytesReceivedPerSecond = (i[e][t].bytesReceived - 0 - n[e][t].bytesReceived) / 2, i[e][t].packetsLostPerSecond = (i[e][t].packetsLost - 0 - n[e][t].packetsLost) / 2, "video" === this.prevStats_.remote[e][t].mediaType && (i[e][t].framesDecodedPerSecond = (i[e][t].framesDecoded - 0 - n[e][t].framesDecoded) / 2)
                    }
                }
                return this.prevStats_ = e, this.prevStats_
            }
            destroy() {
                this.stop(), this._reset(), this.wsTransport_ && this.wsTransport_.close()
            }
        }
        t.StatsReport = _
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.GetStats = void 0;
        const s = r(3),
            a = o(r(107)),
            d = r(27);
        class c extends s.EventEmitter {
            constructor(e) {
                super(), this.adapterRef = e.adapterRef, this.interval = e.interval || 1e3, this.times = 0, this.browser = "chrome", this.KeyTransform = {
                    K: {
                        googAvailableSendBandwidth: 1,
                        googTargetEncBitrate: 1,
                        googActualEncBitrate: 1,
                        googRetransmitBitrate: 1,
                        googTransmitBitrate: 1
                    },
                    T: {}
                }, this._reset()
            }
            _reset() {
                this.times = 0, this.browser = "chrome";
                const e = navigator.userAgent,
                    t = a.getParser(e);
                t.satisfies({
                    chrome: ">=72",
                    chromium: ">=72"
                }) ? this.browser = "chrome" : t.satisfies({
                    safari: ">=12.0"
                }) ? this.browser = "safari" : t.satisfies({
                    firefox: ">60"
                }) ? this.browser = "firefox" : "WeChat" === t.getBrowser().name && "iOS" === t.getOS().name && (this.browser = "safari"), this.KeyTransform = {
                    K: {
                        googAvailableSendBandwidth: 1,
                        googTargetEncBitrate: 1,
                        googActualEncBitrate: 1,
                        googRetransmitBitrate: 1,
                        googTransmitBitrate: 1
                    },
                    T: {}
                }
            }
            async getAllStats() {
                let e = this.adapterRef && this.adapterRef._mediasoup && this.adapterRef._mediasoup._sendTransport && this.adapterRef._mediasoup._sendTransport._handler._pc,
                    t = this.adapterRef && this.adapterRef._mediasoup && this.adapterRef._mediasoup._recvTransport && this.adapterRef._mediasoup._recvTransport._handler._pc;
                if (!e && !t) return;
                let r = {
                    local: e ? await this.getLocalStats(e) : null,
                    remote: t ? await this.getRemoteStats(t) : null
                };
                return this.times = (this.times || 0) + 1, this.emit("stats", r, this.times), this.reviseData(r, this.browser)
            }
            reviseData(e, t) {
                var r, i, n;
                let o = new Map,
                    s = new Map;
                if ("chrome" === t) {
                    let t = new Map([
                            ["candidate-pair", []],
                            ["local-candidate", []],
                            ["media-source", []],
                            ["outbound-rtp", []],
                            ["remote-candidate", []],
                            ["remote-inbound-rtp", []],
                            ["ssrc", []],
                            ["VideoBwe", []],
                            ["track", []],
                            ["transport", []]
                        ]),
                        r = new Map([
                            ["candidate-pair", []],
                            ["inbound-rtp", []],
                            ["local-candidate", []],
                            ["remote-candidate", []],
                            ["ssrc", []],
                            ["track", []],
                            ["transport", []]
                        ]),
                        i = e.local,
                        n = e.remote;
                    for (let e in i)
                        if (t.has(i[e].type))
                            if (e.indexOf("ssrc") > -1) {
                                let t;
                                e.indexOf("audio") > 0 || e.indexOf("video") > 0 ? t = i[e].mediaType + "_ssrc" : e.indexOf("screen") > 0 && (t = "screen_ssrc", i[e].mediaType = "screen"), o.has(t) || o.set(t, []), o.get(t).push(i[e])
                            } else o.set(i[e].type, []), o.get(i[e].type).push(i[e]);
                    let a = Object.create(null);
                    for (let [e, t] of o) a[e] = t;
                    e.local = a;
                    for (let e in n)
                        if (r.has(n[e].type))
                            if ("ssrc" === n[e].type) {
                                let t;
                                e.indexOf("audio") > 0 || e.indexOf("video") > 0 ? t = `${n[e].mediaType}_${n[e].type}` : e.indexOf("screen") > 0 && (t = "screen_" + n[e].type, n[e].mediaType = "screen"), s.has(t) || s.set(t, []), s.get(t).push(n[e])
                            } else {
                                let t = n[e].type;
                                s.has(t) || s.set(t, []), s.get(t).push(n[e])
                            } let d = Object.create(null);
                    for (let [e, t] of s) d[e] = t;
                    e.remote = d
                } else if ("safari" === t) {
                    let t = e.local,
                        r = e.remote,
                        i = new Map([
                            ["outbound-rtp", []],
                            ["track", []]
                        ]);
                    for (let e in t)
                        if (i.has(t[e].type)) {
                            let r = `${t[e].mediaType}_${t[e].type}`;
                            o.has(r) || o.set(r, []), o.get(r).push(t[e])
                        } let n = Object.create(null);
                    for (let [e, t] of o) n[e] = t;
                    e.local = n;
                    let a = new Map([
                        ["inbound-rtp", []],
                        ["track", []]
                    ]);
                    for (let e in r)
                        if (a.has(r[e].type)) {
                            let t = `${r[e].mediaType}_${r[e].type}`;
                            s.has(t) || s.set(t, []), s.get(t).push(r[e])
                        } let d = Object.create(null);
                    for (let [e, t] of s) d[e] = t;
                    e.remote = d
                }
                let a = {
                    "candidate-pair": "candidate_pair",
                    "local-candidate": "local_candidate",
                    "media-source": "media_source",
                    "outbound-rtp": "outbound_rtp",
                    "remote-candidate": "remote_candidate",
                    "remote-inbound-rtp": "remote_inbound_rtp",
                    VideoBwe: "video_bwe",
                    "inbound-rtp": "inbound_rtp",
                    "audio_outbound-rtp": "audio_outbound_rtp",
                    "video_outbound-rtp": "video_outbound_rtp",
                    "audio_inbound-rtp": "audio_inbound_rtp",
                    "video_inbound-rtp": "video_inbound_rtp"
                };
                for (let t in e.local) {
                    let r = a[t];
                    r && (e.local[r] = e.local[t], delete e.local[t])
                }
                for (let t in e.remote) {
                    let r = a[t];
                    r && (e.remote[r] = e.remote[t], delete e.remote[t])
                }
                return e.timestamp = (new Date).getTime(), e.appkey = null === (r = this.adapterRef) || void 0 === r ? void 0 : r.channelInfo.appkey, e.cid = null === (i = this.adapterRef) || void 0 === i ? void 0 : i.channelInfo.cid, e.uid = null === (n = this.adapterRef) || void 0 === n ? void 0 : n.channelInfo.uid, e.browser = d.platform.name + "-" + d.platform.version, e.platform = d.platform.os.family, e
            }
            async getLocalStats(e) {
                return !e || /(failed|closed|new)/gi.test(e.iceConnectionState) ? {} : await this[this.browser](e, "send")
            }
            async getRemoteStats(e) {
                return !e || /(failed|closed|new)/gi.test(e.iceConnectionState) ? {} : await this[this.browser](e, "recv")
            }
            async chrome(e, t) {
                const r = await (() => new Promise((r, i) => {
                        e.getStats(i => {
                            let n = {};
                            i.result().forEach((function(e) {
                                const t = {};
                                e.names().forEach((function(r) {
                                    t[r] = e.stat(r)
                                })), t.id = e.id, t.type = e.type, t.timestamp = e.timestamp, n[t.id] = t
                            })), e.lastStats = e.lastStats || {}, n = this.formatChromeNonStandardStats(e, n, t), r(n)
                        })
                    }))(),
                    i = await (async () => {
                        if (!e.getTransceivers) return {};
                        let r = {};
                        const i = e.getTransceivers();
                        for (let e = 0; e < i.length; e++) {
                            let n = null;
                            const o = i[e];
                            "sendonly" === o.direction ? o.sender && o.sender.getStats && (n = await o.sender.getStats(), n = this.formatChromeStandardizedStats(n, t, 0), Object.assign(r, n)) : "recvonly" === o.direction && o.receiver && o.receiver.getStats && (n = await o.receiver.getStats(), n = this.formatChromeStandardizedStats(n, t, 0), Object.assign(r, n))
                        }
                        return r
                    })();
                return Object.assign(r, i)
            }
            async formatChromeNonStandardStats(e, t, r) {
                const i = {};
                return Object.values(t).forEach(t => {
                    if ("recv" === r && !/^ssrc_/i.test(t.id)) return i;
                    if ("send" === r && !/^(bweforvideo|Conn-0-1-0|ssrc_)/i.test(t.id)) return i;
                    "bweforvideo" === t.id && (t = this.formatData(t));
                    const n = ("send" === r ? /ssrc_(\d+)_send/i : /ssrc_(\d+)_recv/i).exec(t.id),
                        o = t.id;
                    if (i[o] = t, !n || !n[1]) return i;
                    const s = n[1];
                    if (!this.adapterRef) return void console.error("getStats行为没有client关联");
                    const a = this.adapterRef.instance.getUidAndKindBySsrc(parseInt(s));
                    let d, c = a.uid;
                    if (d = a.kind ? a.kind : "screen" === t.googContentType ? "screen" : t.mediaType, !c && "recv" === r) return i;
                    t.id = `ssrc_${this.adapterRef.channelInfo.uid}_${r}_${"recv"===r?c:0}_${d}`, t.localuid = this.adapterRef.channelInfo.uid, t.remoteuid = c, -1 == (t = this.computeData(e, t)).googInterframeDelayMax && (t.googInterframeDelayMax = 0), i[t.id] = t, delete i[o]
                }), i
            }
            formatChromeStandardizedStats(e, t, r) {
                let i = {};
                if (e.forEach(e => {
                        "inbound-rtp" == e.type && this.adapterRef && this.adapterRef.instance && (r = this.adapterRef.instance.getUidAndKindBySsrc(e.ssrc).uid)
                    }), r || !(t.indexOf("recv") > -1)) return e.forEach(e => {
                    "local-candidate" != e.type && "remote-candidate" != e.type && "track" != e.type && "outbound-rtp" != e.type && "remote-inbound-rtp" != e.type && "candidate-pair" != e.type && "media-source" != e.type && "inbound-rtp" != e.type && "transport" != e.type || (i[`${e.type}_${this.adapterRef&&this.adapterRef.channelInfo.uid}_${t}_${r}`] = e)
                }), i
            }
            async safari(e, t) {
                return await (async () => {
                    const r = await e.getStats();
                    e.lastStats = e.lastStats || {};
                    return this.formatSafariNonStandardStats(e, r, t)
                })()
            }
            formatSafariNonStandardStats(e, t, r) {
                let i = {},
                    n = new Map;
                return t.forEach(e => {
                    if ("outbound-rtp" == e.type || "inbound-rtp" == e.type) {
                        const t = this.adapterRef ? this.adapterRef.instance.getUidAndKindBySsrc(e.ssrc).uid : 0;
                        return n.set(e.trackId, {
                            uid: t.toString(),
                            ssrc: e.ssrc
                        }), void(e.uid = t.toString())
                    }
                }), t.forEach(t => {
                    "track" == t.type ? (t.ssrc = n.get(t.id.toString()).ssrc, t.uid = n.get(t.id.toString()).uid, t.framesSent || t.framesReceived ? (t = this.computeData(e, t), i[`_video_${t.type}_${this.adapterRef&&this.adapterRef.channelInfo.uid}_${r}_${t.uid}`] = t, t.mediaType = "video") : (i[`_audio_${t.type}_${this.adapterRef&&this.adapterRef.channelInfo.uid}_${r}_${t.uid}`] = t, t.mediaType = "audio")) : "outbound-rtp" != t.type && "inbound-rtp" != t.type || (t = this.computeData(e, t), i[`${t.mediaType}_${t.type}_${this.adapterRef&&this.adapterRef.channelInfo.uid}_${r}_${t.uid}`] = t)
                }), i
            }
            formatSafariStandardizedStats(e, t) {
                let r, i = {};
                return e.forEach(e => {
                    "inbound-rtp" == e.type && (r = this.adapterRef ? this.adapterRef.instance.getUidAndKindBySsrc(e.ssrc).uid : r)
                }), e.forEach(e => {
                    "local-candidate" != e.type && "remote-candidate" != e.type && "track" != e.type && "outbound-rtp" != e.type && "remote-inbound-rtp" != e.type && "candidate-pair" != e.type && "media-source" != e.type && "inbound-rtp" != e.type && "transport" != e.type || (i[`${e.type}_${this.adapterRef&&this.adapterRef.channelInfo.uid}_${t}_${r}`] = e)
                }), i
            }
            async firefox(e) {}
            formatData(e) {
                return Object.keys(e).map(t => {
                    this.KeyTransform.K[t] && (e[t] = (e[t] / 1024).toFixed(2)), this.KeyTransform.T[t] && (e[t] = (e[t] / 1024 / 1024).toFixed(2))
                }), e
            }
            computeData(e, t) {
                const r = {
                    pc: e,
                    ssrcKey: t.ssrc,
                    currentItem: t
                };
                return t.bytesSent && (t.bitsSentPerSecond = this.getLastStats(Object.assign({}, r, {
                    firstKey: "bytesSent"
                }))), t.packetsSent && (t.packetsSentPerSecond = this.getLastStats(Object.assign({}, r, {
                    firstKey: "packetsSent"
                }))), t.bytesReceived && (t.bitsReceivedPerSecond = this.getLastStats(Object.assign({}, r, {
                    firstKey: "bytesReceived"
                }))), t.packetsReceived && (t.packetsReceivedPerSecond = this.getLastStats(Object.assign({}, r, {
                    firstKey: "packetsReceived"
                }))), t.packetsSent && t.packetsLost && (t.sendPacketLoss = this.getLastStats(Object.assign({}, r, {
                    firstKey: "packetsSent",
                    secondKey: "packetsLost"
                }))), t.packetsReceived && t.packetsLost && (t.recvPacketLoss = this.getLastStats(Object.assign({}, r, {
                    firstKey: "packetsReceived",
                    secondKey: "packetsLost"
                }))), t.framesSent && (t.frameRateSent = this.getLastStats(Object.assign({}, r, {
                    firstKey: "framesSent"
                }))), t
            }
            getLastStats(e = {}) {
                const {
                    pc: t,
                    ssrcKey: r,
                    firstKey: i,
                    secondKey: n = null,
                    currentItem: o
                } = e;
                let s = 0,
                    a = 0;
                if (t.lastStats[r] && t.lastStats[r][i]) {
                    if (!(o[i] - t.lastStats[r][i] > 0)) return s;
                    s = (o[i] - t.lastStats[r][i]) / 2, n && (a = (o[n] - t.lastStats[r][n]) / 2)
                } else t.lastStats[r] || (t.lastStats[r] = {}), s = o[i], n && (a = o[n]);
                return s = /bytes/gi.test(i) ? Math.round(8 * s / 1e3) : n ? i.indexOf("send") > -1 ? Math.floor(a / s * 1e4) / 100 : a / (a + a) * 1e4 / 100 : s, t.lastStats[r][i] = o[i], n && (t.lastStats[r][n] = o[n]), s
            }
            stop() {
                this._reset()
            }
            destroy() {
                this._reset()
            }
        }
        t.GetStats = c
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            },
            s = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.FormativeStatsReport = void 0;
        const a = r(115),
            d = r(27),
            c = s(r(1)),
            u = s(r(0)),
            l = o(r(38));
        t.FormativeStatsReport = class {
            constructor(e) {
                this._reset(), this.adapterRef = e.adapterRef, this.webrtcStats = [], this.publicIP = "", this._audioLevel = [], this.infos = {
                    interval: 0
                }, this.infos2 = {}, this.paramSecond = {
                    upAudioCache: {},
                    upVideoCache: {},
                    upScreenCache: {},
                    downAudioCache: {},
                    downVideoCache: {},
                    downScreenCache: {}
                }, this.firstData = {
                    recvFirstData: {},
                    sendFirstAudioPackage: !1,
                    sendFirstVideoPackage: !1,
                    sendFirstScreenPackage: !1
                }, this.network = "", this.LocalAudioEnable = !1, this.localVideoEnable = !1, this.localScreenEnable = !1, this.init(this.adapterRef.channelInfo.appkey), this.resetStatus()
            }
            _reset() {
                this._audioLevel = [], this.infos = {
                    interval: 0
                }
            }
            init(e) {
                return this.infos = {
                    ver: 2,
                    device: -1,
                    isp: -1,
                    platform: p.convertPlatform(d.platform.os.family) + "-" + d.platform.os.version + "- webrtc",
                    browser: d.platform.name + "-" + d.platform.version,
                    sdk_ver: "3.6.0",
                    appkey: e,
                    interval: 60,
                    samples: 30,
                    time: Date.now(),
                    qos_algorithm: -1,
                    fec_algorithm: -1,
                    qos_scene: -1,
                    qos_strategy: -1
                }, this.infos
            }
            resetStatus() {
                this.infos = Object.assign(this.infos, {
                    uid: null,
                    cid: null,
                    push_url: null,
                    turn_ip: null,
                    proxy_ip: null,
                    meeting: !1,
                    live: !1
                }), this.firstData = {
                    recvFirstData: {},
                    sendFirstAudioPackage: !1,
                    sendFirstVideoPackage: !1,
                    sendFirstScreenPackage: !1
                }, this._audioLevel && (this._audioLevel.length = 0), this.clearInfoData()
            }
            initInfoData(e) {
                let t = {
                    uid: e,
                    cid: this.adapterRef.channelInfo.cid || 0,
                    push_url: "",
                    turn_ip: this.adapterRef && this.adapterRef.channelInfo.wssArr && this.adapterRef.channelInfo.wssArr[0] || "",
                    proxy_ip: this.adapterRef && this.adapterRef.channelInfo.wssArr && this.adapterRef.channelInfo.wssArr[0] || "",
                    meeting: !0,
                    live: this.adapterRef.channelInfo && this.adapterRef.channelInfo.sessionConfig.liveEnable || !1,
                    p2p: !1,
                    isp: -1,
                    net: -1,
                    connect_state: 200,
                    signalling_time: (this.adapterRef.channelInfo && this.adapterRef.instance._params.JoinChannelRequestParam4WebRTC2.startWssTime || 0) - (this.adapterRef.instance._params.JoinChannelRequestParam4WebRTC2.startJoinTime || 0),
                    connect_time: (this.adapterRef.channelInfo && this.adapterRef.instance._params.JoinChannelRequestParam4WebRTC2.joinedSuccessedTime || 0) - (this.adapterRef.channelInfo && this.adapterRef.instance._params.JoinChannelRequestParam4WebRTC2.startWssTime || 0)
                };
                this.infos = Object.assign(this.infos, t)
            }
            clearInfoData() {
                this.infos2 = {
                    rx2: [],
                    tx2: [{
                        v_fps: [],
                        v_res: [],
                        v_plis: [],
                        v_rtt: [],
                        v_simulcast: [],
                        v_bw_kbps: [],
                        v_tar_kbps: [],
                        v_rel_kbps: [],
                        v_tx_kbps: [],
                        v_retx_kbps: [],
                        v_delay: [],
                        s_fps: [],
                        s_res: [],
                        s_plis: [],
                        s_rtt: [],
                        s_simulcast: [],
                        s_bw_kbps: [],
                        s_tar_kbps: [],
                        s_rel_kbps: [],
                        s_tx_kbps: [],
                        s_retx_kbps: [],
                        s_delay: [],
                        a_cap_volume: [],
                        a_rtt: []
                    }],
                    sys: {
                        cpu_total: [],
                        cpu_idle: [],
                        mem_total: [],
                        mem_workingSet: [],
                        mem_load: []
                    }
                }
            }
            start() {
                this.infos.appkey = this.adapterRef.channelInfo.appkey, this.infos.cid = this.adapterRef.channelInfo.cid, this.infos.uid = this.adapterRef.channelInfo.uid, this.clearSecond(), this.initInfoData(this.infos.uid)
            }
            stop() {
                this.send(), this.resetStatus()
            }
            clearSecond() {
                this.paramSecond = {
                    upAudioCache: {},
                    upVideoCache: {},
                    upScreenCache: {},
                    downAudioCache: {},
                    downVideoCache: {},
                    downScreenCache: {}
                }
            }
            getPacketLossRate(e, t, r = !1) {
                if (!e || !t) return 0;
                let i = parseInt(e.packetsLost) || 0,
                    n = parseInt(t.packetsLost) || 0;
                if (n <= i) return 0;
                let o = r ? e.packetsSent : e.packetsReceived,
                    s = r ? t.packetsSent : t.packetsReceived,
                    a = parseInt(o || "") || 0,
                    d = parseInt(s || "") || 0;
                return d <= a ? 0 : r ? parseFloat(((n - i) / (d - a) * 100).toFixed(1)) : parseFloat(((n - i) / (n - i + (d - a)) * 100).toFixed(1))
            }
            update(e, t) {
                e = Object.assign({}, e.local, e.remote);
                let r = [],
                    i = [],
                    n = [],
                    o = [],
                    s = [],
                    a = [];
                2 == this.webrtcStats.length && this.webrtcStats.shift(), this.webrtcStats.push(e);
                let d = {
                        send: {
                            uid: 0,
                            audio: {
                                prevLost: 0,
                                nextLost: 0,
                                prevPacket: 0,
                                nextPacket: 0,
                                rtt: 0,
                                jitter: 0
                            },
                            video: {
                                prevLost: 0,
                                nextLost: 0,
                                prevPacket: 0,
                                nextPacket: 0,
                                rtt: 0,
                                jitter: 0
                            },
                            screen: {
                                prevLost: 0,
                                nextLost: 0,
                                prevPacket: 0,
                                nextPacket: 0,
                                rtt: 0,
                                jitter: 0
                            }
                        },
                        recv: {
                            uid: 0,
                            audio: {
                                prevLost: 0,
                                nextLost: 0,
                                prevPacket: 0,
                                nextPacket: 0,
                                rtt: 0,
                                jitter: 0
                            },
                            video: {
                                prevLost: 0,
                                nextLost: 0,
                                prevPacket: 0,
                                nextPacket: 0,
                                rtt: 0,
                                jitter: 0
                            },
                            screen: {
                                prevLost: 0,
                                nextLost: 0,
                                prevPacket: 0,
                                nextPacket: 0,
                                rtt: 0,
                                jitter: 0
                            }
                        }
                    },
                    c = 0,
                    u = 0;
                this._audioLevel && (this._audioLevel.length = 0);
                for (let t in e) {
                    let p;
                    if (p = l.IS_SAFARI ? t.split("_")[5] || "" : t.split("_")[3] || "", "0" === p && (p = t.split("_")[1] || ""), -1 !== t.indexOf("_send_") && -1 !== t.indexOf("_audio")) !this.firstData.sendFirstAudioPackage && e[t].packetsSent > 0 && (this.firstData.sendFirstAudioPackage = !0, this.adapterRef.instance.apiEventReport("setSendFirstPackage", {
                        media_type: 0
                    })), this.paramSecond.upAudioCache[p] && (d.send.audio.prevLost = this.paramSecond.upAudioCache[p].packetsLost, d.send.audio.prevPacket = this.paramSecond.upAudioCache[p].packetsSent, e[t].alr = this.getPacketLossRate(this.paramSecond.upAudioCache[p], e[t], !0), this.dispatchExceptionEventSendAudio(this.paramSecond.upAudioCache[p], e[t], p)), u += parseInt(e[t].bytesSent), this.paramSecond.upAudioCache[p] = e[t], d.send.uid = this.adapterRef.channelInfo.uid, d.send.audio.nextLost = e[t].packetsLost, d.send.audio.nextPacket = e[t].packetsSent, d.send.audio.rtt = d.recv.audio.rtt = e[t].googRtt, d.send.audio.jitter = d.recv.audio.jitter = e[t].googJitterReceived || 0, r.push(e[t]);
                    else if (-1 !== t.indexOf("_send_") && -1 !== t.indexOf("_video")) {
                        !this.firstData.sendFirstVideoPackage && e[t].packetsSent > 0 && (this.firstData.sendFirstVideoPackage = !0, this.adapterRef.instance.apiEventReport("setSendFirstPackage", {
                            media_type: 1
                        })), this.paramSecond.upVideoCache[p] && (d.send.video.prevLost = this.paramSecond.upVideoCache[p].packetsLost, d.send.video.prevPacket = this.paramSecond.upVideoCache[p].packetsSent, e[t].vlr = this.getPacketLossRate(this.paramSecond.upVideoCache[p], e[t], !0), this.dispatchExceptionEventSendVideo(this.paramSecond.upVideoCache[p], e[t], p));
                        let r = this.getLocalVideoFreezeStats(e[t], p);
                        e[t].freezeTime = r.freezeTime, e[t].totalFreezeTime = r.totalFreezeTime, Object.assign(e[t], e.bweforvideo), u += parseInt(e[t].bytesSent), this.paramSecond.upVideoCache[p] = e[t], d.send.uid = this.adapterRef.channelInfo.uid, d.send.video.nextLost = e[t].packetsLost, d.send.video.nextPacket = e[t].packetsSent, d.send.video.rtt = d.recv.video.rtt = e[t].googRtt, d.send.video.jitter = d.recv.video.jitter = e[t].googJitterReceived || 0, i.push(e[t])
                    } else if (-1 !== t.indexOf("_send_") && -1 !== t.indexOf("_screen")) {
                        !this.firstData.sendFirstScreenPackage && e[t].packetsSent > 0 && (this.firstData.sendFirstScreenPackage = !0, this.adapterRef.instance.apiEventReport("setSendFirstPackage", {
                            media_type: 2
                        })), this.paramSecond.upScreenCache[p] && (d.send.screen.prevLost = this.paramSecond.upScreenCache[p].packetsLost, d.send.screen.prevPacket = this.paramSecond.upScreenCache[p].packetsSent, e[t].vlr = this.getPacketLossRate(this.paramSecond.upScreenCache[p], e[t], !0));
                        let r = this.getLocalScreenFreezeStats(e[t], p);
                        e[t].freezeTime = r.freezeTime, e[t].totalFreezeTime = r.totalFreezeTime, Object.assign(e[t], e.bweforvideo), u += parseInt(e[t].bytesSent), this.paramSecond.upScreenCache[p] = e[t], d.send.uid = this.adapterRef.channelInfo.uid, d.send.screen.nextLost = e[t].packetsLost, d.send.screen.nextPacket = e[t].packetsSent, d.send.screen.rtt = d.recv.screen.rtt = e[t].googRtt, d.send.screen.jitter = d.recv.screen.jitter = e[t].googJitterReceived || 0, n.push(e[t])
                    } else if (-1 !== t.indexOf("_recv_") && -1 !== t.indexOf("_audio")) {
                        this.firstData.recvFirstData[p] || (this.firstData.recvFirstData[p] = {
                            recvFirstAudioFrame: !1,
                            recvFirstVideoFrame: !1,
                            recvFirstScreenFrame: !1,
                            recvFirstAudioPackage: !1,
                            recvFirstVideoPackage: !1,
                            recvFirstScreenPackage: !1,
                            videoTotalPlayDuration: 0,
                            screenTotalPlayDuration: 0
                        }), !this.firstData.recvFirstData[p].recvFirstAudioFrame && parseInt(e[t].googDecodingNormal) > 0 && (this.firstData.recvFirstData[p].recvFirstAudioFrame = !0, this.adapterRef.instance.apiEventReport("setRecvFirstFrame", {
                            media_type: 0,
                            pull_uid: p
                        })), !this.firstData.recvFirstData[p].recvFirstAudioPackage && parseInt(e[t].packetsReceived) > 0 && (this.firstData.recvFirstData[p].recvFirstAudioPackage = !0, this.adapterRef.instance.apiEventReport("setRecvFirstPackage", {
                            media_type: 0,
                            pull_uid: p
                        })), this.paramSecond.downAudioCache[p] && (d.recv.audio.prevLost = this.paramSecond.downAudioCache[p].packetsLost, d.recv.audio.prevPacket = this.paramSecond.downAudioCache[p].packetsReceived, e[t].alr = this.getPacketLossRate(this.paramSecond.downAudioCache[p], e[t]));
                        let r = this.getRemoteAudioFreezeStats(this.paramSecond.downAudioCache[p], e[t], p);
                        e[t].freezeTime = r.freezeTime, e[t].totalFreezeTime = r.totalFreezeTime, c += parseInt(e[t].bytesReceived), this.dispatchExceptionEventRecvAudio(this.paramSecond.downAudioCache[p], e[t], p), this.paramSecond.downAudioCache[p] = e[t], d.recv.uid = +p, d.recv.audio.nextLost = e[t].packetsLost, d.recv.audio.nextPacket = e[t].packetsReceived, o.push(e[t]);
                        const i = e[t].audioOutputLevel || e[t].audioLevel;
                        this._audioLevel.push({
                            uid: p,
                            level: +i || 0
                        })
                    } else if (-1 !== t.indexOf("_recv_") && -1 !== t.indexOf("_video")) {
                        this.firstData.recvFirstData[p] || (this.firstData.recvFirstData[p] = {
                            recvFirstAudioFrame: !1,
                            recvFirstVideoFrame: !1,
                            recvFirstScreenFrame: !1,
                            recvFirstAudioPackage: !1,
                            recvFirstVideoPackage: !1,
                            recvFirstScreenPackage: !1,
                            videoTotalPlayDuration: 0,
                            screenTotalPlayDuration: 0
                        }), !this.firstData.recvFirstData[p].recvFirstVideoFrame && e[t].framesDecoded > 0 ? (this.firstData.recvFirstData[p].recvFirstVideoFrame = !0, this.adapterRef.instance.apiEventReport("setRecvFirstFrame", {
                            media_type: 1,
                            pull_uid: p
                        })) : e[t].framesDecoded > 0 && this.firstData.recvFirstData[p].videoTotalPlayDuration++, !this.firstData.recvFirstData[p].recvFirstVideoPackage && e[t].packetsReceived > 0 && (this.firstData.recvFirstData[p].recvFirstVideoPackage = !0, this.adapterRef.instance.apiEventReport("setRecvFirstPackage", {
                            media_type: 1,
                            pull_uid: p
                        })), this.paramSecond.downVideoCache[p] && (d.recv.video.prevLost = this.paramSecond.downVideoCache[p].packetsLost, d.recv.video.prevPacket = this.paramSecond.downVideoCache[p].packetsReceived, e[t].vlr = this.getPacketLossRate(this.paramSecond.downVideoCache[p], e[t]));
                        let r = this.getRemoteVideoFreezeStats(this.paramSecond.downVideoCache[p], e[t], p);
                        e[t].freezeTime = r.freezeTime, e[t].totalFreezeTime = r.totalFreezeTime, this.dispatchExceptionEventRecvVideo(this.paramSecond.downVideoCache[p], e[t], p), c += parseInt(e[t].bytesReceived), this.paramSecond.downVideoCache[p] = e[t], d.recv.uid = +p, d.recv.video.nextLost = e[t].packetsLost, d.recv.video.nextPacket = e[t].packetsReceived, s.push(e[t])
                    } else if (-1 !== t.indexOf("_recv_") && -1 !== t.indexOf("_screen")) {
                        this.firstData.recvFirstData[p] || (this.firstData.recvFirstData[p] = {
                            recvFirstAudioFrame: !1,
                            recvFirstVideoFrame: !1,
                            recvFirstScreenFrame: !1,
                            recvFirstAudioPackage: !1,
                            recvFirstVideoPackage: !1,
                            recvFirstScreenPackage: !1,
                            videoTotalPlayDuration: 0,
                            screenTotalPlayDuration: 0
                        }), !this.firstData.recvFirstData[p].recvFirstScreenFrame && e[t].framesDecoded > 0 ? (this.firstData.recvFirstData[p].recvFirstScreenFrame = !0, this.adapterRef.instance.apiEventReport("setRecvFirstFrame", {
                            media_type: 2,
                            pull_uid: p
                        })) : e[t].framesDecoded > 0 && this.firstData.recvFirstData[p].screenTotalPlayDuration++, !this.firstData.recvFirstData[p].recvFirstScreenPackage && e[t].packetsReceived > 0 && (this.firstData.recvFirstData[p].recvFirstScreenPackage = !0, this.adapterRef.instance.apiEventReport("setRecvFirstPackage", {
                            media_type: 2,
                            pull_uid: p
                        })), this.paramSecond.downScreenCache[p] && (d.recv.screen.prevLost = this.paramSecond.downScreenCache[p].packetsLost, d.recv.screen.prevPacket = this.paramSecond.downScreenCache[p].packetsReceived, e[t].vlr = this.getPacketLossRate(this.paramSecond.downScreenCache[p], e[t]));
                        let r = this.getRemoteScreenFreezeStats(this.paramSecond.downScreenCache[p], e[t], p);
                        e[t].freezeTime = r.freezeTime, e[t].totalFreezeTime = r.totalFreezeTime, this.dispatchExceptionEventRecvScreen(this.paramSecond.downScreenCache[p], e[t], p), c += parseInt(e[t].bytesReceived), this.paramSecond.downScreenCache[p] = e[t], d.recv.uid = +p, d.recv.screen.nextLost = e[t].packetsLost, d.recv.screen.nextPacket = e[t].packetsReceived, a.push(e[t])
                    } else if (-1 !== t.indexOf("Conn-")) {
                        this.publicIP = e[t] && e[t].googLocalAddress.match(/([0-9\.]+)/)[1];
                        let r = "0" == e[t].googRtt ? "1" : e[t].googRtt;
                        this.adapterRef.transportStats.txRtt = r, this.adapterRef.transportStats.rxRtt = r
                    } else if (-1 !== t.indexOf("local-candidate")) e[t].networkType && (this.adapterRef.transportStats.NetworkType = e[t].networkType);
                    else if (-1 !== t.indexOf("candidate-pair") && -1 !== t.indexOf("send")) {
                        t.split("_")[1] == this.adapterRef.channelInfo.uid && (this.adapterRef.transportStats.OutgoingAvailableBandwidth = e[t].availableOutgoingBitrate / 1e3)
                    } else this.network = e[t] && e[t].network
                }
                if (this.adapterRef.sessionStats.RecvBytes = c, this.adapterRef.sessionStats.SendBytes = u, 1 !== t && (this._audioLevel.sort(p.compare("level")), this._audioLevel.length > 0 && this._audioLevel[0].level > 0 && this.adapterRef.instance.emit("active-speaker", this._audioLevel[0]), t % 2 == 0)) {
                    this.adapterRef.instance.emit("volume-indicator", this._audioLevel), this.updateTxMediaInfo(r, i, n), this.updateRxMediaInfo(o, s, a), (this.infos2.tx2 && this.infos2.tx2[0].v_res.length) === this.infos.interval / 2 && this.send()
                }
            }
            updateOnce() {
                this.initInfoData(), this.send()
            }
            updateRxMediaInfo(e, t, r) {
                let i = {
                        uid: [],
                        a_p_volume: [],
                        a_d_nor: [],
                        a_d_plc: [],
                        a_d_plccng: [],
                        a_stuck: [],
                        a_bps: [],
                        a_p_lost_r: [],
                        a_delay: [],
                        a_acc_r: []
                    },
                    n = {
                        v_res: [],
                        v_fps: [],
                        v_plis: [],
                        v_stuck: [],
                        v_bw_kbps: [],
                        v_bps: [],
                        v_p_lost_r: [],
                        v_dec_ms: [],
                        v_delay: []
                    },
                    o = {
                        v_res: [],
                        v_fps: [],
                        v_plis: [],
                        v_stuck: [],
                        v_bw_kbps: [],
                        v_bps: [],
                        v_p_lost_r: [],
                        v_dec_ms: [],
                        v_delay: []
                    },
                    s = 0;
                e.map(e => {
                    let t = "0";
                    e.id && (t = e.id.split("_")[3]), this.adapterRef.remoteAudioStats[t] && (this.adapterRef.remoteAudioStats[t] = {
                        TotalFreezeTime: 0
                    });
                    const r = this.adapterRef.remoteStreamMap[t];
                    this.adapterRef.remoteAudioStats[t] = {
                        CodecType: "Opus",
                        End2EndDelay: (parseInt(e.googCurrentDelayMs) || 0) + (parseInt(e.googJitterBufferMs) || 0),
                        MuteState: r && (r.muteStatus.audioSend || r.muteStatus.audioRecv),
                        PacketLossRate: e.alr || 0,
                        RecvBitrate: e.bitsReceivedPerSecond || 0,
                        RecvLevel: parseInt(e.audioOutputLevel) || +e.audioLevel || 0,
                        TotalFreezeTime: e.totalFreezeTime || 0,
                        TotalPlayDuration: parseInt(e.totalSamplesDuration) || 0,
                        TransportDelay: parseInt(e.googCurrentDelayMs) || 0
                    }, s += e.bitsReceivedPerSecond, i.uid.push(t), i.a_p_volume.push(+(e.audioOutputLevel || e.audioLevel) || 0), i.a_d_nor.push(parseInt(e.googDecodingNormal) || 0), i.a_d_plc.push(parseInt(e.googDecodingPLC) || 0), i.a_d_plccng.push(parseInt(e.googDecodingPLCCNG) || 0), i.a_stuck.push(e.freezeTime || 0), i.a_bps.push(e.bitsReceivedPerSecond || 0), i.a_p_lost_r.push(e.alr || 0), i.a_delay.push(parseInt(e.googJitterBufferMs) || 0), i.a_acc_r.push(0)
                }), t.map(e => {
                    let t = "0";
                    e.id && (t = e.id.split("_")[3]);
                    const r = this.adapterRef.remoteStreamMap[t];
                    this.adapterRef.remoteVideoStats[t] && (this.adapterRef.remoteVideoStats[t] = {
                        TotalFreezeTime: 0
                    });
                    const i = r && r.Play && r.Play.videoDom;
                    this.adapterRef.remoteVideoStats[t] = {
                        LayerType: 1,
                        CodecName: e.googCodecName,
                        End2EndDelay: (parseInt(e.googCurrentDelayMs) || 0) + (parseInt(e.googJitterBufferMs) || 0) + (parseInt(e.googRenderDelayMs) || 0),
                        MuteState: r && (r.muteStatus.videoSend || r.muteStatus.videoRecv),
                        PacketLossRate: e.vlr || 0,
                        RecvBitrate: e.bitsReceivedPerSecond || 0,
                        RecvResolutionHeight: parseInt(e.googFrameHeightReceived) || 0,
                        RecvResolutionWidth: parseInt(e.googFrameWidthReceived) || 0,
                        RenderFrameRate: parseInt(e.googFrameRateOutput) || 0,
                        RenderResolutionHeight: i ? i.videoHeight : 0,
                        RenderResolutionWidth: i ? i.videoWidth : 0,
                        TotalFreezeTime: e.totalFreezeTime || 0,
                        TotalPlayDuration: this.firstData.recvFirstData[t] && this.firstData.recvFirstData[t].videoTotalPlayDuration || (i && i.played && i.played.length ? i.played.end(0) : 0),
                        TransportDelay: parseInt(e.googCurrentDelayMs) || 0
                    }, s += e.bitsReceivedPerSecond, n.v_res.push((e.googFrameWidthReceived || 0) + "x" + (e.googFrameHeightReceived || 0)), n.v_fps.push(parseInt(e.googFrameRateOutput)), n.v_plis.push(parseInt(e.googPlisSent)), n.v_stuck.push(e.freezeTime || 0), n.v_bw_kbps.push(0), n.v_bps.push(e.bitsReceivedPerSecond || 0), n.v_p_lost_r.push(e.vlr || 0), n.v_dec_ms.push(parseInt(e.googDecodeMs) || 0), n.v_delay.push(parseInt(e.googJitterBufferMs))
                }), r.map(e => {
                    let t = 0;
                    e.id && (t = +e.id.split("_")[3]);
                    const r = this.adapterRef.remoteStreamMap[t];
                    this.adapterRef.remoteScreenStats[t] && (this.adapterRef.remoteScreenStats[t] = {
                        TotalFreezeTime: 0
                    });
                    const i = r && r.Play && r.Play.screenDom;
                    this.adapterRef.remoteScreenStats[t] = {
                        LayerType: 2,
                        CodecName: e.googCodecName,
                        End2EndDelay: (parseInt(e.googCurrentDelayMs) || 0) + (parseInt(e.googJitterBufferMs) || 0) + (parseInt(e.googRenderDelayMs) || 0),
                        MuteState: r && (r.muteStatus.screenSend || r.muteStatus.screenRecv),
                        PacketLossRate: e.vlr || 0,
                        RecvBitrate: e.bitsReceivedPerSecond || 0,
                        RecvResolutionHeight: parseInt(e.googFrameHeightReceived) || 0,
                        RecvResolutionWidth: parseInt(e.googFrameWidthReceived) || 0,
                        RenderFrameRate: parseInt(e.googFrameRateOutput) || 0,
                        RenderResolutionHeight: i ? i.videoHeight : 0,
                        RenderResolutionWidth: i ? i.videoWidth : 0,
                        TotalFreezeTime: e.totalFreezeTime || 0,
                        TotalPlayDuration: this.firstData.recvFirstData[t] && this.firstData.recvFirstData[t].screenTotalPlayDuration || (i && i.played && i.played.length ? i.played.end(0) : 0),
                        TransportDelay: parseInt(e.googCurrentDelayMs) || 0
                    }, s += e.bitsReceivedPerSecond, o.v_res.push((e.googFrameWidthReceived || 0) + "x" + (e.googFrameHeightReceived || 0)), o.v_fps.push(parseInt(e.googFrameRateOutput)), o.v_plis.push(parseInt(e.googPlisSent)), o.v_stuck.push(e.freezeTime || 0), o.v_bw_kbps.push(0), o.v_bps.push(e.bitsReceivedPerSecond || 0), o.v_p_lost_r.push(e.vlr || 0), o.v_dec_ms.push(parseInt(e.googDecodeMs) || 0), o.v_delay.push(parseInt(e.googJitterBufferMs))
                }), this.adapterRef.sessionStats.RecvBitrate = s, this.infos2.rx2.push({
                    uid: i.uid,
                    a_p_volume: i.a_p_volume,
                    a_d_nor: i.a_d_nor,
                    a_d_plc: i.a_d_plc,
                    a_d_plccng: i.a_d_plccng,
                    a_stuck: i.a_stuck,
                    a_bps: i.a_bps,
                    a_p_lost_r: i.a_p_lost_r,
                    a_delay: i.a_delay,
                    a_acc_r: i.a_acc_r,
                    v_res: n.v_res,
                    v_fps: n.v_fps,
                    v_plis: n.v_plis,
                    v_stuck: n.v_stuck,
                    v_bw_kbps: n.v_bw_kbps,
                    v_bps: n.v_bps,
                    v_p_lost_r: n.v_p_lost_r,
                    v_dec_ms: n.v_dec_ms,
                    v_delay: n.v_delay,
                    s_res: o.v_res,
                    s_fps: o.v_fps,
                    s_plis: o.v_plis,
                    s_stuck: o.v_stuck,
                    s_bw_kbps: o.v_bw_kbps,
                    s_bps: o.v_bps,
                    s_p_lost_r: o.v_p_lost_r,
                    s_dec_ms: o.v_dec_ms,
                    s_delay: o.v_delay
                })
            }
            getLocalMediaStats(e, t, r) {
                let i = {
                        a_lost: e[0] && e[0].alr || 0,
                        v_lost: t[0] && t[0].vlr || 0,
                        s_lost: r[0] && r[0].vlr || 0,
                        rtt: parseInt(t[0] && t[0].googRtt) || 0,
                        rtt_mdev: -1,
                        set_v_fps: parseInt(this.adapterRef.channelInfo.sessionConfig.frameRate) || 0,
                        v_cap_fps: parseInt(t[0] && t[0].googFrameRateInput) || 0,
                        s_cap_fps: parseInt(r[0] && r[0].googFrameRateInput) || 0,
                        qos_v_fps: parseInt(t[0] && t[0].googFrameRateInput) || 0,
                        qos_s_fps: parseInt(r[0] && r[0].googFrameRateInput) || 0,
                        v_fps: parseInt(t[0] && t[0].googFrameRateSent) || 0,
                        s_fps: parseInt(r[0] && r[0].googFrameRateSent) || 0,
                        set_v_quality: this.adapterRef.channelInfo.sessionConfig.videoQuality,
                        real_v_res: (t[0] && t[0].googFrameWidthSent || 0) + "x" + (t[0] && t[0].googFrameHeightSent || 0),
                        real_s_res: (r[0] && r[0].googFrameWidthSent || 0) + "x" + (r[0] && r[0].googFrameHeightSent || 0),
                        real_v_kbps: parseFloat(t[0] && t[0].googActualEncBitrate) || 0,
                        real_s_kbps: parseFloat(r[0] && r[0].googActualEncBitrate) || 0,
                        real_v_kbps_n: parseFloat(t[0] && t[0].googTransmitBitrate) || 0,
                        real_s_kbps_n: parseFloat(r[0] && r[0].googTransmitBitrate) || 0,
                        real_a_kbps: -1,
                        real_a_kbps_n: e[0] ? e[0].bitsSentPerSecond : 0,
                        set_v_kbps: -1,
                        qos_v_kbps: -1,
                        a_volume: parseInt(e[0] && e[0].audioInputLevel) || 0,
                        a_cap_volume: this.adapterRef.localStream && Math.round(32768 * parseFloat(this.adapterRef.localStream.getAudioLevel())) || 0,
                        a_codec: e[0] && e[0].googCodecName || "opus",
                        a_stream_ended: this.LocalAudioEnable || !1,
                        a_ssrc: e[0] && e[0].ssrc || "",
                        v_codec: t[0] && t[0].googCodecName || "h264",
                        s_codec: r[0] && r[0].googCodecName || "h264",
                        v_stream_ended: this.localVideoEnable || !1,
                        s_stream_ended: this.localScreenEnable || !1,
                        v_ssrc: t[0] && t[0].ssrc || "",
                        s_ssrc: r[0] && r[0].ssrc || ""
                    },
                    n = 48;
                if (this.adapterRef.localStream && "speech_low_quality" == this.adapterRef.localStream.audioProfile ? n = 16 : this.adapterRef.localStream && "speech_standard" == this.adapterRef.localStream.audioProfile && (n = 32), this.adapterRef.sessionStats.SendBitrate = i.real_v_kbps_n + i.real_a_kbps_n, !this.adapterRef.localStream) throw new c.default({
                    code: u.default.NO_LOCALSTREAM,
                    message: "No localStream"
                });
                return this.adapterRef.localAudioStats[0] = {
                    CodecType: "Opus",
                    MuteState: this.adapterRef.localStream.muteStatus.audioSend,
                    RecordingLevel: i.a_volume,
                    SamplingRate: n,
                    SendBitrate: i.real_a_kbps_n,
                    SendLevel: i.a_volume
                }, this.adapterRef.localVideoStats[0] = {
                    LayerType: 1,
                    CodecName: t[0] && t[0].googCodecName,
                    CaptureFrameRate: i.v_cap_fps,
                    CaptureResolutionHeight: parseInt(t[0] && t[0].googFrameHeightInput) || 0,
                    CaptureResolutionWidth: parseInt(t[0] && t[0].googFrameWidthInput) || 0,
                    EncodeDelay: parseInt(t[0] && t[0].googAvgEncodeMs) || 0,
                    MuteState: this.adapterRef.localStream.muteStatus.videoSend,
                    SendBitrate: i.real_v_kbps_n,
                    SendFrameRate: i.v_fps,
                    SendResolutionHeight: parseInt(t[0] && t[0].googFrameHeightSent) || 0,
                    SendResolutionWidth: parseInt(t[0] && t[0].googFrameWidthSent) || 0,
                    TargetSendBitrate: parseInt(t[0] && t[0].googTargetEncBitrate) || 0,
                    TotalDuration: this.adapterRef.state.startPubVideoTime ? (Date.now() - this.adapterRef.state.startPubVideoTime) / 1e3 : 0,
                    TotalFreezeTime: t[0] ? t[0].totalFreezeTime : 0
                }, this.adapterRef.localScreenStats[0] = {
                    LayerType: 2,
                    CodecName: r[0] && r[0].googCodecName,
                    CaptureFrameRate: i.s_cap_fps,
                    CaptureResolutionHeight: parseInt(r[0] && r[0].googFrameHeightInput) || 0,
                    CaptureResolutionWidth: parseInt(r[0] && r[0].googFrameWidthInput) || 0,
                    EncodeDelay: parseInt(r[0] && r[0].googAvgEncodeMs) || 0,
                    MuteState: this.adapterRef.localStream.muteStatus.screenSend,
                    SendBitrate: i.real_s_kbps_n,
                    SendFrameRate: i.s_fps,
                    SendResolutionHeight: parseInt(r[0] && r[0].googFrameHeightSent) || 0,
                    SendResolutionWidth: parseInt(r[0] && r[0].googFrameWidthSent) || 0,
                    TargetSendBitrate: parseInt(r[0] && r[0].googTargetEncBitrate) || 0,
                    TotalDuration: this.adapterRef.state.startPubScreenTime ? (Date.now() - this.adapterRef.state.startPubScreenTime) / 1e3 : 0,
                    TotalFreezeTime: r[0] ? r[0].totalFreezeTime : 0
                }, this.infos2.tx2[0].v_res.push(i.real_v_res), this.infos2.tx2[0].v_fps.push(i.v_fps), this.infos2.tx2[0].v_plis.push(t[0] && t[0].googPlisReceived), this.infos2.tx2[0].v_rtt.push(i.rtt), this.infos2.tx2[0].v_simulcast.push(0), this.infos2.tx2[0].v_bw_kbps.push(t[0] && t[0].googAvailableSendBandwidth), this.infos2.tx2[0].v_tar_kbps.push(t[0] && t[0].googTargetEncBitrate), this.infos2.tx2[0].v_rel_kbps.push(t[0] && t[0].googActualEncBitrate), this.infos2.tx2[0].v_tx_kbps.push(t[0] && t[0].googTransmitBitrate), this.infos2.tx2[0].v_retx_kbps.push(t[0] && t[0].googRetransmitBitrate), this.infos2.tx2[0].v_delay.push(0), this.infos2.tx2[0].s_res.push(i.real_s_res), this.infos2.tx2[0].s_fps.push(i.s_fps), this.infos2.tx2[0].s_plis.push(r[0] && r[0].googPlisReceived), this.infos2.tx2[0].s_rtt.push(i.rtt), this.infos2.tx2[0].s_simulcast.push(0), this.infos2.tx2[0].s_bw_kbps.push(r[0] && r[0].googAvailableSendBandwidth), this.infos2.tx2[0].s_tar_kbps.push(r[0] && r[0].googTargetEncBitrate), this.infos2.tx2[0].s_rel_kbps.push(r[0] && r[0].googActualEncBitrate), this.infos2.tx2[0].s_tx_kbps.push(r[0] && r[0].googTransmitBitrate), this.infos2.tx2[0].s_retx_kbps.push(r[0] && r[0].googRetransmitBitrate), this.infos2.tx2[0].s_delay.push(0), this.infos2.tx2[0].a_cap_volume.push(i.a_cap_volume), this.infos2.tx2[0].a_rtt.push(e[0] && e[0].googRtt), i
            }
            updateTxMediaInfo(e, t, r) {
                if (!this.adapterRef.localStream) return;
                this.getLocalMediaStats(e, t, r);
                let i = ((navigator.connection || {}).type || "unknown").toString().toLowerCase();
                this.infos.net = p.convertNetwork(this.network || i)
            }
            dispatchExceptionEventSendAudio(e, t, r) {
                if (!e || !t) return;
                const i = this.adapterRef.localStream && this.adapterRef.localStream.muteStatus.audioSend,
                    n = this.adapterRef.localStream && this.adapterRef.localStream.pubStatus.audio.audio;
                if (!0 === i || !1 === n) return;
                0 === parseInt(t.audioInputLevel) && this.adapterRef.instance.emit("exception", {
                    msg: "AUDIO_INPUT_LEVEL_TOO_LOW",
                    code: 2001,
                    uid: r
                }), 0 === parseInt(t.bytesSent) - parseInt(e.bytesSent) && this.adapterRef.instance.emit("exception", {
                    msg: "SEND_AUDIO_BITRATE_TOO_LOW",
                    code: 2003,
                    uid: r
                })
            }
            dispatchExceptionEventSendVideo(e, t, r) {
                if (!e || !t) return;
                const i = this.adapterRef.localStream && (this.adapterRef.localStream.muteStatus.videoSend || this.adapterRef.localStream.muteStatus.videoRecv),
                    n = this.adapterRef.localStream && this.adapterRef.localStream.pubStatus.video.video;
                if (!0 === i || !1 === n) return;
                parseInt(t.googFrameRateInput) > 5 && parseInt(t.googFrameRateSent) <= 1 && this.adapterRef.instance.emit("exception", {
                    msg: "FRAMERATE_SENT_TOO_LOW",
                    code: 1002,
                    uid: r
                }), 0 === parseInt(t.bytesSent) - parseInt(e.bytesSent) && this.adapterRef.instance.emit("exception", {
                    msg: "FRAMERATE_VIDEO_BITRATE_TOO_LOW",
                    code: 1003,
                    uid: r
                })
            }
            dispatchExceptionEventRecvAudio(e, t, r) {
                if (!e || !t) return;
                const i = this.adapterRef.remoteStreamMap[r],
                    n = i && (i.muteStatus.audioSend || i.muteStatus.audioRecv);
                if (i && n) return;
                let o = parseInt(t.bytesReceived) - parseInt(e.bytesReceived),
                    s = parseInt(t.googDecodingNormal) - parseInt(e.googDecodingNormal);
                if (o > 0 && 0 === s && this.adapterRef.instance.emit("exception", {
                        msg: "RECV_AUDIO_DECODE_FAILED",
                        code: 2005,
                        uid: r
                    }), o > 0 && s > 0 && 0 == +(t.audioOutputLevel || t.audioLevel)) {
                    const e = i && i.Play && i.Play.audioDom && i.Play.audioDom.volume;
                    e && e > 0 && this.adapterRef.instance.emit("exception", {
                        msg: "AUDIO_OUTPUT_LEVEL_TOO_LOW",
                        code: 2002,
                        uid: r
                    })
                }
            }
            dispatchExceptionEventRecvVideo(e, t, r) {
                if (!e || !t) return;
                const i = this.adapterRef.remoteStreamMap[r],
                    n = i && (i.muteStatus.videoSend || i.muteStatus.videoRecv);
                if (i && n) return;
                parseInt(t.bytesReceived) - parseInt(e.bytesReceived) > 0 && 0 === parseInt(t.googFrameRateDecoded) && this.adapterRef.instance.emit("exception", {
                    msg: "RECV_VIDEO_DECODE_FAILED",
                    code: 1005,
                    uid: r
                })
            }
            dispatchExceptionEventRecvScreen(e, t, r) {
                if (!e || !t) return;
                const i = this.adapterRef.remoteStreamMap[r],
                    n = i && (i.muteStatus.screenSend || i.muteStatus.screenSend);
                if (i && n) return;
                parseInt(t.bytesReceived) - parseInt(e.bytesReceived) > 0 && 0 === parseInt(t.googFrameRateDecoded) && this.adapterRef.instance.emit("exception", {
                    msg: "RECV_SCREEN_DECODE_FAILED",
                    code: 1005,
                    uid: r
                })
            }
            getRemoteAudioFreezeStats(e, t, r) {
                let i = 0;
                if (!e || !t) return {
                    totalFreezeTime: i,
                    freezeTime: 0
                };
                let n = parseInt(e.googDecodingPLC) + parseInt(e.googDecodingCNG) + parseInt(e.googDecodingPLCCNG),
                    o = parseInt(e.googDecodingCTN),
                    s = parseInt(t.googDecodingPLC) + parseInt(t.googDecodingCNG) + parseInt(t.googDecodingPLCCNG),
                    a = parseInt(t.googDecodingCTN);
                return a <= n ? {
                    totalFreezeTime: i,
                    freezeTime: 0
                } : (s - n) / (a - o) < .2 ? {
                    totalFreezeTime: 0,
                    freezeTime: 0
                } : (this.adapterRef.remoteAudioStats && this.adapterRef.remoteAudioStats[r] && (i = this.adapterRef.remoteAudioStats[r].TotalFreezeTime || 0), i++, {
                    totalFreezeTime: i,
                    freezeTime: 2
                })
            }
            getLocalVideoFreezeStats(e, t) {
                let r = 0;
                if (!e) return {
                    totalFreezeTime: r,
                    freezeTime: 0
                };
                let i = parseInt(e.googFrameRateInput),
                    n = parseInt(e.googFrameRateSent);
                return i > 5 && n < 3 ? (this.adapterRef.localVideoStats && this.adapterRef.localVideoStats[0] && (r = this.adapterRef.localVideoStats[0].TotalFreezeTime || 0), r++, {
                    totalFreezeTime: r,
                    freezeTime: 2
                }) : {
                    totalFreezeTime: r,
                    freezeTime: 0
                }
            }
            getLocalScreenFreezeStats(e, t) {
                let r = 0;
                if (!e) return {
                    totalFreezeTime: r,
                    freezeTime: 0
                };
                let i = parseInt(e.googFrameRateInput),
                    n = parseInt(e.googFrameRateSent);
                return i > 5 && n < 3 ? (this.adapterRef.localScreenStats && this.adapterRef.localScreenStats[0] && (r = this.adapterRef.localScreenStats[0].TotalFreezeTime || 0), r++, {
                    totalFreezeTime: r,
                    freezeTime: 2
                }) : {
                    totalFreezeTime: r,
                    freezeTime: 0
                }
            }
            getRemoteVideoFreezeStats(e, t, r) {
                let i = 0;
                if (!t) return {
                    totalFreezeTime: i,
                    freezeTime: 0
                };
                let n = parseInt(t.googFrameRateReceived),
                    o = parseInt(t.googFrameRateDecoded);
                return n > 5 && n < 10 && o < 3 || n > 10 && n < 20 && o < 4 || n > 20 && o < 5 ? (this.adapterRef.remoteVideoStats && this.adapterRef.remoteVideoStats[r] && (i = this.adapterRef.remoteVideoStats[r].TotalFreezeTime || 0), i++, {
                    totalFreezeTime: i,
                    freezeTime: 2
                }) : {
                    totalFreezeTime: i,
                    freezeTime: 0
                }
            }
            getRemoteScreenFreezeStats(e, t, r) {
                let i = 0;
                if (!t) return {
                    totalFreezeTime: i,
                    freezeTime: 0
                };
                let n = parseInt(t.googFrameRateReceived),
                    o = parseInt(t.googFrameRateDecoded);
                return n > 5 && n < 10 && o < 3 || n > 10 && n < 20 && o < 4 || n > 20 && o < 5 ? (this.adapterRef.remoteScreenStats && this.adapterRef.remoteScreenStats[r] && (i = this.adapterRef.remoteScreenStats[r].TotalFreezeTime || 0), i++, {
                    totalFreezeTime: i,
                    freezeTime: 2
                }) : {
                    totalFreezeTime: i,
                    freezeTime: 0
                }
            }
            send() {
                if (!this.adapterRef.report) return;
                if (!this.infos.uid || !this.infos.cid) return;
                let e = new a.DataReport({
                    adapterRef: this.adapterRef
                });
                e.setHeartbeat({
                    name: "setHeartbeat",
                    uid: "" + this.adapterRef.channelInfo.uid,
                    cid: "" + this.adapterRef.channelInfo.cid
                }), e.send(), this.clearInfoData()
            }
            destroy() {
                this.resetStatus(), this._reset()
            }
        };
        let p = {
            convertNetwork: e => ({
                wlan: "wifi",
                lan: "ethernet"
            } [e] || "unknown"),
            convertPlatform(e) {
                let t;
                return t = /Windows/i.test(e) ? "Win" : e, t = /OS X/i.test(t) ? "Mac" : t, t
            },
            compare: e => function(t, r) {
                var i = t[e],
                    n = r[e];
                return 0 === n || n ? 0 === i || i ? n - i : 1 : -1
            }
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        const i = r(68);
        const n = new class {
            constructor() {
                this.intervalMap_ = new Map
            }
            setInterval(e, t, r = !0) {
                const n = i.generateUUID();
                let o = Date.now(),
                    s = o;
                this.intervalMap_.set(n, {
                    rafId: null,
                    timeoutId: null,
                    onVisibilityChange: null
                });
                const a = () => {
                        if (r && document.hidden) {
                            e();
                            const r = setTimeout(a, t);
                            this.setTimeoutId(n, r), o = Date.now(), s = o
                        } else {
                            s = Date.now(), s - o >= t && (o = s, e());
                            const r = requestAnimationFrame(a);
                            this.setRafId(n, r)
                        }
                    },
                    d = requestAnimationFrame(a);
                if (this.setRafId(n, d), r) {
                    const e = () => {
                        if (document.hidden) {
                            const e = Date.now() - o;
                            if (e >= t) a();
                            else {
                                const r = setTimeout(a, t - e);
                                this.setTimeoutId(n, r)
                            }
                        }
                    };
                    document.addEventListener("visibilitychange", e), this.setOnVisibilityChange(n, e)
                }
                return n
            }
            clearInterval(e) {
                if (this.intervalMap_.has(e)) {
                    const {
                        rafId: t,
                        timeoutId: r,
                        onVisibilityChange: i
                    } = this.intervalMap_.get(e);
                    cancelAnimationFrame(t), clearTimeout(r), document.removeEventListener("visibilitychange", i), this.intervalMap_.delete(e)
                }
            }
            setTimeoutId(e, t) {
                if (this.intervalMap_.has(e)) {
                    const r = this.intervalMap_.get(e);
                    r.timeoutId && clearTimeout(r.timeoutId), r.timeoutId = t
                }
            }
            setRafId(e, t) {
                if (this.intervalMap_.has(e)) {
                    const r = this.intervalMap_.get(e);
                    r.rafId && cancelAnimationFrame(r.rafId), r.rafId = t
                }
            }
            setOnVisibilityChange(e, t) {
                if (this.intervalMap_.has(e)) {
                    this.intervalMap_.get(e).onVisibilityChange = t
                }
            }
        };
        t.default = n
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        const s = r(3),
            a = r(220),
            d = o(r(221)),
            c = r(238);
        let u = new Uint8Array(1);
        u[0] = 10;
        const l = u;
        t.default = class {
            constructor(e) {
                this.url_ = e.url, this.socket_ = null, this.socketInUse_ = null, this.isConnected_ = !1, this.isConnecting_ = !1, this.pingPongTimeoutId_ = -1, this.pingTimeoutId_ = -1, this.reconnectionTimer_ = -1, this.reconnectionCount_ = 0, this.emitter_ = new s.EventEmitter, this.adapterRef = e.adapterRef
            }
            init() {
                this.adapterRef.logger.log("connect to url: " + this.url_), this.socket_ = new WebSocket(this.url_), this.bindSocket(this.socket_)
            }
            bindSocket(e) {
                e.onopen = this.onopen.bind(this), e.onclose = this.onclose.bind(this), e.onerror = this.onerror.bind(this), e.onmessage = this.onmessage.bind(this)
            }
            unbindSocket(e) {
                e.onopen = () => {}, e.onclose = () => {}, e.onerror = () => {}, e.onmessage = () => {}
            }
            onopen(e) {
                if (this.isConnected_) return;
                this.isConnected_ = !0, this.isConnecting_ = !1;
                const t = e.target.url;
                this.adapterRef.logger.log(`websocket[${t}] is connected`), this.startPingPong()
            }
            onclose(e) {
                const t = e.target.url,
                    r = e.target === this.socket_;
                this.adapterRef.logger.log(`websocket[${t} InUse: ${r}] is closed with code: ${e.code}`), e.target === this.socket_ ? (this.isConnected_ = !1, e.wasClean && 1e3 === e.code || (this.adapterRef.logger.warn(`onclose code:${e.code} reason:${e.reason}`), this.socket_.onclose = () => {}, this.socket_.close(4001), this.socket_ = this.socket_ = null)) : (this.isConnected_ = !1, this.socket_.close())
            }
            onerror(e) {
                const t = e.target.url;
                this.adapterRef.logger.warn(`websocket[${t}] error observed`), this.isConnected_ ? e.target === this.socket_ && (this.isConnected_ = !1, this.socket_ = null, this.reconnect()) : this.reconnect(), this.isConnecting_ = !1, this.isConnected_ = !1
            }
            onmessage(e) {
                if (this.isConnected_ && e && e.data) {
                    11 === JSON.parse(e.data).action && this.emit(11, e)
                }
            }
            isConnected() {
                return this.isConnected_
            }
            sendPB(e) {
                if (this.isConnected_) {
                    const t = this.createPBMessage(e);
                    this.socket_.send(t)
                }
            }
            sendPing(e) {
                this.isConnected_ && this.socket_.send(e)
            }
            createPBMessage(e) {
                let t = d.Root.fromJSON(c).lookupType("WebrtcStats"),
                    r = t.create(e),
                    i = t.encode(r).finish();
                return Uint8Array.from([4, 1, 1, 1, 1, 0, 0, 0].concat(Array.from(i)))
            }
            async startPingPong() {
                try {
                    if (-1 !== this.pingPongTimeoutId_) return;
                    await this.ping(), this.pingPongTimeoutId_ = setTimeout(() => {
                        this.pingPongTimeoutId_ = -1, this.startPingPong()
                    }, 1e4)
                } catch (e) {
                    this.adapterRef.logger.log("ping-pong failed, start reconnection"), this.close(), this.reconnect()
                }
            }
            stopPingPong() {
                this.adapterRef.logger.log("stop ping pong"), clearTimeout(this.pingTimeoutId_), clearTimeout(this.pingPongTimeoutId_), this.pingTimeoutId_ = -1, this.pingPongTimeoutId_ = -1
            }
            ping() {
                return new Promise((e, t) => {
                    if (-1 !== this.pingTimeoutId_) return e();
                    this.sendPing(l), this.once(11, () => {
                        clearTimeout(this.pingTimeoutId_), this.pingTimeoutId_ = -1, e()
                    }), this.pingTimeoutId_ = setTimeout(() => {
                        this.pingTimeoutId_ = -1, t()
                    }, 1e4)
                })
            }
            reconnect() {
                if (this.isConnecting_ || -1 !== this.reconnectionTimer_) return void this.adapterRef.logger.log("websocket is reconnecting");
                this.isConnecting_ = !0, this.reconnectionCount_++, this.socket_ = new WebSocket(this.url_), this.bindSocket(this.socket_);
                const e = a.getReconnectionTimeout(this.reconnectionCount_);
                this.reconnectionTimer_ = setTimeout(() => {
                    this.isConnecting_ = !1, this.clearReconnectionTimer(), this.reconnect()
                }, e)
            }
            clearReconnectionTimer() {
                -1 !== this.reconnectionTimer_ && (clearTimeout(this.reconnectionTimer_), this.reconnectionTimer_ = -1)
            }
            once(e, t, r) {
                this.emitter_.once(e, t, r)
            }
            emit(e, t, r) {
                this.emitter_.emit(e, t, r)
            }
            close() {
                this.adapterRef.logger.log("close websocket"), this.clearReconnectionTimer(), this.stopPingPong(), this.socket_ && this.unbindSocket(this.socket_), this.isConnected_ = !1, this.isConnecting_ = !1, this.socket_ = null
            }
        }
    }, function(e, t, r) {
        "use strict";

        function i(e, t = 1, r = 1) {
            return e <= 1 ? r : i(e - 1, r, t + r)
        }
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.getReconnectionTimeout = t.fibonacci = void 0, t.fibonacci = i, t.getReconnectionTimeout = function(e) {
            const t = Math.round(e / 2) + 1;
            return t > 9 ? 6e4 : 1e3 * i(t)
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = r(222)
    }, function(e, t, r) {
        "use strict";
        var i = e.exports = r(116);
        i.build = "full", i.tokenize = r(126), i.parse = r(236), i.common = r(237), i.Root._configure(i.Type, i.parse, i.common)
    }, function(e, t, r) {
        "use strict";
        var i = t;

        function n() {
            i.util._configure(), i.Writer._configure(i.BufferWriter), i.Reader._configure(i.BufferReader)
        }
        i.build = "minimal", i.Writer = r(69), i.BufferWriter = r(230), i.Reader = r(70), i.BufferReader = r(231), i.util = r(8), i.rpc = r(119), i.roots = r(120), i.configure = n, n()
    }, function(e, t, r) {
        "use strict";
        var i = t;
        i.length = function(e) {
            var t = e.length;
            if (!t) return 0;
            for (var r = 0; --t % 4 > 1 && "=" === e.charAt(t);) ++r;
            return Math.ceil(3 * e.length) / 4 - r
        };
        for (var n = new Array(64), o = new Array(123), s = 0; s < 64;) o[n[s] = s < 26 ? s + 65 : s < 52 ? s + 71 : s < 62 ? s - 4 : s - 59 | 43] = s++;
        i.encode = function(e, t, r) {
            for (var i, o = null, s = [], a = 0, d = 0; t < r;) {
                var c = e[t++];
                switch (d) {
                    case 0:
                        s[a++] = n[c >> 2], i = (3 & c) << 4, d = 1;
                        break;
                    case 1:
                        s[a++] = n[i | c >> 4], i = (15 & c) << 2, d = 2;
                        break;
                    case 2:
                        s[a++] = n[i | c >> 6], s[a++] = n[63 & c], d = 0
                }
                a > 8191 && ((o || (o = [])).push(String.fromCharCode.apply(String, s)), a = 0)
            }
            return d && (s[a++] = n[i], s[a++] = 61, 1 === d && (s[a++] = 61)), o ? (a && o.push(String.fromCharCode.apply(String, s.slice(0, a))), o.join("")) : String.fromCharCode.apply(String, s.slice(0, a))
        };
        i.decode = function(e, t, r) {
            for (var i, n = r, s = 0, a = 0; a < e.length;) {
                var d = e.charCodeAt(a++);
                if (61 === d && s > 1) break;
                if (void 0 === (d = o[d])) throw Error("invalid encoding");
                switch (s) {
                    case 0:
                        i = d, s = 1;
                        break;
                    case 1:
                        t[r++] = i << 2 | (48 & d) >> 4, i = d, s = 2;
                        break;
                    case 2:
                        t[r++] = (15 & i) << 4 | (60 & d) >> 2, i = d, s = 3;
                        break;
                    case 3:
                        t[r++] = (3 & i) << 6 | d, s = 0
                }
            }
            if (1 === s) throw Error("invalid encoding");
            return r - n
        }, i.test = function(e) {
            return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)
        }
    }, function(e, t, r) {
        "use strict";

        function i() {
            this._listeners = {}
        }
        e.exports = i, i.prototype.on = function(e, t, r) {
            return (this._listeners[e] || (this._listeners[e] = [])).push({
                fn: t,
                ctx: r || this
            }), this
        }, i.prototype.off = function(e, t) {
            if (void 0 === e) this._listeners = {};
            else if (void 0 === t) this._listeners[e] = [];
            else
                for (var r = this._listeners[e], i = 0; i < r.length;) r[i].fn === t ? r.splice(i, 1) : ++i;
            return this
        }, i.prototype.emit = function(e) {
            var t = this._listeners[e];
            if (t) {
                for (var r = [], i = 1; i < arguments.length;) r.push(arguments[i++]);
                for (i = 0; i < t.length;) t[i].fn.apply(t[i++].ctx, r)
            }
            return this
        }
    }, function(e, t, r) {
        "use strict";

        function i(e) {
            return "undefined" != typeof Float32Array ? function() {
                var t = new Float32Array([-0]),
                    r = new Uint8Array(t.buffer),
                    i = 128 === r[3];

                function n(e, i, n) {
                    t[0] = e, i[n] = r[0], i[n + 1] = r[1], i[n + 2] = r[2], i[n + 3] = r[3]
                }

                function o(e, i, n) {
                    t[0] = e, i[n] = r[3], i[n + 1] = r[2], i[n + 2] = r[1], i[n + 3] = r[0]
                }

                function s(e, i) {
                    return r[0] = e[i], r[1] = e[i + 1], r[2] = e[i + 2], r[3] = e[i + 3], t[0]
                }

                function a(e, i) {
                    return r[3] = e[i], r[2] = e[i + 1], r[1] = e[i + 2], r[0] = e[i + 3], t[0]
                }
                e.writeFloatLE = i ? n : o, e.writeFloatBE = i ? o : n, e.readFloatLE = i ? s : a, e.readFloatBE = i ? a : s
            }() : function() {
                function t(e, t, r, i) {
                    var n = t < 0 ? 1 : 0;
                    if (n && (t = -t), 0 === t) e(1 / t > 0 ? 0 : 2147483648, r, i);
                    else if (isNaN(t)) e(2143289344, r, i);
                    else if (t > 34028234663852886e22) e((n << 31 | 2139095040) >>> 0, r, i);
                    else if (t < 11754943508222875e-54) e((n << 31 | Math.round(t / 1401298464324817e-60)) >>> 0, r, i);
                    else {
                        var o = Math.floor(Math.log(t) / Math.LN2);
                        e((n << 31 | o + 127 << 23 | 8388607 & Math.round(t * Math.pow(2, -o) * 8388608)) >>> 0, r, i)
                    }
                }

                function r(e, t, r) {
                    var i = e(t, r),
                        n = 2 * (i >> 31) + 1,
                        o = i >>> 23 & 255,
                        s = 8388607 & i;
                    return 255 === o ? s ? NaN : n * (1 / 0) : 0 === o ? 1401298464324817e-60 * n * s : n * Math.pow(2, o - 150) * (s + 8388608)
                }
                e.writeFloatLE = t.bind(null, n), e.writeFloatBE = t.bind(null, o), e.readFloatLE = r.bind(null, s), e.readFloatBE = r.bind(null, a)
            }(), "undefined" != typeof Float64Array ? function() {
                var t = new Float64Array([-0]),
                    r = new Uint8Array(t.buffer),
                    i = 128 === r[7];

                function n(e, i, n) {
                    t[0] = e, i[n] = r[0], i[n + 1] = r[1], i[n + 2] = r[2], i[n + 3] = r[3], i[n + 4] = r[4], i[n + 5] = r[5], i[n + 6] = r[6], i[n + 7] = r[7]
                }

                function o(e, i, n) {
                    t[0] = e, i[n] = r[7], i[n + 1] = r[6], i[n + 2] = r[5], i[n + 3] = r[4], i[n + 4] = r[3], i[n + 5] = r[2], i[n + 6] = r[1], i[n + 7] = r[0]
                }

                function s(e, i) {
                    return r[0] = e[i], r[1] = e[i + 1], r[2] = e[i + 2], r[3] = e[i + 3], r[4] = e[i + 4], r[5] = e[i + 5], r[6] = e[i + 6], r[7] = e[i + 7], t[0]
                }

                function a(e, i) {
                    return r[7] = e[i], r[6] = e[i + 1], r[5] = e[i + 2], r[4] = e[i + 3], r[3] = e[i + 4], r[2] = e[i + 5], r[1] = e[i + 6], r[0] = e[i + 7], t[0]
                }
                e.writeDoubleLE = i ? n : o, e.writeDoubleBE = i ? o : n, e.readDoubleLE = i ? s : a, e.readDoubleBE = i ? a : s
            }() : function() {
                function t(e, t, r, i, n, o) {
                    var s = i < 0 ? 1 : 0;
                    if (s && (i = -i), 0 === i) e(0, n, o + t), e(1 / i > 0 ? 0 : 2147483648, n, o + r);
                    else if (isNaN(i)) e(0, n, o + t), e(2146959360, n, o + r);
                    else if (i > 17976931348623157e292) e(0, n, o + t), e((s << 31 | 2146435072) >>> 0, n, o + r);
                    else {
                        var a;
                        if (i < 22250738585072014e-324) e((a = i / 5e-324) >>> 0, n, o + t), e((s << 31 | a / 4294967296) >>> 0, n, o + r);
                        else {
                            var d = Math.floor(Math.log(i) / Math.LN2);
                            1024 === d && (d = 1023), e(4503599627370496 * (a = i * Math.pow(2, -d)) >>> 0, n, o + t), e((s << 31 | d + 1023 << 20 | 1048576 * a & 1048575) >>> 0, n, o + r)
                        }
                    }
                }

                function r(e, t, r, i, n) {
                    var o = e(i, n + t),
                        s = e(i, n + r),
                        a = 2 * (s >> 31) + 1,
                        d = s >>> 20 & 2047,
                        c = 4294967296 * (1048575 & s) + o;
                    return 2047 === d ? c ? NaN : a * (1 / 0) : 0 === d ? 5e-324 * a * c : a * Math.pow(2, d - 1075) * (c + 4503599627370496)
                }
                e.writeDoubleLE = t.bind(null, n, 0, 4), e.writeDoubleBE = t.bind(null, o, 4, 0), e.readDoubleLE = r.bind(null, s, 0, 4), e.readDoubleBE = r.bind(null, a, 4, 0)
            }(), e
        }

        function n(e, t, r) {
            t[r] = 255 & e, t[r + 1] = e >>> 8 & 255, t[r + 2] = e >>> 16 & 255, t[r + 3] = e >>> 24
        }

        function o(e, t, r) {
            t[r] = e >>> 24, t[r + 1] = e >>> 16 & 255, t[r + 2] = e >>> 8 & 255, t[r + 3] = 255 & e
        }

        function s(e, t) {
            return (e[t] | e[t + 1] << 8 | e[t + 2] << 16 | e[t + 3] << 24) >>> 0
        }

        function a(e, t) {
            return (e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]) >>> 0
        }
        e.exports = i(i)
    }, function(e, t, r) {
        "use strict";
        var i = t;
        i.length = function(e) {
            for (var t = 0, r = 0, i = 0; i < e.length; ++i)(r = e.charCodeAt(i)) < 128 ? t += 1 : r < 2048 ? t += 2 : 55296 == (64512 & r) && 56320 == (64512 & e.charCodeAt(i + 1)) ? (++i, t += 4) : t += 3;
            return t
        }, i.read = function(e, t, r) {
            if (r - t < 1) return "";
            for (var i, n = null, o = [], s = 0; t < r;)(i = e[t++]) < 128 ? o[s++] = i : i > 191 && i < 224 ? o[s++] = (31 & i) << 6 | 63 & e[t++] : i > 239 && i < 365 ? (i = ((7 & i) << 18 | (63 & e[t++]) << 12 | (63 & e[t++]) << 6 | 63 & e[t++]) - 65536, o[s++] = 55296 + (i >> 10), o[s++] = 56320 + (1023 & i)) : o[s++] = (15 & i) << 12 | (63 & e[t++]) << 6 | 63 & e[t++], s > 8191 && ((n || (n = [])).push(String.fromCharCode.apply(String, o)), s = 0);
            return n ? (s && n.push(String.fromCharCode.apply(String, o.slice(0, s))), n.join("")) : String.fromCharCode.apply(String, o.slice(0, s))
        }, i.write = function(e, t, r) {
            for (var i, n, o = r, s = 0; s < e.length; ++s)(i = e.charCodeAt(s)) < 128 ? t[r++] = i : i < 2048 ? (t[r++] = i >> 6 | 192, t[r++] = 63 & i | 128) : 55296 == (64512 & i) && 56320 == (64512 & (n = e.charCodeAt(s + 1))) ? (i = 65536 + ((1023 & i) << 10) + (1023 & n), ++s, t[r++] = i >> 18 | 240, t[r++] = i >> 12 & 63 | 128, t[r++] = i >> 6 & 63 | 128, t[r++] = 63 & i | 128) : (t[r++] = i >> 12 | 224, t[r++] = i >> 6 & 63 | 128, t[r++] = 63 & i | 128);
            return r - o
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = function(e, t, r) {
            var i = r || 8192,
                n = i >>> 1,
                o = null,
                s = i;
            return function(r) {
                if (r < 1 || r > n) return e(r);
                s + r > i && (o = e(i), s = 0);
                var a = t.call(o, s, s += r);
                return 7 & s && (s = 1 + (7 | s)), a
            }
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = n;
        var i = r(8);

        function n(e, t) {
            this.lo = e >>> 0, this.hi = t >>> 0
        }
        var o = n.zero = new n(0, 0);
        o.toNumber = function() {
            return 0
        }, o.zzEncode = o.zzDecode = function() {
            return this
        }, o.length = function() {
            return 1
        };
        var s = n.zeroHash = "\0\0\0\0\0\0\0\0";
        n.fromNumber = function(e) {
            if (0 === e) return o;
            var t = e < 0;
            t && (e = -e);
            var r = e >>> 0,
                i = (e - r) / 4294967296 >>> 0;
            return t && (i = ~i >>> 0, r = ~r >>> 0, ++r > 4294967295 && (r = 0, ++i > 4294967295 && (i = 0))), new n(r, i)
        }, n.from = function(e) {
            if ("number" == typeof e) return n.fromNumber(e);
            if (i.isString(e)) {
                if (!i.Long) return n.fromNumber(parseInt(e, 10));
                e = i.Long.fromString(e)
            }
            return e.low || e.high ? new n(e.low >>> 0, e.high >>> 0) : o
        }, n.prototype.toNumber = function(e) {
            if (!e && this.hi >>> 31) {
                var t = 1 + ~this.lo >>> 0,
                    r = ~this.hi >>> 0;
                return t || (r = r + 1 >>> 0), -(t + 4294967296 * r)
            }
            return this.lo + 4294967296 * this.hi
        }, n.prototype.toLong = function(e) {
            return i.Long ? new i.Long(0 | this.lo, 0 | this.hi, Boolean(e)) : {
                low: 0 | this.lo,
                high: 0 | this.hi,
                unsigned: Boolean(e)
            }
        };
        var a = String.prototype.charCodeAt;
        n.fromHash = function(e) {
            return e === s ? o : new n((a.call(e, 0) | a.call(e, 1) << 8 | a.call(e, 2) << 16 | a.call(e, 3) << 24) >>> 0, (a.call(e, 4) | a.call(e, 5) << 8 | a.call(e, 6) << 16 | a.call(e, 7) << 24) >>> 0)
        }, n.prototype.toHash = function() {
            return String.fromCharCode(255 & this.lo, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, 255 & this.hi, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24)
        }, n.prototype.zzEncode = function() {
            var e = this.hi >> 31;
            return this.hi = ((this.hi << 1 | this.lo >>> 31) ^ e) >>> 0, this.lo = (this.lo << 1 ^ e) >>> 0, this
        }, n.prototype.zzDecode = function() {
            var e = -(1 & this.lo);
            return this.lo = ((this.lo >>> 1 | this.hi << 31) ^ e) >>> 0, this.hi = (this.hi >>> 1 ^ e) >>> 0, this
        }, n.prototype.length = function() {
            var e = this.lo,
                t = (this.lo >>> 28 | this.hi << 4) >>> 0,
                r = this.hi >>> 24;
            return 0 === r ? 0 === t ? e < 16384 ? e < 128 ? 1 : 2 : e < 2097152 ? 3 : 4 : t < 16384 ? t < 128 ? 5 : 6 : t < 2097152 ? 7 : 8 : r < 128 ? 9 : 10
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = o;
        var i = r(69);
        (o.prototype = Object.create(i.prototype)).constructor = o;
        var n = r(8);

        function o() {
            i.call(this)
        }

        function s(e, t, r) {
            e.length < 40 ? n.utf8.write(e, t, r) : t.utf8Write ? t.utf8Write(e, r) : t.write(e, r)
        }
        o._configure = function() {
            o.alloc = n._Buffer_allocUnsafe, o.writeBytesBuffer = n.Buffer && n.Buffer.prototype instanceof Uint8Array && "set" === n.Buffer.prototype.set.name ? function(e, t, r) {
                t.set(e, r)
            } : function(e, t, r) {
                if (e.copy) e.copy(t, r, 0, e.length);
                else
                    for (var i = 0; i < e.length;) t[r++] = e[i++]
            }
        }, o.prototype.bytes = function(e) {
            n.isString(e) && (e = n._Buffer_from(e, "base64"));
            var t = e.length >>> 0;
            return this.uint32(t), t && this._push(o.writeBytesBuffer, t, e), this
        }, o.prototype.string = function(e) {
            var t = n.Buffer.byteLength(e);
            return this.uint32(t), t && this._push(s, t, e), this
        }, o._configure()
    }, function(e, t, r) {
        "use strict";
        e.exports = o;
        var i = r(70);
        (o.prototype = Object.create(i.prototype)).constructor = o;
        var n = r(8);

        function o(e) {
            i.call(this, e)
        }
        o._configure = function() {
            n.Buffer && (o.prototype._slice = n.Buffer.prototype.slice)
        }, o.prototype.string = function() {
            var e = this.uint32();
            return this.buf.utf8Slice ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + e, this.len)) : this.buf.toString("utf-8", this.pos, this.pos = Math.min(this.pos + e, this.len))
        }, o._configure()
    }, function(e, t, r) {
        "use strict";
        e.exports = n;
        var i = r(8);

        function n(e, t, r) {
            if ("function" != typeof e) throw TypeError("rpcImpl must be a function");
            i.EventEmitter.call(this), this.rpcImpl = e, this.requestDelimited = Boolean(t), this.responseDelimited = Boolean(r)
        }(n.prototype = Object.create(i.EventEmitter.prototype)).constructor = n, n.prototype.rpcCall = function e(t, r, n, o, s) {
            if (!o) throw TypeError("request must be specified");
            var a = this;
            if (!s) return i.asPromise(e, a, t, r, n, o);
            if (a.rpcImpl) try {
                return a.rpcImpl(t, r[a.requestDelimited ? "encodeDelimited" : "encode"](o).finish(), (function(e, r) {
                    if (e) return a.emit("error", e, t), s(e);
                    if (null !== r) {
                        if (!(r instanceof n)) try {
                            r = n[a.responseDelimited ? "decodeDelimited" : "decode"](r)
                        } catch (e) {
                            return a.emit("error", e, t), s(e)
                        }
                        return a.emit("data", r, t), s(null, r)
                    }
                    a.end(!0)
                }))
            } catch (e) {
                return a.emit("error", e, t), void setTimeout((function() {
                    s(e)
                }), 0)
            } else setTimeout((function() {
                s(Error("already ended"))
            }), 0)
        }, n.prototype.end = function(e) {
            return this.rpcImpl && (e || this.rpcImpl(null, null, null), this.rpcImpl = null, this.emit("end").off()), this
        }
    }, function(e, t, r) {
        "use strict";

        function i(e, t) {
            "string" == typeof e && (t = e, e = void 0);
            var r = [];

            function n(e) {
                if ("string" != typeof e) {
                    var t = o();
                    if (i.verbose && console.log("codegen: " + t), t = "return " + t, e) {
                        for (var s = Object.keys(e), a = new Array(s.length + 1), d = new Array(s.length), c = 0; c < s.length;) a[c] = s[c], d[c] = e[s[c++]];
                        return a[c] = t, Function.apply(null, a).apply(null, d)
                    }
                    return Function(t)()
                }
                for (var u = new Array(arguments.length - 1), l = 0; l < u.length;) u[l] = arguments[++l];
                if (l = 0, e = e.replace(/%([%dfijs])/g, (function(e, t) {
                        var r = u[l++];
                        switch (t) {
                            case "d":
                            case "f":
                                return String(Number(r));
                            case "i":
                                return String(Math.floor(r));
                            case "j":
                                return JSON.stringify(r);
                            case "s":
                                return String(r)
                        }
                        return "%"
                    })), l !== u.length) throw Error("parameter count mismatch");
                return r.push(e), n
            }

            function o(i) {
                return "function " + (i || t || "") + "(" + (e && e.join(",") || "") + "){\n  " + r.join("\n  ") + "\n}"
            }
            return n.toString = o, n
        }
        e.exports = i, i.verbose = !1
    }, function(e, t, r) {
        "use strict";
        e.exports = o;
        var i = r(117),
            n = r(118)("fs");

        function o(e, t, r) {
            return "function" == typeof t ? (r = t, t = {}) : t || (t = {}), r ? !t.xhr && n && n.readFile ? n.readFile(e, (function(i, n) {
                return i && "undefined" != typeof XMLHttpRequest ? o.xhr(e, t, r) : i ? r(i) : r(null, t.binary ? n : n.toString("utf8"))
            })) : o.xhr(e, t, r) : i(o, this, e, t)
        }
        o.xhr = function(e, t, r) {
            var i = new XMLHttpRequest;
            i.onreadystatechange = function() {
                if (4 === i.readyState) {
                    if (0 !== i.status && 200 !== i.status) return r(Error("status " + i.status));
                    if (t.binary) {
                        var e = i.response;
                        if (!e) {
                            e = [];
                            for (var n = 0; n < i.responseText.length; ++n) e.push(255 & i.responseText.charCodeAt(n))
                        }
                        return r(null, "undefined" != typeof Uint8Array ? new Uint8Array(e) : e)
                    }
                    return r(null, i.responseText)
                }
            }, t.binary && ("overrideMimeType" in i && i.overrideMimeType("text/plain; charset=x-user-defined"), i.responseType = "arraybuffer"), i.open("GET", e), i.send()
        }
    }, function(e, t, r) {
        "use strict";
        var i = t,
            n = i.isAbsolute = function(e) {
                return /^(?:\/|\w+:)/.test(e)
            },
            o = i.normalize = function(e) {
                var t = (e = e.replace(/\\/g, "/").replace(/\/{2,}/g, "/")).split("/"),
                    r = n(e),
                    i = "";
                r && (i = t.shift() + "/");
                for (var o = 0; o < t.length;) ".." === t[o] ? o > 0 && ".." !== t[o - 1] ? t.splice(--o, 2) : r ? t.splice(o, 1) : ++o : "." === t[o] ? t.splice(o, 1) : ++o;
                return i + t.join("/")
            };
        i.resolve = function(e, t, r) {
            return r || (t = o(t)), n(t) ? t : (r || (e = o(e)), (e = e.replace(/(?:\/|^)[^/]+$/, "")).length ? o(e + "/" + t) : t)
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = T, T.filename = null, T.defaults = {
            keepCase: !1
        };
        var i = r(126),
            n = r(76),
            o = r(71),
            s = r(19),
            a = r(72),
            d = r(35),
            c = r(6),
            u = r(73),
            l = r(74),
            p = r(24),
            f = r(2),
            h = /^[1-9][0-9]*$/,
            m = /^-?[1-9][0-9]*$/,
            g = /^0[x][0-9a-fA-F]+$/,
            v = /^-?0[x][0-9a-fA-F]+$/,
            y = /^0[0-7]+$/,
            _ = /^-?0[0-7]+$/,
            S = /^(?![eE])[0-9]*(?:\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,
            b = /^[a-zA-Z_][a-zA-Z_0-9]*$/,
            R = /^(?:\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,
            w = /^(?:\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;

        function T(e, t, r) {
            t instanceof n || (r = t, t = new n), r || (r = T.defaults);
            var E, A, O, I, x, P = r.preferTrailingComment || !1,
                k = i(e, r.alternateCommentMode || !1),
                C = k.next,
                D = k.push,
                M = k.peek,
                N = k.skip,
                L = k.cmnt,
                j = !0,
                F = !1,
                V = t,
                U = r.keepCase ? function(e) {
                    return e
                } : f.camelCase;

            function B(e, t, r) {
                var i = T.filename;
                return r || (T.filename = null), Error("illegal " + (t || "token") + " '" + e + "' (" + (i ? i + ", " : "") + "line " + k.line + ")")
            }

            function H() {
                var e, t = [];
                do {
                    if ('"' !== (e = C()) && "'" !== e) throw B(e);
                    t.push(C()), N(e), e = M()
                } while ('"' === e || "'" === e);
                return t.join("")
            }

            function W(e) {
                var t = C();
                switch (t) {
                    case "'":
                    case '"':
                        return D(t), H();
                    case "true":
                    case "TRUE":
                        return !0;
                    case "false":
                    case "FALSE":
                        return !1
                }
                try {
                    return function(e, t) {
                        var r = 1;
                        "-" === e.charAt(0) && (r = -1, e = e.substring(1));
                        switch (e) {
                            case "inf":
                            case "INF":
                            case "Inf":
                                return r * (1 / 0);
                            case "nan":
                            case "NAN":
                            case "Nan":
                            case "NaN":
                                return NaN;
                            case "0":
                                return 0
                        }
                        if (h.test(e)) return r * parseInt(e, 10);
                        if (g.test(e)) return r * parseInt(e, 16);
                        if (y.test(e)) return r * parseInt(e, 8);
                        if (S.test(e)) return r * parseFloat(e);
                        throw B(e, "number", t)
                    }(t, !0)
                } catch (r) {
                    if (e && R.test(t)) return t;
                    throw B(t, "value")
                }
            }

            function $(e, t) {
                var r, i;
                do {
                    !t || '"' !== (r = M()) && "'" !== r ? e.push([i = z(C()), N("to", !0) ? z(C()) : i]) : e.push(H())
                } while (N(",", !0));
                N(";")
            }

            function z(e, t) {
                switch (e) {
                    case "max":
                    case "MAX":
                    case "Max":
                        return 536870911;
                    case "0":
                        return 0
                }
                if (!t && "-" === e.charAt(0)) throw B(e, "id");
                if (m.test(e)) return parseInt(e, 10);
                if (v.test(e)) return parseInt(e, 16);
                if (_.test(e)) return parseInt(e, 8);
                throw B(e, "id")
            }

            function q() {
                if (void 0 !== E) throw B("package");
                if (E = C(), !R.test(E)) throw B(E, "name");
                V = V.define(E), N(";")
            }

            function G() {
                var e, t = M();
                switch (t) {
                    case "weak":
                        e = O || (O = []), C();
                        break;
                    case "public":
                        C();
                    default:
                        e = A || (A = [])
                }
                t = H(), N(";"), e.push(t)
            }

            function J() {
                if (N("="), I = H(), !(F = "proto3" === I) && "proto2" !== I) throw B(I, "syntax");
                N(";")
            }

            function Q(e, t) {
                switch (t) {
                    case "option":
                        return X(e, t), N(";"), !0;
                    case "message":
                        return function(e, t) {
                            if (!b.test(t = C())) throw B(t, "type name");
                            var r = new o(t);
                            K(r, (function(e) {
                                if (!Q(r, e)) switch (e) {
                                    case "map":
                                        ! function(e) {
                                            N("<");
                                            var t = C();
                                            if (void 0 === p.mapKey[t]) throw B(t, "type");
                                            N(",");
                                            var r = C();
                                            if (!R.test(r)) throw B(r, "type");
                                            N(">");
                                            var i = C();
                                            if (!b.test(i)) throw B(i, "name");
                                            N("=");
                                            var n = new a(U(i), z(C()), t, r);
                                            K(n, (function(e) {
                                                if ("option" !== e) throw B(e);
                                                X(n, e), N(";")
                                            }), (function() {
                                                te(n)
                                            })), e.add(n)
                                        }(r);
                                        break;
                                    case "required":
                                    case "repeated":
                                        Y(r, e);
                                        break;
                                    case "optional":
                                        Y(r, F ? "proto3_optional" : "optional");
                                        break;
                                    case "oneof":
                                        ! function(e, t) {
                                            if (!b.test(t = C())) throw B(t, "name");
                                            var r = new d(U(t));
                                            K(r, (function(e) {
                                                "option" === e ? (X(r, e), N(";")) : (D(e), Y(r, "optional"))
                                            })), e.add(r)
                                        }(r, e);
                                        break;
                                    case "extensions":
                                        $(r.extensions || (r.extensions = []));
                                        break;
                                    case "reserved":
                                        $(r.reserved || (r.reserved = []), !0);
                                        break;
                                    default:
                                        if (!F || !R.test(e)) throw B(e);
                                        D(e), Y(r, "optional")
                                }
                            })), e.add(r)
                        }(e, t), !0;
                    case "enum":
                        return function(e, t) {
                            if (!b.test(t = C())) throw B(t, "name");
                            var r = new c(t);
                            K(r, (function(e) {
                                switch (e) {
                                    case "option":
                                        X(r, e), N(";");
                                        break;
                                    case "reserved":
                                        $(r.reserved || (r.reserved = []), !0);
                                        break;
                                    default:
                                        ! function(e, t) {
                                            if (!b.test(t)) throw B(t, "name");
                                            N("=");
                                            var r = z(C(), !0),
                                                i = {};
                                            K(i, (function(e) {
                                                if ("option" !== e) throw B(e);
                                                X(i, e), N(";")
                                            }), (function() {
                                                te(i)
                                            })), e.add(t, r, i.comment)
                                        }(r, e)
                                }
                            })), e.add(r)
                        }(e, t), !0;
                    case "service":
                        return function(e, t) {
                            if (!b.test(t = C())) throw B(t, "service name");
                            var r = new u(t);
                            K(r, (function(e) {
                                if (!Q(r, e)) {
                                    if ("rpc" !== e) throw B(e);
                                    ! function(e, t) {
                                        var r = L(),
                                            i = t;
                                        if (!b.test(t = C())) throw B(t, "name");
                                        var n, o, s, a, d = t;
                                        N("("), N("stream", !0) && (o = !0);
                                        if (!R.test(t = C())) throw B(t);
                                        n = t, N(")"), N("returns"), N("("), N("stream", !0) && (a = !0);
                                        if (!R.test(t = C())) throw B(t);
                                        s = t, N(")");
                                        var c = new l(d, i, n, s, o, a);
                                        c.comment = r, K(c, (function(e) {
                                            if ("option" !== e) throw B(e);
                                            X(c, e), N(";")
                                        })), e.add(c)
                                    }(r, e)
                                }
                            })), e.add(r)
                        }(e, t), !0;
                    case "extend":
                        return function(e, t) {
                            if (!R.test(t = C())) throw B(t, "reference");
                            var r = t;
                            K(null, (function(t) {
                                switch (t) {
                                    case "required":
                                    case "repeated":
                                        Y(e, t, r);
                                        break;
                                    case "optional":
                                        Y(e, F ? "proto3_optional" : "optional", r);
                                        break;
                                    default:
                                        if (!F || !R.test(t)) throw B(t);
                                        D(t), Y(e, "optional", r)
                                }
                            }))
                        }(e, t), !0
                }
                return !1
            }

            function K(e, t, r) {
                var i = k.line;
                if (e && ("string" != typeof e.comment && (e.comment = L()), e.filename = T.filename), N("{", !0)) {
                    for (var n;
                        "}" !== (n = C());) t(n);
                    N(";", !0)
                } else r && r(), N(";"), e && ("string" != typeof e.comment || P) && (e.comment = L(i) || e.comment)
            }

            function Y(e, t, r) {
                var i = C();
                if ("group" !== i) {
                    if (!R.test(i)) throw B(i, "type");
                    var n = C();
                    if (!b.test(n)) throw B(n, "name");
                    n = U(n), N("=");
                    var a = new s(n, z(C()), i, t, r);
                    if (K(a, (function(e) {
                            if ("option" !== e) throw B(e);
                            X(a, e), N(";")
                        }), (function() {
                            te(a)
                        })), "proto3_optional" === t) {
                        var c = new d("_" + n);
                        a.setOption("proto3_optional", !0), c.add(a), e.add(c)
                    } else e.add(a);
                    F || !a.repeated || void 0 === p.packed[i] && void 0 !== p.basic[i] || a.setOption("packed", !1, !0)
                } else ! function(e, t) {
                    var r = C();
                    if (!b.test(r)) throw B(r, "name");
                    var i = f.lcFirst(r);
                    r === i && (r = f.ucFirst(r));
                    N("=");
                    var n = z(C()),
                        a = new o(r);
                    a.group = !0;
                    var d = new s(i, n, r, t);
                    d.filename = T.filename, K(a, (function(e) {
                        switch (e) {
                            case "option":
                                X(a, e), N(";");
                                break;
                            case "required":
                            case "repeated":
                                Y(a, e);
                                break;
                            case "optional":
                                Y(a, F ? "proto3_optional" : "optional");
                                break;
                            default:
                                throw B(e)
                        }
                    })), e.add(a).add(d)
                }(e, t)
            }

            function X(e, t) {
                var r = N("(", !0);
                if (!R.test(t = C())) throw B(t, "name");
                var i, n = t,
                    o = n;
                r && (N(")"), o = n = "(" + n + ")", t = M(), w.test(t) && (i = t.substr(1), n += t, C())), N("="),
                    function(e, t, r, i) {
                        e.setParsedOption && e.setParsedOption(t, r, i)
                    }(e, o, Z(e, n), i)
            }

            function Z(e, t) {
                if (N("{", !0)) {
                    for (var r = {}; !N("}", !0);) {
                        if (!b.test(x = C())) throw B(x, "name");
                        var i, n = x;
                        "{" === M() ? i = Z(e, t + "." + x) : (N(":"), "{" === M() ? i = Z(e, t + "." + x) : (i = W(!0), ee(e, t + "." + x, i)));
                        var o = r[n];
                        o && (i = [].concat(o).concat(i)), r[n] = i, N(",", !0)
                    }
                    return r
                }
                var s = W(!0);
                return ee(e, t, s), s
            }

            function ee(e, t, r) {
                e.setOption && e.setOption(t, r)
            }

            function te(e) {
                if (N("[", !0)) {
                    do {
                        X(e, "option")
                    } while (N(",", !0));
                    N("]")
                }
                return e
            }
            for (; null !== (x = C());) switch (x) {
                case "package":
                    if (!j) throw B(x);
                    q();
                    break;
                case "import":
                    if (!j) throw B(x);
                    G();
                    break;
                case "syntax":
                    if (!j) throw B(x);
                    J();
                    break;
                case "option":
                    X(V, x), N(";");
                    break;
                default:
                    if (Q(V, x)) {
                        j = !1;
                        continue
                    }
                    throw B(x)
            }
            return T.filename = null, {
                package: E,
                imports: A,
                weakImports: O,
                syntax: I,
                root: t
            }
        }
    }, function(e, t, r) {
        "use strict";
        e.exports = o;
        var i, n = /\/|\./;

        function o(e, t) {
            n.test(e) || (e = "google/protobuf/" + e + ".proto", t = {
                nested: {
                    google: {
                        nested: {
                            protobuf: {
                                nested: t
                            }
                        }
                    }
                }
            }), o[e] = t
        }
        o("any", {
            Any: {
                fields: {
                    type_url: {
                        type: "string",
                        id: 1
                    },
                    value: {
                        type: "bytes",
                        id: 2
                    }
                }
            }
        }), o("duration", {
            Duration: i = {
                fields: {
                    seconds: {
                        type: "int64",
                        id: 1
                    },
                    nanos: {
                        type: "int32",
                        id: 2
                    }
                }
            }
        }), o("timestamp", {
            Timestamp: i
        }), o("empty", {
            Empty: {
                fields: {}
            }
        }), o("struct", {
            Struct: {
                fields: {
                    fields: {
                        keyType: "string",
                        type: "Value",
                        id: 1
                    }
                }
            },
            Value: {
                oneofs: {
                    kind: {
                        oneof: ["nullValue", "numberValue", "stringValue", "boolValue", "structValue", "listValue"]
                    }
                },
                fields: {
                    nullValue: {
                        type: "NullValue",
                        id: 1
                    },
                    numberValue: {
                        type: "double",
                        id: 2
                    },
                    stringValue: {
                        type: "string",
                        id: 3
                    },
                    boolValue: {
                        type: "bool",
                        id: 4
                    },
                    structValue: {
                        type: "Struct",
                        id: 5
                    },
                    listValue: {
                        type: "ListValue",
                        id: 6
                    }
                }
            },
            NullValue: {
                values: {
                    NULL_VALUE: 0
                }
            },
            ListValue: {
                fields: {
                    values: {
                        rule: "repeated",
                        type: "Value",
                        id: 1
                    }
                }
            }
        }), o("wrappers", {
            DoubleValue: {
                fields: {
                    value: {
                        type: "double",
                        id: 1
                    }
                }
            },
            FloatValue: {
                fields: {
                    value: {
                        type: "float",
                        id: 1
                    }
                }
            },
            Int64Value: {
                fields: {
                    value: {
                        type: "int64",
                        id: 1
                    }
                }
            },
            UInt64Value: {
                fields: {
                    value: {
                        type: "uint64",
                        id: 1
                    }
                }
            },
            Int32Value: {
                fields: {
                    value: {
                        type: "int32",
                        id: 1
                    }
                }
            },
            UInt32Value: {
                fields: {
                    value: {
                        type: "uint32",
                        id: 1
                    }
                }
            },
            BoolValue: {
                fields: {
                    value: {
                        type: "bool",
                        id: 1
                    }
                }
            },
            StringValue: {
                fields: {
                    value: {
                        type: "string",
                        id: 1
                    }
                }
            },
            BytesValue: {
                fields: {
                    value: {
                        type: "bytes",
                        id: 1
                    }
                }
            }
        }), o("field_mask", {
            FieldMask: {
                fields: {
                    paths: {
                        rule: "repeated",
                        type: "string",
                        id: 1
                    }
                }
            }
        }), o.get = function(e) {
            return o[e] || null
        }
    }, function(e, t, r) {
        "use strict";
        var i = r(239),
            n = (i.roots.default || (i.roots.default = new i.Root)).addJSON({
                WebrtcStats: {
                    fields: {
                        local: {
                            type: "local_obj",
                            id: 1
                        },
                        remote: {
                            type: "remote_obj",
                            id: 2
                        },
                        timestamp: {
                            type: "int64",
                            id: 3
                        },
                        appkey: {
                            type: "string",
                            id: 4
                        },
                        cid: {
                            type: "int64",
                            id: 5
                        },
                        uid: {
                            type: "int64",
                            id: 6
                        },
                        browser: {
                            type: "string",
                            id: 7
                        },
                        platform: {
                            type: "string",
                            id: 8
                        }
                    },
                    nested: {
                        local_obj: {
                            fields: {
                                video_bwe: {
                                    rule: "repeated",
                                    type: "video_bwe_obj",
                                    id: 1
                                },
                                audio_ssrc: {
                                    rule: "repeated",
                                    type: "audio_ssrc_obj",
                                    id: 2
                                },
                                video_ssrc: {
                                    rule: "repeated",
                                    type: "video_ssrc_obj",
                                    id: 3
                                },
                                media_source: {
                                    rule: "repeated",
                                    type: "media_source_obj",
                                    id: 4
                                },
                                candidate_pair: {
                                    rule: "repeated",
                                    type: "candidate_pair_obj",
                                    id: 5
                                },
                                local_candidate: {
                                    rule: "repeated",
                                    type: "local_candidate_obj",
                                    id: 6
                                },
                                remote_candidate: {
                                    rule: "repeated",
                                    type: "remote_candidate_obj",
                                    id: 7
                                },
                                track: {
                                    rule: "repeated",
                                    type: "track_obj",
                                    id: 8
                                },
                                outbound_rtp: {
                                    rule: "repeated",
                                    type: "outbound_rtp_obj",
                                    id: 9
                                },
                                remote_inbound_rtp: {
                                    rule: "repeated",
                                    type: "remote_inbound_rtp_obj",
                                    id: 10
                                },
                                transport: {
                                    rule: "repeated",
                                    type: "transport_obj",
                                    id: 11
                                },
                                audio_track: {
                                    rule: "repeated",
                                    type: "audio_track_obj",
                                    id: 12
                                },
                                video_track: {
                                    rule: "repeated",
                                    type: "video_track_obj",
                                    id: 13
                                },
                                audio_outbound_rtp: {
                                    rule: "repeated",
                                    type: "audio_outbound_rtp_obj",
                                    id: 14
                                },
                                video_outbound_rtp: {
                                    rule: "repeated",
                                    type: "video_outbound_rtp_obj",
                                    id: 15
                                },
                                screen_ssrc: {
                                    rule: "repeated",
                                    type: "screen_ssrc_obj",
                                    id: 16
                                }
                            },
                            nested: {
                                video_bwe_obj: {
                                    fields: {
                                        googActualEncBitrate: {
                                            type: "string",
                                            id: 1
                                        },
                                        googAvailableSendBandwidth: {
                                            type: "string",
                                            id: 2
                                        },
                                        googRetransmitBitrate: {
                                            type: "string",
                                            id: 3
                                        },
                                        googAvailableReceiveBandwidth: {
                                            type: "string",
                                            id: 4
                                        },
                                        googTargetEncBitrate: {
                                            type: "string",
                                            id: 5
                                        },
                                        googBucketDelay: {
                                            type: "string",
                                            id: 6
                                        },
                                        googTransmitBitrate: {
                                            type: "string",
                                            id: 7
                                        },
                                        id: {
                                            type: "string",
                                            id: 8
                                        },
                                        type: {
                                            type: "string",
                                            id: 9
                                        },
                                        timestamp: {
                                            type: "string",
                                            id: 10
                                        }
                                    }
                                },
                                audio_ssrc_obj: {
                                    fields: {
                                        audioInputLevel: {
                                            type: "string",
                                            id: 1
                                        },
                                        packetsLost: {
                                            type: "string",
                                            id: 2
                                        },
                                        googRtt: {
                                            type: "string",
                                            id: 3
                                        },
                                        totalSamplesDuration: {
                                            type: "string",
                                            id: 4
                                        },
                                        googEchoCancellationReturnLossEnhancement: {
                                            type: "string",
                                            id: 5
                                        },
                                        googTrackId: {
                                            type: "string",
                                            id: 6
                                        },
                                        totalAudioEnergy: {
                                            type: "string",
                                            id: 7
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 8
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 9
                                        },
                                        googEchoCancellationReturnLoss: {
                                            type: "string",
                                            id: 10
                                        },
                                        googCodecName: {
                                            type: "string",
                                            id: 11
                                        },
                                        ssrc: {
                                            type: "string",
                                            id: 12
                                        },
                                        googJitterReceived: {
                                            type: "string",
                                            id: 13
                                        },
                                        googTypingNoiseState: {
                                            type: "string",
                                            id: 14
                                        },
                                        packetsSent: {
                                            type: "string",
                                            id: 15
                                        },
                                        bytesSent: {
                                            type: "string",
                                            id: 16
                                        },
                                        id: {
                                            type: "string",
                                            id: 17
                                        },
                                        type: {
                                            type: "string",
                                            id: 18
                                        },
                                        timestamp: {
                                            type: "string",
                                            id: 19
                                        },
                                        localuid: {
                                            type: "int64",
                                            id: 20
                                        },
                                        remoteuid: {
                                            type: "int64",
                                            id: 21
                                        },
                                        bitsSentPerSecond: {
                                            type: "int64",
                                            id: 22
                                        },
                                        packetsSentPerSecond: {
                                            type: "int64",
                                            id: 23
                                        },
                                        sendPacketLoss: {
                                            type: "int64",
                                            id: 24
                                        },
                                        bytesSentPerSecond: {
                                            type: "int64",
                                            id: 25
                                        }
                                    }
                                },
                                video_ssrc_obj: {
                                    fields: {
                                        googContentType: {
                                            type: "string",
                                            id: 1
                                        },
                                        googFrameWidthInput: {
                                            type: "string",
                                            id: 2
                                        },
                                        googFrameWidthSent: {
                                            type: "string",
                                            id: 3
                                        },
                                        packetsLost: {
                                            type: "string",
                                            id: 4
                                        },
                                        googRtt: {
                                            type: "string",
                                            id: 5
                                        },
                                        googHasEnteredLowResolution: {
                                            type: "string",
                                            id: 6
                                        },
                                        googEncodeUsagePercent: {
                                            type: "string",
                                            id: 7
                                        },
                                        googCpuLimitedResolution: {
                                            type: "string",
                                            id: 8
                                        },
                                        googNacksReceived: {
                                            type: "string",
                                            id: 9
                                        },
                                        googBandwidthLimitedResolution: {
                                            type: "string",
                                            id: 10
                                        },
                                        googFrameHeightInput: {
                                            type: "string",
                                            id: 11
                                        },
                                        googAvgEncodeMs: {
                                            type: "string",
                                            id: 12
                                        },
                                        googTrackId: {
                                            type: "string",
                                            id: 13
                                        },
                                        googFrameRateInput: {
                                            type: "string",
                                            id: 14
                                        },
                                        framesEncoded: {
                                            type: "string",
                                            id: 15
                                        },
                                        codecImplementationName: {
                                            type: "string",
                                            id: 16
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 17
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 18
                                        },
                                        googFrameHeightSent: {
                                            type: "string",
                                            id: 19
                                        },
                                        googFrameRateSent: {
                                            type: "string",
                                            id: 20
                                        },
                                        googCodecName: {
                                            type: "string",
                                            id: 21
                                        },
                                        hugeFramesSent: {
                                            type: "string",
                                            id: 22
                                        },
                                        qpSum: {
                                            type: "string",
                                            id: 23
                                        },
                                        googPlisReceived: {
                                            type: "string",
                                            id: 24
                                        },
                                        googAdaptationChanges: {
                                            type: "string",
                                            id: 25
                                        },
                                        ssrc: {
                                            type: "string",
                                            id: 26
                                        },
                                        googFirsReceived: {
                                            type: "string",
                                            id: 27
                                        },
                                        packetsSent: {
                                            type: "string",
                                            id: 28
                                        },
                                        bytesSent: {
                                            type: "string",
                                            id: 29
                                        },
                                        id: {
                                            type: "string",
                                            id: 30
                                        },
                                        type: {
                                            type: "string",
                                            id: 31
                                        },
                                        timestamp: {
                                            type: "string",
                                            id: 32
                                        },
                                        localuid: {
                                            type: "int64",
                                            id: 33
                                        },
                                        remoteuid: {
                                            type: "int64",
                                            id: 34
                                        },
                                        bitsSentPerSecond: {
                                            type: "int64",
                                            id: 35
                                        },
                                        packetsSentPerSecond: {
                                            type: "int64",
                                            id: 36
                                        },
                                        sendPacketLoss: {
                                            type: "int64",
                                            id: 37
                                        },
                                        freezeTime: {
                                            type: "int64",
                                            id: 38
                                        },
                                        totalFreezeTime: {
                                            type: "int64",
                                            id: 39
                                        },
                                        bytesSentPerSecond: {
                                            type: "int64",
                                            id: 40
                                        },
                                        framesEncodedPerSecond: {
                                            type: "int64",
                                            id: 41
                                        }
                                    }
                                },
                                screen_ssrc_obj: {
                                    fields: {
                                        googContentType: {
                                            type: "string",
                                            id: 1
                                        },
                                        googFrameWidthInput: {
                                            type: "string",
                                            id: 2
                                        },
                                        googFrameWidthSent: {
                                            type: "string",
                                            id: 3
                                        },
                                        packetsLost: {
                                            type: "string",
                                            id: 4
                                        },
                                        googRtt: {
                                            type: "string",
                                            id: 5
                                        },
                                        googHasEnteredLowResolution: {
                                            type: "string",
                                            id: 6
                                        },
                                        googEncodeUsagePercent: {
                                            type: "string",
                                            id: 7
                                        },
                                        googCpuLimitedResolution: {
                                            type: "string",
                                            id: 8
                                        },
                                        googNacksReceived: {
                                            type: "string",
                                            id: 9
                                        },
                                        googBandwidthLimitedResolution: {
                                            type: "string",
                                            id: 10
                                        },
                                        googFrameHeightInput: {
                                            type: "string",
                                            id: 11
                                        },
                                        googAvgEncodeMs: {
                                            type: "string",
                                            id: 12
                                        },
                                        googTrackId: {
                                            type: "string",
                                            id: 13
                                        },
                                        googFrameRateInput: {
                                            type: "string",
                                            id: 14
                                        },
                                        framesEncoded: {
                                            type: "string",
                                            id: 15
                                        },
                                        codecImplementationName: {
                                            type: "string",
                                            id: 16
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 17
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 18
                                        },
                                        googFrameHeightSent: {
                                            type: "string",
                                            id: 19
                                        },
                                        googFrameRateSent: {
                                            type: "string",
                                            id: 20
                                        },
                                        googCodecName: {
                                            type: "string",
                                            id: 21
                                        },
                                        hugeFramesSent: {
                                            type: "string",
                                            id: 22
                                        },
                                        qpSum: {
                                            type: "string",
                                            id: 23
                                        },
                                        googPlisReceived: {
                                            type: "string",
                                            id: 24
                                        },
                                        googAdaptationChanges: {
                                            type: "string",
                                            id: 25
                                        },
                                        ssrc: {
                                            type: "string",
                                            id: 26
                                        },
                                        googFirsReceived: {
                                            type: "string",
                                            id: 27
                                        },
                                        packetsSent: {
                                            type: "string",
                                            id: 28
                                        },
                                        bytesSent: {
                                            type: "string",
                                            id: 29
                                        },
                                        id: {
                                            type: "string",
                                            id: 30
                                        },
                                        type: {
                                            type: "string",
                                            id: 31
                                        },
                                        timestamp: {
                                            type: "string",
                                            id: 32
                                        },
                                        localuid: {
                                            type: "int64",
                                            id: 33
                                        },
                                        remoteuid: {
                                            type: "int64",
                                            id: 34
                                        },
                                        bitsSentPerSecond: {
                                            type: "int64",
                                            id: 35
                                        },
                                        packetsSentPerSecond: {
                                            type: "int64",
                                            id: 36
                                        },
                                        sendPacketLoss: {
                                            type: "int64",
                                            id: 37
                                        },
                                        freezeTime: {
                                            type: "int64",
                                            id: 38
                                        },
                                        totalFreezeTime: {
                                            type: "int64",
                                            id: 39
                                        },
                                        bytesSentPerSecond: {
                                            type: "int64",
                                            id: 40
                                        },
                                        framesEncodedPerSecond: {
                                            type: "int64",
                                            id: 41
                                        }
                                    }
                                },
                                media_source_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "double",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        trackIdentifier: {
                                            type: "string",
                                            id: 4
                                        },
                                        kind: {
                                            type: "string",
                                            id: 5
                                        },
                                        width: {
                                            type: "int64",
                                            id: 6
                                        },
                                        height: {
                                            type: "int64",
                                            id: 7
                                        },
                                        framesPerSecond: {
                                            type: "int64",
                                            id: 8
                                        }
                                    }
                                },
                                candidate_pair_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "double",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 4
                                        },
                                        localCandidateId: {
                                            type: "string",
                                            id: 5
                                        },
                                        remoteCandidateId: {
                                            type: "string",
                                            id: 6
                                        },
                                        state: {
                                            type: "string",
                                            id: 7
                                        },
                                        priority: {
                                            type: "int64",
                                            id: 8
                                        },
                                        nominated: {
                                            type: "bool",
                                            id: 9
                                        },
                                        writable: {
                                            type: "bool",
                                            id: 10
                                        },
                                        bytesSent: {
                                            type: "int64",
                                            id: 11
                                        },
                                        bytesReceived: {
                                            type: "int64",
                                            id: 12
                                        },
                                        totalRoundTripTime: {
                                            type: "double",
                                            id: 13
                                        },
                                        currentRoundTripTime: {
                                            type: "double",
                                            id: 14
                                        },
                                        availableOutgoingBitrate: {
                                            type: "int64",
                                            id: 15
                                        },
                                        requestsReceived: {
                                            type: "int64",
                                            id: 16
                                        },
                                        requestsSent: {
                                            type: "int64",
                                            id: 17
                                        },
                                        responsesReceived: {
                                            type: "int64",
                                            id: 18
                                        },
                                        responsesSent: {
                                            type: "int64",
                                            id: 19
                                        },
                                        consentRequestsSent: {
                                            type: "int64",
                                            id: 20
                                        }
                                    }
                                },
                                local_candidate_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "double",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 4
                                        },
                                        isRemote: {
                                            type: "bool",
                                            id: 5
                                        },
                                        networkType: {
                                            type: "string",
                                            id: 6
                                        },
                                        ip: {
                                            type: "string",
                                            id: 7
                                        },
                                        port: {
                                            type: "int64",
                                            id: 8
                                        },
                                        protocol: {
                                            type: "string",
                                            id: 9
                                        },
                                        candidateType: {
                                            type: "string",
                                            id: 10
                                        },
                                        priority: {
                                            type: "int64",
                                            id: 11
                                        },
                                        deleted: {
                                            type: "bool",
                                            id: 12
                                        }
                                    }
                                },
                                remote_candidate_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "double",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 4
                                        },
                                        isRemote: {
                                            type: "bool",
                                            id: 5
                                        },
                                        ip: {
                                            type: "string",
                                            id: 6
                                        },
                                        port: {
                                            type: "int64",
                                            id: 7
                                        },
                                        protocol: {
                                            type: "string",
                                            id: 8
                                        },
                                        candidateType: {
                                            type: "string",
                                            id: 9
                                        },
                                        priority: {
                                            type: "int64",
                                            id: 10
                                        },
                                        deleted: {
                                            type: "bool",
                                            id: 11
                                        }
                                    }
                                },
                                track_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "double",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        trackIdentifier: {
                                            type: "string",
                                            id: 4
                                        },
                                        mediaSourceId: {
                                            type: "string",
                                            id: 5
                                        },
                                        remoteSource: {
                                            type: "bool",
                                            id: 6
                                        },
                                        ended: {
                                            type: "bool",
                                            id: 7
                                        },
                                        detached: {
                                            type: "bool",
                                            id: 8
                                        },
                                        kind: {
                                            type: "string",
                                            id: 9
                                        },
                                        frameWidth: {
                                            type: "int64",
                                            id: 10
                                        },
                                        frameHeight: {
                                            type: "int64",
                                            id: 11
                                        },
                                        framesSent: {
                                            type: "int64",
                                            id: 12
                                        },
                                        hugeFramesSent: {
                                            type: "int64",
                                            id: 13
                                        }
                                    }
                                },
                                outbound_rtp_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "double",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        ssrc: {
                                            type: "int64",
                                            id: 4
                                        },
                                        isRemote: {
                                            type: "bool",
                                            id: 5
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 6
                                        },
                                        kind: {
                                            type: "string",
                                            id: 7
                                        },
                                        trackId: {
                                            type: "string",
                                            id: 8
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 9
                                        },
                                        codecId: {
                                            type: "string",
                                            id: 10
                                        },
                                        firCount: {
                                            type: "int64",
                                            id: 11
                                        },
                                        pliCount: {
                                            type: "int64",
                                            id: 12
                                        },
                                        nackCount: {
                                            type: "int64",
                                            id: 13
                                        },
                                        qpSum: {
                                            type: "int64",
                                            id: 14
                                        },
                                        mediaSourceId: {
                                            type: "string",
                                            id: 15
                                        },
                                        remoteId: {
                                            type: "string",
                                            id: 16
                                        },
                                        packetsSent: {
                                            type: "int64",
                                            id: 17
                                        },
                                        retransmittedPacketsSent: {
                                            type: "int64",
                                            id: 18
                                        },
                                        bytesSent: {
                                            type: "int64",
                                            id: 19
                                        },
                                        headerBytesSent: {
                                            type: "int64",
                                            id: 20
                                        },
                                        retransmittedBytesSent: {
                                            type: "int64",
                                            id: 21
                                        },
                                        framesEncoded: {
                                            type: "int64",
                                            id: 22
                                        },
                                        keyFramesEncoded: {
                                            type: "int64",
                                            id: 23
                                        },
                                        totalEncodeTime: {
                                            type: "double",
                                            id: 24
                                        },
                                        totalEncodedBytesTarget: {
                                            type: "int64",
                                            id: 25
                                        },
                                        frameWidth: {
                                            type: "int64",
                                            id: 26
                                        },
                                        frameHeight: {
                                            type: "int64",
                                            id: 27
                                        },
                                        framesPerSecond: {
                                            type: "int64",
                                            id: 28
                                        },
                                        framesSent: {
                                            type: "int64",
                                            id: 29
                                        },
                                        hugeFramesSent: {
                                            type: "int64",
                                            id: 30
                                        },
                                        totalPacketSendDelay: {
                                            type: "double",
                                            id: 31
                                        },
                                        qualityLimitationReason: {
                                            type: "string",
                                            id: 32
                                        },
                                        qualityLimitationResolutionChanges: {
                                            type: "int64",
                                            id: 33
                                        },
                                        encoderImplementation: {
                                            type: "string",
                                            id: 34
                                        }
                                    }
                                },
                                remote_inbound_rtp_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "double",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        ssrc: {
                                            type: "int64",
                                            id: 4
                                        },
                                        kind: {
                                            type: "string",
                                            id: 5
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 6
                                        },
                                        codecId: {
                                            type: "string",
                                            id: 7
                                        },
                                        packetsLost: {
                                            type: "int64",
                                            id: 8
                                        },
                                        jitter: {
                                            type: "double",
                                            id: 9
                                        },
                                        localId: {
                                            type: "string",
                                            id: 10
                                        },
                                        roundTripTime: {
                                            type: "double",
                                            id: 11
                                        }
                                    }
                                },
                                transport_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "double",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        bytesSent: {
                                            type: "int64",
                                            id: 4
                                        },
                                        packetsSent: {
                                            type: "int64",
                                            id: 5
                                        },
                                        bytesReceived: {
                                            type: "int64",
                                            id: 6
                                        },
                                        packetsReceived: {
                                            type: "int64",
                                            id: 7
                                        },
                                        dtlsState: {
                                            type: "string",
                                            id: 8
                                        },
                                        selectedCandidatePairId: {
                                            type: "string",
                                            id: 9
                                        },
                                        localCertificateId: {
                                            type: "string",
                                            id: 10
                                        },
                                        remoteCertificateId: {
                                            type: "string",
                                            id: 11
                                        },
                                        tlsVersion: {
                                            type: "string",
                                            id: 12
                                        },
                                        dtlsCipher: {
                                            type: "string",
                                            id: 13
                                        },
                                        srtpCipher: {
                                            type: "string",
                                            id: 14
                                        },
                                        selectedCandidatePairChanges: {
                                            type: "int64",
                                            id: 15
                                        }
                                    }
                                },
                                audio_track_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "int64",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        detached: {
                                            type: "bool",
                                            id: 4
                                        },
                                        ended: {
                                            type: "bool",
                                            id: 5
                                        },
                                        remoteSource: {
                                            type: "bool",
                                            id: 6
                                        },
                                        trackIdentifier: {
                                            type: "string",
                                            id: 7
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 8
                                        }
                                    }
                                },
                                video_track_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "int64",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        detached: {
                                            type: "bool",
                                            id: 4
                                        },
                                        ended: {
                                            type: "bool",
                                            id: 5
                                        },
                                        frameHeight: {
                                            type: "int64",
                                            id: 6
                                        },
                                        frameWidth: {
                                            type: "int64",
                                            id: 7
                                        },
                                        framesSent: {
                                            type: "int64",
                                            id: 8
                                        },
                                        remoteSource: {
                                            type: "bool",
                                            id: 9
                                        },
                                        trackIdentifier: {
                                            type: "string",
                                            id: 10
                                        },
                                        ssrc: {
                                            type: "int64",
                                            id: 11
                                        },
                                        frameRateSent: {
                                            type: "int64",
                                            id: 12
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 13
                                        },
                                        framesSentPerSecond: {
                                            type: "int64",
                                            id: 14
                                        }
                                    }
                                },
                                audio_outbound_rtp_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "int64",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        codecId: {
                                            type: "string",
                                            id: 4
                                        },
                                        kind: {
                                            type: "string",
                                            id: 5
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 6
                                        },
                                        ssrc: {
                                            type: "int64",
                                            id: 7
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 8
                                        },
                                        bytesSent: {
                                            type: "int64",
                                            id: 9
                                        },
                                        packetsSent: {
                                            type: "int64",
                                            id: 10
                                        },
                                        headerBytesSent: {
                                            type: "int64",
                                            id: 11
                                        },
                                        mediaSourceId: {
                                            type: "string",
                                            id: 12
                                        },
                                        remoteId: {
                                            type: "string",
                                            id: 13
                                        },
                                        retransmittedBytesSent: {
                                            type: "int64",
                                            id: 14
                                        },
                                        retransmittedPacketsSent: {
                                            type: "int64",
                                            id: 15
                                        },
                                        trackId: {
                                            type: "string",
                                            id: 16
                                        },
                                        bitsSentPerSecond: {
                                            type: "int64",
                                            id: 17
                                        },
                                        packetsSentPerSecond: {
                                            type: "int64",
                                            id: 18
                                        },
                                        bytesSentPerSecond: {
                                            type: "int64",
                                            id: 19
                                        }
                                    }
                                },
                                video_outbound_rtp_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "int64",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        codecId: {
                                            type: "string",
                                            id: 4
                                        },
                                        kind: {
                                            type: "string",
                                            id: 5
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 6
                                        },
                                        ssrc: {
                                            type: "int64",
                                            id: 7
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 8
                                        },
                                        bytesSent: {
                                            type: "int64",
                                            id: 9
                                        },
                                        packetsSent: {
                                            type: "int64",
                                            id: 10
                                        },
                                        firCount: {
                                            type: "int64",
                                            id: 11
                                        },
                                        frameHeight: {
                                            type: "int64",
                                            id: 12
                                        },
                                        frameWidth: {
                                            type: "int64",
                                            id: 13
                                        },
                                        framesEncoded: {
                                            type: "int64",
                                            id: 14
                                        },
                                        framesPerSecond: {
                                            type: "int64",
                                            id: 15
                                        },
                                        framesSent: {
                                            type: "int64",
                                            id: 16
                                        },
                                        headerBytesSent: {
                                            type: "int64",
                                            id: 17
                                        },
                                        hugeFramesSent: {
                                            type: "int64",
                                            id: 18
                                        },
                                        keyFramesEncoded: {
                                            type: "int64",
                                            id: 19
                                        },
                                        mediaSourceId: {
                                            type: "string",
                                            id: 20
                                        },
                                        nackCount: {
                                            type: "int64",
                                            id: 21
                                        },
                                        pliCount: {
                                            type: "int64",
                                            id: 22
                                        },
                                        qpSum: {
                                            type: "int64",
                                            id: 23
                                        },
                                        qualityLimitationResolutionChanges: {
                                            type: "int64",
                                            id: 24
                                        },
                                        remoteId: {
                                            type: "string",
                                            id: 25
                                        },
                                        retransmittedBytesSent: {
                                            type: "int64",
                                            id: 26
                                        },
                                        retransmittedPacketsSent: {
                                            type: "int64",
                                            id: 27
                                        },
                                        totalEncodeTime: {
                                            type: "double",
                                            id: 28
                                        },
                                        totalEncodedBytesTarget: {
                                            type: "int64",
                                            id: 29
                                        },
                                        totalPacketSendDelay: {
                                            type: "double",
                                            id: 30
                                        },
                                        trackId: {
                                            type: "string",
                                            id: 31
                                        },
                                        bitsSentPerSecond: {
                                            type: "int64",
                                            id: 32
                                        },
                                        packetsSentPerSecond: {
                                            type: "int64",
                                            id: 33
                                        },
                                        frameRateSent: {
                                            type: "int64",
                                            id: 34
                                        },
                                        bytesSentPerSecond: {
                                            type: "int64",
                                            id: 35
                                        },
                                        framesEncodedPerSecond: {
                                            type: "int64",
                                            id: 36
                                        }
                                    }
                                }
                            }
                        },
                        remote_obj: {
                            fields: {
                                video_ssrc: {
                                    rule: "repeated",
                                    type: "video_ssrc_obj",
                                    id: 1
                                },
                                audio_ssrc: {
                                    rule: "repeated",
                                    type: "audio_ssrc_obj",
                                    id: 2
                                },
                                candidate_pair: {
                                    rule: "repeated",
                                    type: "candidate_pair_obj",
                                    id: 3
                                },
                                remote_candidate: {
                                    rule: "repeated",
                                    type: "remote_candidate_obj",
                                    id: 4
                                },
                                local_candidate: {
                                    rule: "repeated",
                                    type: "local_candidate_obj",
                                    id: 5
                                },
                                inbound_rtp: {
                                    rule: "repeated",
                                    type: "inbound_rtp_obj",
                                    id: 6
                                },
                                track: {
                                    rule: "repeated",
                                    type: "track_obj",
                                    id: 7
                                },
                                transport: {
                                    rule: "repeated",
                                    type: "transport_obj",
                                    id: 8
                                },
                                audio_inbound_rtp: {
                                    rule: "repeated",
                                    type: "audio_inbound_rtp_obj",
                                    id: 9
                                },
                                video_inbound_rtp: {
                                    rule: "repeated",
                                    type: "video_inbound_rtp_obj",
                                    id: 10
                                },
                                audio_track: {
                                    rule: "repeated",
                                    type: "audio_track_obj",
                                    id: 11
                                },
                                video_track: {
                                    rule: "repeated",
                                    type: "video_track_obj",
                                    id: 12
                                },
                                screen_ssrc: {
                                    rule: "repeated",
                                    type: "screen_ssrc_obj",
                                    id: 13
                                }
                            },
                            nested: {
                                video_ssrc_obj: {
                                    fields: {
                                        googContentType: {
                                            type: "string",
                                            id: 1
                                        },
                                        googCaptureStartNtpTimeMs: {
                                            type: "string",
                                            id: 2
                                        },
                                        googTargetDelayMs: {
                                            type: "string",
                                            id: 3
                                        },
                                        packetsLost: {
                                            type: "string",
                                            id: 4
                                        },
                                        googDecodeMs: {
                                            type: "string",
                                            id: 5
                                        },
                                        googFrameHeightReceived: {
                                            type: "string",
                                            id: 6
                                        },
                                        googFrameRateOutput: {
                                            type: "string",
                                            id: 7
                                        },
                                        packetsReceived: {
                                            type: "string",
                                            id: 8
                                        },
                                        ssrc: {
                                            type: "string",
                                            id: 9
                                        },
                                        googRenderDelayMs: {
                                            type: "string",
                                            id: 10
                                        },
                                        googMaxDecodeMs: {
                                            type: "string",
                                            id: 11
                                        },
                                        googTrackId: {
                                            type: "string",
                                            id: 12
                                        },
                                        googFrameWidthReceived: {
                                            type: "string",
                                            id: 13
                                        },
                                        codecImplementationName: {
                                            type: "string",
                                            id: 14
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 15
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 16
                                        },
                                        googInterframeDelayMax: {
                                            type: "string",
                                            id: 17
                                        },
                                        googCodecName: {
                                            type: "string",
                                            id: 18
                                        },
                                        googFrameRateReceived: {
                                            type: "string",
                                            id: 19
                                        },
                                        framesDecoded: {
                                            type: "string",
                                            id: 20
                                        },
                                        googNacksSent: {
                                            type: "string",
                                            id: 21
                                        },
                                        googFirsSent: {
                                            type: "string",
                                            id: 22
                                        },
                                        bytesReceived: {
                                            type: "string",
                                            id: 23
                                        },
                                        googFirstFrameReceivedToDecodedMs: {
                                            type: "string",
                                            id: 24
                                        },
                                        googCurrentDelayMs: {
                                            type: "string",
                                            id: 25
                                        },
                                        googMinPlayoutDelayMs: {
                                            type: "string",
                                            id: 26
                                        },
                                        googFrameRateDecoded: {
                                            type: "string",
                                            id: 27
                                        },
                                        googJitterBufferMs: {
                                            type: "string",
                                            id: 28
                                        },
                                        googPlisSent: {
                                            type: "string",
                                            id: 29
                                        },
                                        id: {
                                            type: "string",
                                            id: 30
                                        },
                                        type: {
                                            type: "string",
                                            id: 31
                                        },
                                        timestamp: {
                                            type: "string",
                                            id: 32
                                        },
                                        localuid: {
                                            type: "int64",
                                            id: 33
                                        },
                                        remoteuid: {
                                            type: "string",
                                            id: 34
                                        },
                                        bitsReceivedPerSecond: {
                                            type: "int64",
                                            id: 35
                                        },
                                        packetsReceivedPerSecond: {
                                            type: "int64",
                                            id: 36
                                        },
                                        recvPacketLoss: {
                                            type: "int64",
                                            id: 37
                                        },
                                        freezeTime: {
                                            type: "int64",
                                            id: 38
                                        },
                                        totalFreezeTime: {
                                            type: "int64",
                                            id: 39
                                        },
                                        bytesReceivedPerSecond: {
                                            type: "int64",
                                            id: 40
                                        },
                                        framesDecodedPerSecond: {
                                            type: "int64",
                                            id: 41
                                        },
                                        packetsLostRate: {
                                            type: "double",
                                            id: 42
                                        }
                                    }
                                },
                                audio_ssrc_obj: {
                                    fields: {
                                        googDecodingCTN: {
                                            type: "string",
                                            id: 1
                                        },
                                        packetsLost: {
                                            type: "string",
                                            id: 2
                                        },
                                        googSecondaryDecodedRate: {
                                            type: "string",
                                            id: 3
                                        },
                                        googDecodingPLC: {
                                            type: "string",
                                            id: 4
                                        },
                                        packetsReceived: {
                                            type: "string",
                                            id: 5
                                        },
                                        googJitterReceived: {
                                            type: "string",
                                            id: 6
                                        },
                                        googDecodingCNG: {
                                            type: "string",
                                            id: 7
                                        },
                                        ssrc: {
                                            type: "string",
                                            id: 8
                                        },
                                        googPreferredJitterBufferMs: {
                                            type: "string",
                                            id: 9
                                        },
                                        googSpeechExpandRate: {
                                            type: "string",
                                            id: 10
                                        },
                                        totalSamplesDuration: {
                                            type: "string",
                                            id: 11
                                        },
                                        totalAudioEnergy: {
                                            type: "string",
                                            id: 12
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 13
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 14
                                        },
                                        googDecodingPLCCNG: {
                                            type: "string",
                                            id: 15
                                        },
                                        googCodecName: {
                                            type: "string",
                                            id: 16
                                        },
                                        googSecondaryDiscardedRate: {
                                            type: "string",
                                            id: 17
                                        },
                                        googDecodingNormal: {
                                            type: "string",
                                            id: 18
                                        },
                                        googTrackId: {
                                            type: "string",
                                            id: 19
                                        },
                                        audioOutputLevel: {
                                            type: "string",
                                            id: 20
                                        },
                                        googAccelerateRate: {
                                            type: "string",
                                            id: 21
                                        },
                                        bytesReceived: {
                                            type: "string",
                                            id: 22
                                        },
                                        googCurrentDelayMs: {
                                            type: "string",
                                            id: 23
                                        },
                                        googDecodingCTSG: {
                                            type: "string",
                                            id: 24
                                        },
                                        googExpandRate: {
                                            type: "string",
                                            id: 25
                                        },
                                        googPreemptiveExpandRate: {
                                            type: "string",
                                            id: 26
                                        },
                                        googJitterBufferMs: {
                                            type: "string",
                                            id: 27
                                        },
                                        googDecodingMuted: {
                                            type: "string",
                                            id: 28
                                        },
                                        id: {
                                            type: "string",
                                            id: 29
                                        },
                                        type: {
                                            type: "string",
                                            id: 30
                                        },
                                        timestamp: {
                                            type: "string",
                                            id: 31
                                        },
                                        localuid: {
                                            type: "int64",
                                            id: 32
                                        },
                                        remoteuid: {
                                            type: "string",
                                            id: 33
                                        },
                                        bitsReceivedPerSecond: {
                                            type: "int64",
                                            id: 34
                                        },
                                        packetsReceivedPerSecond: {
                                            type: "int64",
                                            id: 35
                                        },
                                        recvPacketLoss: {
                                            type: "int64",
                                            id: 36
                                        },
                                        freezeTime: {
                                            type: "int64",
                                            id: 37
                                        },
                                        totalFreezeTime: {
                                            type: "int64",
                                            id: 38
                                        },
                                        bytesReceivedPerSecond: {
                                            type: "int64",
                                            id: 39
                                        },
                                        packetsLostRate: {
                                            type: "double",
                                            id: 40
                                        }
                                    }
                                },
                                candidate_pair_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "double",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 4
                                        },
                                        localCandidateId: {
                                            type: "string",
                                            id: 5
                                        },
                                        remoteCandidateId: {
                                            type: "string",
                                            id: 6
                                        },
                                        state: {
                                            type: "string",
                                            id: 7
                                        },
                                        priority: {
                                            type: "int64",
                                            id: 8
                                        },
                                        nominated: {
                                            type: "bool",
                                            id: 9
                                        },
                                        writable: {
                                            type: "bool",
                                            id: 10
                                        },
                                        bytesSent: {
                                            type: "int64",
                                            id: 11
                                        },
                                        bytesReceived: {
                                            type: "int64",
                                            id: 12
                                        },
                                        totalRoundTripTime: {
                                            type: "double",
                                            id: 13
                                        },
                                        currentRoundTripTime: {
                                            type: "double",
                                            id: 14
                                        },
                                        availableOutgoingBitrate: {
                                            type: "int64",
                                            id: 15
                                        },
                                        requestsReceived: {
                                            type: "int64",
                                            id: 16
                                        },
                                        requestsSent: {
                                            type: "int64",
                                            id: 17
                                        },
                                        responsesReceived: {
                                            type: "int64",
                                            id: 18
                                        },
                                        responsesSent: {
                                            type: "int64",
                                            id: 19
                                        },
                                        consentRequestsSent: {
                                            type: "int64",
                                            id: 20
                                        }
                                    }
                                },
                                remote_candidate_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "double",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 4
                                        },
                                        isRemote: {
                                            type: "bool",
                                            id: 5
                                        },
                                        ip: {
                                            type: "string",
                                            id: 6
                                        },
                                        port: {
                                            type: "int64",
                                            id: 7
                                        },
                                        protocol: {
                                            type: "string",
                                            id: 8
                                        },
                                        candidateType: {
                                            type: "string",
                                            id: 9
                                        },
                                        priority: {
                                            type: "int64",
                                            id: 10
                                        },
                                        deleted: {
                                            type: "bool",
                                            id: 11
                                        }
                                    }
                                },
                                local_candidate_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "double",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 4
                                        },
                                        isRemote: {
                                            type: "bool",
                                            id: 5
                                        },
                                        networkType: {
                                            type: "string",
                                            id: 6
                                        },
                                        ip: {
                                            type: "string",
                                            id: 7
                                        },
                                        port: {
                                            type: "int64",
                                            id: 8
                                        },
                                        protocol: {
                                            type: "string",
                                            id: 9
                                        },
                                        candidateType: {
                                            type: "string",
                                            id: 10
                                        },
                                        priority: {
                                            type: "int64",
                                            id: 11
                                        },
                                        deleted: {
                                            type: "bool",
                                            id: 12
                                        }
                                    }
                                },
                                inbound_rtp_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "double",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        ssrc: {
                                            type: "int64",
                                            id: 4
                                        },
                                        isRemote: {
                                            type: "bool",
                                            id: 5
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 6
                                        },
                                        kind: {
                                            type: "string",
                                            id: 7
                                        },
                                        trackId: {
                                            type: "string",
                                            id: 8
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 9
                                        },
                                        codecId: {
                                            type: "string",
                                            id: 10
                                        },
                                        packetsReceived: {
                                            type: "int64",
                                            id: 11
                                        },
                                        fecPacketsReceived: {
                                            type: "int64",
                                            id: 12
                                        },
                                        fecPacketsDiscarded: {
                                            type: "int64",
                                            id: 13
                                        },
                                        bytesReceived: {
                                            type: "int64",
                                            id: 14
                                        },
                                        headerBytesReceived: {
                                            type: "int64",
                                            id: 15
                                        },
                                        packetsLost: {
                                            type: "int64",
                                            id: 16
                                        },
                                        lastPacketReceivedTimestamp: {
                                            type: "double",
                                            id: 17
                                        },
                                        jitter: {
                                            type: "double",
                                            id: 18
                                        },
                                        jitterBufferDelay: {
                                            type: "double",
                                            id: 19
                                        },
                                        jitterBufferEmittedCount: {
                                            type: "int64",
                                            id: 20
                                        },
                                        totalSamplesReceived: {
                                            type: "int64",
                                            id: 21
                                        },
                                        concealedSamples: {
                                            type: "int64",
                                            id: 22
                                        },
                                        silentConcealedSamples: {
                                            type: "int64",
                                            id: 23
                                        },
                                        concealmentEvents: {
                                            type: "int64",
                                            id: 24
                                        },
                                        insertedSamplesForDeceleration: {
                                            type: "int64",
                                            id: 25
                                        },
                                        removedSamplesForAcceleration: {
                                            type: "int64",
                                            id: 26
                                        },
                                        audioLevel: {
                                            type: "double",
                                            id: 27
                                        },
                                        totalAudioEnergy: {
                                            type: "double",
                                            id: 28
                                        },
                                        totalSamplesDuration: {
                                            type: "double",
                                            id: 29
                                        },
                                        estimatedPlayoutTimestamp: {
                                            type: "int64",
                                            id: 30
                                        }
                                    }
                                },
                                track_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "double",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        trackIdentifier: {
                                            type: "string",
                                            id: 4
                                        },
                                        remoteSource: {
                                            type: "bool",
                                            id: 5
                                        },
                                        ended: {
                                            type: "bool",
                                            id: 6
                                        },
                                        detached: {
                                            type: "bool",
                                            id: 7
                                        },
                                        kind: {
                                            type: "string",
                                            id: 8
                                        },
                                        jitterBufferDelay: {
                                            type: "double",
                                            id: 9
                                        },
                                        jitterBufferEmittedCount: {
                                            type: "int64",
                                            id: 10
                                        },
                                        audioLevel: {
                                            type: "double",
                                            id: 11
                                        },
                                        totalAudioEnergy: {
                                            type: "double",
                                            id: 12
                                        },
                                        totalSamplesReceived: {
                                            type: "int64",
                                            id: 13
                                        },
                                        totalSamplesDuration: {
                                            type: "double",
                                            id: 14
                                        },
                                        concealedSamples: {
                                            type: "int64",
                                            id: 15
                                        },
                                        silentConcealedSamples: {
                                            type: "int64",
                                            id: 16
                                        },
                                        concealmentEvents: {
                                            type: "int64",
                                            id: 17
                                        },
                                        insertedSamplesForDeceleration: {
                                            type: "int64",
                                            id: 18
                                        },
                                        removedSamplesForAcceleration: {
                                            type: "int64",
                                            id: 19
                                        }
                                    }
                                },
                                transport_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "double",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        bytesSent: {
                                            type: "int64",
                                            id: 4
                                        },
                                        packetsSent: {
                                            type: "int64",
                                            id: 5
                                        },
                                        bytesReceived: {
                                            type: "int64",
                                            id: 6
                                        },
                                        packetsReceived: {
                                            type: "int64",
                                            id: 7
                                        },
                                        dtlsState: {
                                            type: "string",
                                            id: 8
                                        },
                                        selectedCandidatePairId: {
                                            type: "string",
                                            id: 9
                                        },
                                        localCertificateId: {
                                            type: "string",
                                            id: 10
                                        },
                                        remoteCertificateId: {
                                            type: "string",
                                            id: 11
                                        },
                                        tlsVersion: {
                                            type: "string",
                                            id: 12
                                        },
                                        dtlsCipher: {
                                            type: "string",
                                            id: 13
                                        },
                                        srtpCipher: {
                                            type: "string",
                                            id: 14
                                        },
                                        selectedCandidatePairChanges: {
                                            type: "int64",
                                            id: 15
                                        }
                                    }
                                },
                                audio_inbound_rtp_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "int64",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        codecId: {
                                            type: "string",
                                            id: 4
                                        },
                                        kind: {
                                            type: "string",
                                            id: 5
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 6
                                        },
                                        ssrc: {
                                            type: "int64",
                                            id: 7
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 8
                                        },
                                        jitter: {
                                            type: "double",
                                            id: 9
                                        },
                                        packetsLost: {
                                            type: "int64",
                                            id: 10
                                        },
                                        packetsReceived: {
                                            type: "int64",
                                            id: 11
                                        },
                                        audioLevel: {
                                            type: "int64",
                                            id: 12
                                        },
                                        bytesReceived: {
                                            type: "int64",
                                            id: 13
                                        },
                                        concealedSamples: {
                                            type: "int64",
                                            id: 14
                                        },
                                        concealmentEvents: {
                                            type: "int64",
                                            id: 15
                                        },
                                        estimatedPlayoutTimestamp: {
                                            type: "int64",
                                            id: 16
                                        },
                                        fecPacketsDiscarded: {
                                            type: "int64",
                                            id: 17
                                        },
                                        fecPacketsReceived: {
                                            type: "int64",
                                            id: 18
                                        },
                                        headerBytesReceived: {
                                            type: "int64",
                                            id: 19
                                        },
                                        insertedSamplesForDeceleration: {
                                            type: "int64",
                                            id: 20
                                        },
                                        jitterBufferDelay: {
                                            type: "double",
                                            id: 21
                                        },
                                        jitterBufferEmittedCount: {
                                            type: "int64",
                                            id: 22
                                        },
                                        lastPacketReceivedTimestamp: {
                                            type: "double",
                                            id: 23
                                        },
                                        removedSamplesForAcceleration: {
                                            type: "int64",
                                            id: 24
                                        },
                                        silentConcealedSamples: {
                                            type: "int64",
                                            id: 25
                                        },
                                        totalAudioEnergy: {
                                            type: "double",
                                            id: 26
                                        },
                                        totalSamplesDuration: {
                                            type: "double",
                                            id: 27
                                        },
                                        totalSamplesReceived: {
                                            type: "int64",
                                            id: 28
                                        },
                                        trackId: {
                                            type: "string",
                                            id: 29
                                        },
                                        bitsReceivedPerSecond: {
                                            type: "int64",
                                            id: 30
                                        },
                                        packetsReceivedPerSecond: {
                                            type: "int64",
                                            id: 31
                                        },
                                        uid: {
                                            type: "string",
                                            id: 32
                                        },
                                        bytesReceivedPerSecond: {
                                            type: "int64",
                                            id: 33
                                        },
                                        packetsLostRate: {
                                            type: "double",
                                            id: 34
                                        }
                                    }
                                },
                                video_inbound_rtp_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "int64",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        codecId: {
                                            type: "string",
                                            id: 4
                                        },
                                        kind: {
                                            type: "string",
                                            id: 5
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 6
                                        },
                                        ssrc: {
                                            type: "int64",
                                            id: 7
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 8
                                        },
                                        packetsLost: {
                                            type: "int64",
                                            id: 9
                                        },
                                        packetsReceived: {
                                            type: "int64",
                                            id: 10
                                        },
                                        bytesReceived: {
                                            type: "int64",
                                            id: 11
                                        },
                                        estimatedPlayoutTimestamp: {
                                            type: "int64",
                                            id: 12
                                        },
                                        firCount: {
                                            type: "int64",
                                            id: 13
                                        },
                                        frameHeight: {
                                            type: "int64",
                                            id: 14
                                        },
                                        frameWidth: {
                                            type: "int64",
                                            id: 15
                                        },
                                        framesDecoded: {
                                            type: "int64",
                                            id: 16
                                        },
                                        framesPerSecond: {
                                            type: "int64",
                                            id: 17
                                        },
                                        framesReceived: {
                                            type: "int64",
                                            id: 18
                                        },
                                        headerBytesReceived: {
                                            type: "int64",
                                            id: 19
                                        },
                                        keyFramesDecoded: {
                                            type: "int64",
                                            id: 20
                                        },
                                        lastPacketReceivedTimestamp: {
                                            type: "int64",
                                            id: 21
                                        },
                                        nackCount: {
                                            type: "int64",
                                            id: 22
                                        },
                                        pliCount: {
                                            type: "int64",
                                            id: 23
                                        },
                                        totalDecodeTime: {
                                            type: "double",
                                            id: 24
                                        },
                                        totalInterFrameDelay: {
                                            type: "double",
                                            id: 25
                                        },
                                        totalSquaredInterFrameDelay: {
                                            type: "double",
                                            id: 26
                                        },
                                        trackId: {
                                            type: "string",
                                            id: 27
                                        },
                                        bitsReceivedPerSecond: {
                                            type: "int64",
                                            id: 28
                                        },
                                        packetsReceivedPerSecond: {
                                            type: "int64",
                                            id: 29
                                        },
                                        uid: {
                                            type: "string",
                                            id: 30
                                        },
                                        bytesReceivedPerSecond: {
                                            type: "int64",
                                            id: 31
                                        },
                                        packetsLostRate: {
                                            type: "double",
                                            id: 32
                                        },
                                        framesDecodedPerSecond: {
                                            type: "int64",
                                            id: 33
                                        }
                                    }
                                },
                                audio_track_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "int64",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        audioLevel: {
                                            type: "double",
                                            id: 4
                                        },
                                        detached: {
                                            type: "bool",
                                            id: 5
                                        },
                                        ended: {
                                            type: "bool",
                                            id: 6
                                        },
                                        jitterBufferFlushes: {
                                            type: "int64",
                                            id: 7
                                        },
                                        remoteSource: {
                                            type: "bool",
                                            id: 8
                                        },
                                        trackIdentifier: {
                                            type: "string",
                                            id: 9
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 10
                                        }
                                    }
                                },
                                video_track_obj: {
                                    fields: {
                                        id: {
                                            type: "string",
                                            id: 1
                                        },
                                        timestamp: {
                                            type: "int64",
                                            id: 2
                                        },
                                        type: {
                                            type: "string",
                                            id: 3
                                        },
                                        detached: {
                                            type: "bool",
                                            id: 4
                                        },
                                        ended: {
                                            type: "bool",
                                            id: 5
                                        },
                                        frameHeight: {
                                            type: "int64",
                                            id: 6
                                        },
                                        frameWidth: {
                                            type: "int64",
                                            id: 7
                                        },
                                        framesDecoded: {
                                            type: "int64",
                                            id: 8
                                        },
                                        framesDropped: {
                                            type: "int64",
                                            id: 9
                                        },
                                        framesReceived: {
                                            type: "int64",
                                            id: 10
                                        },
                                        freezeCount: {
                                            type: "int64",
                                            id: 11
                                        },
                                        pauseCount: {
                                            type: "int64",
                                            id: 12
                                        },
                                        remoteSource: {
                                            type: "bool",
                                            id: 13
                                        },
                                        sumOfSquaredFramesDuration: {
                                            type: "double",
                                            id: 14
                                        },
                                        totalFramesDuration: {
                                            type: "double",
                                            id: 15
                                        },
                                        totalFreezesDuration: {
                                            type: "double",
                                            id: 16
                                        },
                                        totalPausesDuration: {
                                            type: "int64",
                                            id: 17
                                        },
                                        trackIdentifier: {
                                            type: "string",
                                            id: 18
                                        },
                                        ssrc: {
                                            type: "int64",
                                            id: 19
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 20
                                        }
                                    }
                                },
                                screen_ssrc_obj: {
                                    fields: {
                                        googContentType: {
                                            type: "string",
                                            id: 1
                                        },
                                        googCaptureStartNtpTimeMs: {
                                            type: "string",
                                            id: 2
                                        },
                                        googTargetDelayMs: {
                                            type: "string",
                                            id: 3
                                        },
                                        packetsLost: {
                                            type: "string",
                                            id: 4
                                        },
                                        googDecodeMs: {
                                            type: "string",
                                            id: 5
                                        },
                                        googFrameHeightReceived: {
                                            type: "string",
                                            id: 6
                                        },
                                        googFrameRateOutput: {
                                            type: "string",
                                            id: 7
                                        },
                                        packetsReceived: {
                                            type: "string",
                                            id: 8
                                        },
                                        ssrc: {
                                            type: "string",
                                            id: 9
                                        },
                                        googRenderDelayMs: {
                                            type: "string",
                                            id: 10
                                        },
                                        googMaxDecodeMs: {
                                            type: "string",
                                            id: 11
                                        },
                                        googTrackId: {
                                            type: "string",
                                            id: 12
                                        },
                                        googFrameWidthReceived: {
                                            type: "string",
                                            id: 13
                                        },
                                        codecImplementationName: {
                                            type: "string",
                                            id: 14
                                        },
                                        transportId: {
                                            type: "string",
                                            id: 15
                                        },
                                        mediaType: {
                                            type: "string",
                                            id: 16
                                        },
                                        googInterframeDelayMax: {
                                            type: "string",
                                            id: 17
                                        },
                                        googCodecName: {
                                            type: "string",
                                            id: 18
                                        },
                                        googFrameRateReceived: {
                                            type: "string",
                                            id: 19
                                        },
                                        framesDecoded: {
                                            type: "string",
                                            id: 20
                                        },
                                        googNacksSent: {
                                            type: "string",
                                            id: 21
                                        },
                                        googFirsSent: {
                                            type: "string",
                                            id: 22
                                        },
                                        bytesReceived: {
                                            type: "string",
                                            id: 23
                                        },
                                        googFirstFrameReceivedToDecodedMs: {
                                            type: "string",
                                            id: 24
                                        },
                                        googCurrentDelayMs: {
                                            type: "string",
                                            id: 25
                                        },
                                        googMinPlayoutDelayMs: {
                                            type: "string",
                                            id: 26
                                        },
                                        googFrameRateDecoded: {
                                            type: "string",
                                            id: 27
                                        },
                                        googJitterBufferMs: {
                                            type: "string",
                                            id: 28
                                        },
                                        googPlisSent: {
                                            type: "string",
                                            id: 29
                                        },
                                        id: {
                                            type: "string",
                                            id: 30
                                        },
                                        type: {
                                            type: "string",
                                            id: 31
                                        },
                                        timestamp: {
                                            type: "string",
                                            id: 32
                                        },
                                        localuid: {
                                            type: "int64",
                                            id: 33
                                        },
                                        remoteuid: {
                                            type: "string",
                                            id: 34
                                        },
                                        bitsReceivedPerSecond: {
                                            type: "int64",
                                            id: 35
                                        },
                                        packetsReceivedPerSecond: {
                                            type: "int64",
                                            id: 36
                                        },
                                        recvPacketLoss: {
                                            type: "int64",
                                            id: 37
                                        },
                                        freezeTime: {
                                            type: "int64",
                                            id: 38
                                        },
                                        totalFreezeTime: {
                                            type: "int64",
                                            id: 39
                                        },
                                        bytesReceivedPerSecond: {
                                            type: "int64",
                                            id: 40
                                        },
                                        framesDecodedPerSecond: {
                                            type: "int64",
                                            id: 41
                                        },
                                        packetsLostRate: {
                                            type: "double",
                                            id: 42
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            });
        e.exports = n
    }, function(e, t, r) {
        "use strict";
        e.exports = r(116)
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        var i = Object.prototype.hasOwnProperty;
        Object.prototype.toString;
        t.default = function(e) {
            if (null == e) return !0;
            if ("boolean" == typeof e) return !1;
            if ("number" == typeof e) return 0 === e;
            if ("string" == typeof e) return 0 === e.length;
            if ("function" == typeof e) return 0 === e.length;
            if (Array.isArray(e)) return 0 === e.length;
            if (e instanceof Error) return "" === e.message;
            if (function(e) {
                    if (!e || "object" != typeof e || "[object Object]" != Object.prototype.toString.call(e)) return !1;
                    var t = Object.getPrototypeOf(e);
                    if (null === t) return !0;
                    var r = Object.prototype.hasOwnProperty.call(t, "constructor") && t.constructor;
                    return "function" == typeof r && r instanceof r && Function.prototype.toString.call(r) === Function.prototype.toString.call(Object)
                }(e)) switch (Object.prototype.toString.call(e)) {
                case "[object File]":
                case "[object Map]":
                case "[object Set]":
                    return 0 === e.size;
                case "[object Object]":
                    for (var t in e)
                        if (i.call(e, t)) return !1;
                    return !0
            }
            return !1
        }
    }, function(e, t) {
        (function(t) {
            e.exports = t
        }).call(this, {})
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Logger = void 0;
        const i = r(27),
            n = r(243);
        t.Logger = class {
            constructor(e) {
                this.options = e, this.api = "log", this.style = "color:#1cb977;", this.prefix = e.prefix || "", "object" == typeof e.debug && e.debug.style && (this.style = e.debug.style), e.isSavedLogs && (this.logHelper = new n.logHelper(e)), this.supportedBrowsers = ["Chrome", "Safari", "Firefox", "Chrome Mobile"], this.cs = console, this.isDebug = !0, this.setDebug(e.debug), this.adapterRef = e.adapterRef
            }
            setDebug(e) {
                "boolean" == typeof e ? this.isDebug = e : (this.isDebug = !0, e && e.style && (this.style = e.style))
            }
            debug() {
                if (this.isDebug) {
                    this.logHelper && this.logHelper.log(arguments);
                    var e = this.formatArgs([].slice.call(arguments, 0)); - 1 !== this.supportedBrowsers.indexOf(i.platform.name) && "string" == typeof e[0] && (e[0] = "%c" + e[0], e.splice(1, 0, this.style)), this._log("debug", e), window.logStorage && window.logStorage.log("debug", e)
                }
            }
            log() {
                if (this.isDebug) {
                    this.logHelper && this.logHelper.log(arguments);
                    var e = this.formatArgs([].slice.call(arguments, 0)); - 1 !== this.supportedBrowsers.indexOf(i.platform.name) && "string" == typeof e[0] && (e[0] = "%c" + e[0], e.splice(1, 0, this.style)), this._log("log", e), window.logStorage && window.logStorage.log("log", e)
                }
            }
            info() {
                if (this.isDebug) {
                    this.logHelper && this.logHelper.log(arguments);
                    var e = this.formatArgs([].slice.call(arguments, 0)); - 1 !== this.supportedBrowsers.indexOf(i.platform.name) && "string" == typeof e[0] && (e[0] = "%c" + e[0], e.splice(1, 0, this.style)), this._log("info", e), window.logStorage && window.logStorage.log("info", e)
                }
            }
            warn() {
                if (this.isDebug) {
                    this.logHelper && this.logHelper.log(arguments);
                    var e = this.formatArgs([].slice.call(arguments, 0)); - 1 !== this.supportedBrowsers.indexOf(i.platform.name) && "string" == typeof e[0] && (e[0] = "%c" + e[0], e.splice(1, 0, this.style)), this._log("warn", e), window.logStorage && window.logStorage.log("warn", e)
                }
            }
            error() {
                if (this.isDebug) {
                    this.logHelper && this.logHelper.log(arguments);
                    var e = this.formatArgs([].slice.call(arguments, 0)); - 1 !== this.supportedBrowsers.indexOf(i.platform.name) && "string" == typeof e[0] && (e[0] = "%c" + e[0], e.splice(1, 0, this.style)), this._log("error", e), window.logStorage && window.logStorage.log("error", e)
                }
            }
            _log(e, t) {
                let r = this.options.logFunc,
                    i = null;
                if (r && (r[e] && (i = r[e]), "function" == typeof i)) i.apply(r, t);
                else if (this.cs[e]) try {
                    this.cs[e].apply ? this.chrome(e, t) : this.ie(e, t)
                } catch (e) {}
            }
            chrome(e, t) {
                let r = i.platform.name; - 1 !== this.supportedBrowsers.indexOf(r) ? this.cs[e].apply(this.cs, t) : logger.ie(e, t)
            }
            ie(e, t) {
                var r = this;
                t.forEach((function(t) {
                    r.cs[e](JSON.stringify(t, null, 4))
                }))
            }
            formatArgs(e) {
                var t = new Date,
                    r = `[WEBRTC LOG ${o(""+(t.getMonth()+1))+"-"+o(""+t.getDate())+" "+o(""+t.getHours())+":"+o(""+t.getMinutes())+":"+o(""+t.getSeconds())+":"+o(""+t.getMilliseconds(),3)} ${this.prefix.toUpperCase()}]  `;
                return "string" == typeof e[0] ? e[0] = r + e[0] : e.splice(0, 0, r), e.forEach((function(t, r) {
                    var i, n, o;
                    "object" == typeof t && (e[r] = (i = t, n = [], o = JSON.stringify(i, (function(e, t) {
                        if ("object" == typeof t && null !== t) {
                            if (-1 !== n.indexOf(t)) return;
                            n.push(t)
                        }
                        return t
                    })), JSON.parse(o)))
                })), e
            }
        };
        var o = function(e, t) {
            t = t || 2;
            for (var r = "" + e; r.length < t;) r = "0" + r;
            return r
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.logHelper = void 0;
        t.logHelper = class {
            constructor(e) {
                if (e.maxLogsLines && "number" == typeof e.maxLogsLines && !isNaN(e.maxLogsLines) ? this.maxLogsLines = e.maxLogsLines : this.maxLogsLines = 5e3, e.logFilename && (e.logFilename = e.logFilename + ".txt"), this.useTimestamps = e.useTimestamps || !1, this.useLocalStorage = e.useLocalStorage || !1, this.autoTrim = !0, this.maxLines = e.maxLogsLines || 5e3, this.tailNumLines = 100, this.logFilename = e.logFilename || "nimWebRtcLog.txt", this.maxDepth = 5, this.depth = 0, this.parentSizes = [0], this.currentResult = "", this.startTime = new Date, this.output = "", this.useLocalStorage) {
                    var t = window.localStorage.getItem("nimWebRtcLog");
                    if (t) {
                        var r = JSON.parse(t);
                        this.output = r.log;
                        var i = new Date(r.startTime),
                            n = new Date(r.lastLog);
                        this.output += "\n---- Session end: " + r.lastLog + " ----\n", this.output += this.formatSessionDuration(i.getTime(), n.getTime()), this.output += "\n\n"
                    }
                }
                this.output += "---- Session started: " + this.startTime + " ----\n\n"
            }
            getLog() {
                var e = new Date;
                if (this.useLocalStorage) {
                    var t = window.localStorage.getItem("nimWebRtcLog");
                    if (t) {
                        var r = JSON.parse(t);
                        this.startTime = new Date(r.startTime), this.output = r.log, e = new Date(r.lastLog)
                    }
                }
                return this.output + "\n---- Log retrieved: " + e + " ----\n" + this.formatSessionDuration(this.startTime.getTime(), e.getTime())
            }
            tail(e) {
                e = e || this.tailNumLines;
                return this.trimLog(this.getLog(), e)
            }
            search(e) {
                for (var t = this.output.split("\n"), r = new RegExp(e), i = [], n = 0; n < t.length; n++) {
                    var o = "[" + n + "] ";
                    t[n].match(r) && i.push(o + t[n])
                }
                var s = i.join("\n");
                return 0 == s.length && (s = 'Nothing found for "' + e + '".'), s
            }
            getSlice(e, t) {
                return this.output.split("\n").slice(e, e + t).join("\n")
            }
            downloadLog() {
                var e = this.getLog(),
                    t = new Blob([e], {
                        type: "data:text/plain;charset=utf-8"
                    }),
                    r = document.createElement("a");
                r.href = window.URL.createObjectURL(t), r.target = "_blank", r.download = this.logFilename, document.body.appendChild(r), r.click(), document.body.removeChild(r), window.URL.revokeObjectURL(r.href)
            }
            clear() {
                var e = new Date;
                if (this.output = "---- Log cleared: " + e + " ----\n", this.useLocalStorage) {
                    var t = {
                            startTime: this.startTime,
                            log: this.output,
                            lastLog: e
                        },
                        r = JSON.stringify(t);
                    window.localStorage.setItem("nimWebRtcLog", r)
                }
            }
            log(e) {
                var t = this.determineType(e);
                if (null != t) {
                    var r = this.formatType(t, e);
                    if (this.useTimestamps) {
                        var i = new Date;
                        this.output += this.formatTimestamp(i)
                    }
                    if (this.output += r + "\n", this.autoTrim && (this.output = this.trimLog(this.output, this.maxLines)), this.useLocalStorage) {
                        var n = new Date,
                            o = {
                                startTime: this.startTime,
                                log: this.output,
                                lastLog: n
                            },
                            s = JSON.stringify(o);
                        window.localStorage.setItem("nimWebRtcLog", s)
                    }
                }
                this.depth = 0, this.parentSizes = [0], this.currentResult = ""
            }
            determineType(e) {
                if (null != e) {
                    var t, r = typeof e;
                    if ("object" == r) t = null == e.length ? "function" == typeof e.getTime ? "Date" : "function" == typeof e.test ? "RegExp" : "Object" : "Array";
                    else t = r;
                    return t
                }
                return "null"
            }
            formatType(e, t) {
                if (this.maxDepth && this.depth >= this.maxDepth) return "... (max-depth reached)";
                switch (e) {
                    case "Object":
                        this.currentResult += "{\n", this.depth++, this.parentSizes.push(this.objectSize(t));
                        var r = 0;
                        for (var i in t) {
                            this.currentResult += this.indentsForDepth(this.depth), this.currentResult += i + ": ";
                            var n = this.determineType(t[i]);
                            (o = this.formatType(n, t[i])) ? ("function" !== n && (this.currentResult += o), r != this.parentSizes[this.depth] - 1 && (this.currentResult += ","), this.currentResult += "\n") : (r != this.parentSizes[this.depth] - 1 && (this.currentResult += ","), this.currentResult += "\n"), r++
                        }
                        if (this.depth--, this.parentSizes.pop(), this.currentResult += this.indentsForDepth(this.depth), this.currentResult += "}", 0 == this.depth) return this.currentResult;
                        break;
                    case "Array":
                        this.currentResult += "[", this.depth++, this.parentSizes.push(t.length);
                        for (r = 0; r < t.length; r++) {
                            var o;
                            "Object" != (n = this.determineType(t[r])) && "Array" != n || (this.currentResult += "\n" + this.indentsForDepth(this.depth)), (o = this.formatType(n, t[r])) ? (this.currentResult += o, r != this.parentSizes[this.depth] - 1 && (this.currentResult += ", "), "Array" == n && (this.currentResult += "\n")) : (r != this.parentSizes[this.depth] - 1 && (this.currentResult += ", "), ("Object" != n || r == this.parentSizes[this.depth] - 1) && (this.currentResult += "\n"))
                        }
                        if (this.depth--, this.parentSizes.pop(), this.currentResult += "]", 0 == this.depth) return this.currentResult;
                        break;
                    case "function":
                        var s = (t += "").split("\n");
                        for (r = 0; r < s.length; r++) s[r].match(/\}/) && this.depth--, this.currentResult += this.indentsForDepth(this.depth), s[r].match(/\{/) && this.depth++, this.currentResult += s[r] + "\n";
                        return this.currentResult;
                    case "RegExp":
                        return "/" + t.source + "/";
                    case "Date":
                    case "string":
                        return this.depth > 0 || 0 == t.length ? '"' + t + '"' : t;
                    case "boolean":
                        return t ? "true" : "false";
                    case "number":
                        return t + ""
                }
            }
            indentsForDepth(e) {
                for (var t = "", r = 0; r < e; r++) t += "\t";
                return t
            }
            trimLog(e, t) {
                var r = e.split("\n");
                return r.length > t && (r = r.slice(r.length - t)), r.join("\n")
            }
            lines() {
                return this.output.split("\n").length
            }
            formatSessionDuration(e, t) {
                var r = t - e,
                    i = Math.floor(r / 1e3 / 60 / 60),
                    n = ("0" + i).slice(-2);
                r -= 1e3 * i * 60 * 60;
                var o = Math.floor(r / 1e3 / 60),
                    s = ("0" + o).slice(-2);
                r -= 1e3 * o * 60;
                var a = Math.floor(r / 1e3);
                return r -= 1e3 * a, "---- Session duration: " + n + ":" + s + ":" + ("0" + a).slice(-2) + " ----"
            }
            formatTimestamp(e) {
                var t = e.getFullYear(),
                    r = e.getDate();
                return "[" + t + "-" + ("0" + (e.getMonth() + 1)).slice(-2) + "-" + r + " " + Number(e.getHours()) + ":" + ("0" + e.getMinutes()).slice(-2) + ":" + ("0" + e.getSeconds()).slice(-2) + "]: "
            }
            objectSize(e) {
                var t, r = 0;
                for (t in e) e.hasOwnProperty && e.hasOwnProperty(t) && r++;
                return r
            }
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.MediaCapability = void 0;
        const i = r(245),
            n = r(20);
        t.MediaCapability = class {
            constructor(e) {
                this.adapterRef = e, this.supportedCodecRecv = null, this.supportedCodecSend = null, this.preferredCodecSend = {
                    video: ["H264", "VP8"],
                    screen: ["H264", "VP8"]
                }, this.room = {
                    videoCodecType: []
                }
            }
            async detect() {
                let e = await n.getSupportedCodecs("recv") || {
                        video: [],
                        audio: ["OPUS"]
                    },
                    t = await n.getSupportedCodecs("send") || {
                        video: [],
                        audio: ["OPUS"]
                    };
                this.supportedCodecRecv = e.video, this.supportedCodecSend = t.video, this.adapterRef.logger.log("detect supportedCodecRecv", JSON.stringify(this.supportedCodecRecv), "supportedCodecSend", JSON.stringify(this.supportedCodecSend), "Preferred codec:", JSON.stringify(this.preferredCodecSend))
            }
            getCodecCapability() {
                if (this.supportedCodecRecv && this.supportedCodecSend) {
                    const e = [];
                    for (let t of n.VideoCodecList) this.supportedCodecRecv.indexOf(t) > -1 && this.supportedCodecSend.indexOf(t) > -1 && e.push(t);
                    return e
                }
                return this.adapterRef.logger.error("getCodecCapability: call detect first"), []
            }
            stringify() {
                let e = {
                    256: []
                };
                for (let t of this.getCodecCapability()) i.VideoCodecStr2Int[t] > -1 ? e[256].push(i.VideoCodecStr2Int[t]) : this.adapterRef.logger.error("MediaCapability:Unknown VideoCodecStr2Int", t);
                0 === e[256].length && this.adapterRef.logger.error("MediaCapability:No Local Suitable codec available");
                return JSON.stringify(e)
            }
            getCodecSend(e, t) {
                let r = {
                        codecName: null
                    },
                    i = {
                        codecName: null
                    };
                for (let n = 0; n < this.preferredCodecSend[e].length; n++) {
                    const o = this.preferredCodecSend[e][n];
                    if (t.codecs || !t.codecs.length)
                        for (let e = 0; e < t.codecs.length; e++) {
                            const n = t.codecs[e];
                            n.mimeType && n.mimeType.toLowerCase().indexOf(o.toLowerCase()) > -1 && (this.room.videoCodecType.indexOf(o) > -1 ? r.codecName || (r = {
                                codecParam: n,
                                codecName: o
                            }) : i.codecName || (i = {
                                codecParam: n,
                                codecName: o
                            }))
                        }
                }
                return r.codecName ? (this.adapterRef.logger.log("MediaCapability：发送的Codec为:", r.codecName, JSON.stringify(r.codecParam)), r) : (this.adapterRef.logger.error("MediaCapability：未找到合适的发送Codec。发送的Codec使用:", i.codecName, i.codecParam), i)
            }
            parseRoom(e) {
                if (!e.mediaCapabilitySet) return;
                const t = JSON.parse(e.mediaCapabilitySet);
                if (t[256]) {
                    const r = this.room.videoCodecType;
                    this.room.videoCodecType = [];
                    for (const r of t[256]) {
                        let t = i.VideoCodecInt2Str[r];
                        t ? this.room.videoCodecType.push(t) : this.adapterRef.logger.error("Unknown Video Codec Type", r, e)
                    }
                    r.length ? this.adapterRef.logger.log("Room videoCodecType发生变更。new:", this.room.videoCodecType, "old:", r) : this.adapterRef.logger.log("Room videoCodecType:", JSON.stringify(this.room.videoCodecType))
                }
            }
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.VideoCodecInt2Str = t.VideoCodecStr2Int = t.SignalChannelMode = void 0,
            function(e) {
                e[e.CHANNEL_MODE_P2P = 1] = "CHANNEL_MODE_P2P", e[e.CHANNEL_MODE_MEETING = 2] = "CHANNEL_MODE_MEETING", e[e.CHANNEL_MODE_1V1 = 3] = "CHANNEL_MODE_1V1"
            }(t.SignalChannelMode || (t.SignalChannelMode = {}));
        t.VideoCodecStr2Int = {
            H264: 0,
            H265: 1,
            VP8: 2,
            NEVC: 3
        };
        t.VideoCodecInt2Str = {
            0: "H264",
            1: "H265",
            2: "VP8",
            3: "NEVC"
        }
    }, function(e, t, r) {
        window,
        e.exports = function(e) {
            var t = {};

            function r(i) {
                if (t[i]) return t[i].exports;
                var n = t[i] = {
                    i: i,
                    l: !1,
                    exports: {}
                };
                return e[i].call(n.exports, n, n.exports, r), n.l = !0, n.exports
            }
            return r.m = e, r.c = t, r.d = function(e, t, i) {
                r.o(e, t) || Object.defineProperty(e, t, {
                    enumerable: !0,
                    get: i
                })
            }, r.r = function(e) {
                "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                }), Object.defineProperty(e, "__esModule", {
                    value: !0
                })
            }, r.t = function(e, t) {
                if (1 & t && (e = r(e)), 8 & t) return e;
                if (4 & t && "object" == typeof e && e && e.__esModule) return e;
                var i = Object.create(null);
                if (r.r(i), Object.defineProperty(i, "default", {
                        enumerable: !0,
                        value: e
                    }), 2 & t && "string" != typeof e)
                    for (var n in e) r.d(i, n, function(t) {
                        return e[t]
                    }.bind(null, n));
                return i
            }, r.n = function(e) {
                var t = e && e.__esModule ? function() {
                    return e.default
                } : function() {
                    return e
                };
                return r.d(t, "a", t), t
            }, r.o = function(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            }, r.p = "", r(r.s = 106)
        }([function(e, t, r) {
            "use strict";
            var i = r(3),
                n = r(27).f,
                o = r(74),
                s = r(9),
                a = r(12),
                d = r(14),
                c = r(13),
                u = function(e) {
                    var t = function(t, r, i) {
                        if (this instanceof e) {
                            switch (arguments.length) {
                                case 0:
                                    return new e;
                                case 1:
                                    return new e(t);
                                case 2:
                                    return new e(t, r)
                            }
                            return new e(t, r, i)
                        }
                        return e.apply(this, arguments)
                    };
                    return t.prototype = e.prototype, t
                };
            e.exports = function(e, t) {
                var r, l, p, f, h, m, g, v, y = e.target,
                    _ = e.global,
                    S = e.stat,
                    b = e.proto,
                    R = _ ? i : S ? i[y] : (i[y] || {}).prototype,
                    w = _ ? s : s[y] || (s[y] = {}),
                    T = w.prototype;
                for (p in t) r = !o(_ ? p : y + (S ? "." : "#") + p, e.forced) && R && c(R, p), h = w[p], r && (m = e.noTargetGet ? (v = n(R, p)) && v.value : R[p]), f = r && m ? m : t[p], r && typeof h == typeof f || (g = e.bind && r ? a(f, i) : e.wrap && r ? u(f) : b && "function" == typeof f ? a(Function.call, f) : f, (e.sham || f && f.sham || h && h.sham) && d(g, "sham", !0), w[p] = g, b && (c(s, l = y + "Prototype") || d(s, l, {}), s[l][p] = f, e.real && T && !T[p] && d(T, p, f)))
            }
        }, function(e, t, r) {
            var i = r(10);
            e.exports = function(e) {
                if (!i(e)) throw TypeError(String(e) + " is not an object");
                return e
            }
        }, function(e, t) {
            e.exports = !0
        }, function(e, t, r) {
            (function(t) {
                var r = function(e) {
                    return e && e.Math == Math && e
                };
                e.exports = r("object" == typeof globalThis && globalThis) || r("object" == typeof window && window) || r("object" == typeof self && self) || r("object" == typeof t && t) || function() {
                    return this
                }() || Function("return this")()
            }).call(this, r(110))
        }, function(e, t, r) {
            var i = r(1),
                n = r(116),
                o = r(29),
                s = r(12),
                a = r(82),
                d = r(117),
                c = function(e, t) {
                    this.stopped = e, this.result = t
                };
            e.exports = function(e, t, r) {
                var u, l, p, f, h, m, g, v = r && r.that,
                    y = !(!r || !r.AS_ENTRIES),
                    _ = !(!r || !r.IS_ITERATOR),
                    S = !(!r || !r.INTERRUPTED),
                    b = s(t, v, 1 + y + S),
                    R = function(e) {
                        return u && d(u), new c(!0, e)
                    },
                    w = function(e) {
                        return y ? (i(e), S ? b(e[0], e[1], R) : b(e[0], e[1])) : S ? b(e, R) : b(e)
                    };
                if (_) u = e;
                else {
                    if ("function" != typeof(l = a(e))) throw TypeError("Target is not iterable");
                    if (n(l)) {
                        for (p = 0, f = o(e.length); f > p; p++)
                            if ((h = w(e[p])) && h instanceof c) return h;
                        return new c(!1)
                    }
                    u = l.call(e)
                }
                for (m = u.next; !(g = m.call(u)).done;) {
                    try {
                        h = w(g.value)
                    } catch (e) {
                        throw d(u), e
                    }
                    if ("object" == typeof h && h && h instanceof c) return h
                }
                return new c(!1)
            }
        }, function(e, t, r) {
            var i = r(9),
                n = r(13),
                o = r(68),
                s = r(15).f;
            e.exports = function(e) {
                var t = i.Symbol || (i.Symbol = {});
                n(t, e) || s(t, e, {
                    value: o.f(e)
                })
            }
        }, function(e, t, r) {
            var i = r(3),
                n = r(53),
                o = r(13),
                s = r(40),
                a = r(58),
                d = r(81),
                c = n("wks"),
                u = i.Symbol,
                l = d ? u : u && u.withoutSetter || s;
            e.exports = function(e) {
                return o(c, e) && (a || "string" == typeof c[e]) || (a && o(u, e) ? c[e] = u[e] : c[e] = l("Symbol." + e)), c[e]
            }
        }, function(e, t) {
            e.exports = function(e) {
                try {
                    return !!e()
                } catch (e) {
                    return !0
                }
            }
        }, function(e, t) {
            e.exports = function(e) {
                if ("function" != typeof e) throw TypeError(String(e) + " is not a function");
                return e
            }
        }, function(e, t) {
            e.exports = {}
        }, function(e, t) {
            e.exports = function(e) {
                return "object" == typeof e ? null !== e : "function" == typeof e
            }
        }, function(e, t, r) {
            var i = r(7);
            e.exports = !i((function() {
                return 7 != Object.defineProperty({}, 1, {
                    get: function() {
                        return 7
                    }
                })[1]
            }))
        }, function(e, t, r) {
            var i = r(8);
            e.exports = function(e, t, r) {
                if (i(e), void 0 === t) return e;
                switch (r) {
                    case 0:
                        return function() {
                            return e.call(t)
                        };
                    case 1:
                        return function(r) {
                            return e.call(t, r)
                        };
                    case 2:
                        return function(r, i) {
                            return e.call(t, r, i)
                        };
                    case 3:
                        return function(r, i, n) {
                            return e.call(t, r, i, n)
                        }
                }
                return function() {
                    return e.apply(t, arguments)
                }
            }
        }, function(e, t, r) {
            var i = r(19),
                n = {}.hasOwnProperty;
            e.exports = Object.hasOwn || function(e, t) {
                return n.call(i(e), t)
            }
        }, function(e, t, r) {
            var i = r(11),
                n = r(15),
                o = r(22);
            e.exports = i ? function(e, t, r) {
                return n.f(e, t, o(1, r))
            } : function(e, t, r) {
                return e[t] = r, e
            }
        }, function(e, t, r) {
            var i = r(11),
                n = r(73),
                o = r(1),
                s = r(37),
                a = Object.defineProperty;
            t.f = i ? a : function(e, t, r) {
                if (o(e), t = s(t, !0), o(r), n) try {
                    return a(e, t, r)
                } catch (e) {}
                if ("get" in r || "set" in r) throw TypeError("Accessors not supported");
                return "value" in r && (e[t] = r.value), e
            }
        }, function(e, t, r) {
            var i = r(9),
                n = r(3),
                o = function(e) {
                    return "function" == typeof e ? e : void 0
                };
            e.exports = function(e, t) {
                return arguments.length < 2 ? o(i[e]) || o(n[e]) : i[e] && i[e][t] || n[e] && n[e][t]
            }
        }, function(e, t, r) {
            var i = r(2),
                n = r(224);
            e.exports = i ? n : function(e) {
                return Map.prototype.entries.call(e)
            }
        }, function(e, t, r) {
            var i = r(72),
                n = r(36);
            e.exports = function(e) {
                return i(n(e))
            }
        }, function(e, t, r) {
            var i = r(36);
            e.exports = function(e) {
                return Object(i(e))
            }
        }, function(e, t, r) {
            var i, n, o, s = r(89),
                a = r(3),
                d = r(10),
                c = r(14),
                u = r(13),
                l = r(54),
                p = r(39),
                f = r(30),
                h = a.WeakMap;
            if (s || l.state) {
                var m = l.state || (l.state = new h),
                    g = m.get,
                    v = m.has,
                    y = m.set;
                i = function(e, t) {
                    if (v.call(m, e)) throw new TypeError("Object already initialized");
                    return t.facade = e, y.call(m, e, t), t
                }, n = function(e) {
                    return g.call(m, e) || {}
                }, o = function(e) {
                    return v.call(m, e)
                }
            } else {
                var _ = p("state");
                f[_] = !0, i = function(e, t) {
                    if (u(e, _)) throw new TypeError("Object already initialized");
                    return t.facade = e, c(e, _, t), t
                }, n = function(e) {
                    return u(e, _) ? e[_] : {}
                }, o = function(e) {
                    return u(e, _)
                }
            }
            e.exports = {
                set: i,
                get: n,
                has: o,
                enforce: function(e) {
                    return o(e) ? n(e) : i(e, {})
                },
                getterFor: function(e) {
                    return function(t) {
                        var r;
                        if (!d(t) || (r = n(t)).type !== e) throw TypeError("Incompatible receiver, " + e + " required");
                        return r
                    }
                }
            }
        }, function(e, t, r) {
            var i = r(9);
            e.exports = function(e) {
                return i[e + "Prototype"]
            }
        }, function(e, t) {
            e.exports = function(e, t) {
                return {
                    enumerable: !(1 & e),
                    configurable: !(2 & e),
                    writable: !(4 & e),
                    value: t
                }
            }
        }, function(e, t) {
            e.exports = {}
        }, function(e, t, r) {
            var i = r(59),
                n = r(15).f,
                o = r(14),
                s = r(13),
                a = r(119),
                d = r(6)("toStringTag");
            e.exports = function(e, t, r, c) {
                if (e) {
                    var u = r ? e : e.prototype;
                    s(u, d) || n(u, d, {
                        configurable: !0,
                        value: t
                    }), c && !i && o(u, "toString", a)
                }
            }
        }, function(e, t, r) {
            var i = r(12),
                n = r(72),
                o = r(19),
                s = r(29),
                a = r(63),
                d = [].push,
                c = function(e) {
                    var t = 1 == e,
                        r = 2 == e,
                        c = 3 == e,
                        u = 4 == e,
                        l = 6 == e,
                        p = 7 == e,
                        f = 5 == e || l;
                    return function(h, m, g, v) {
                        for (var y, _, S = o(h), b = n(S), R = i(m, g, 3), w = s(b.length), T = 0, E = v || a, A = t ? E(h, w) : r || p ? E(h, 0) : void 0; w > T; T++)
                            if ((f || T in b) && (_ = R(y = b[T], T, S), e))
                                if (t) A[T] = _;
                                else if (_) switch (e) {
                            case 3:
                                return !0;
                            case 5:
                                return y;
                            case 6:
                                return T;
                            case 2:
                                d.call(A, y)
                        } else switch (e) {
                            case 4:
                                return !1;
                            case 7:
                                d.call(A, y)
                        }
                        return l ? -1 : c || u ? u : A
                    }
                };
            e.exports = {
                forEach: c(0),
                map: c(1),
                filter: c(2),
                some: c(3),
                every: c(4),
                find: c(5),
                findIndex: c(6),
                filterOut: c(7)
            }
        }, function(e, t, r) {
            e.exports = r(107)
        }, function(e, t, r) {
            var i = r(11),
                n = r(71),
                o = r(22),
                s = r(18),
                a = r(37),
                d = r(13),
                c = r(73),
                u = Object.getOwnPropertyDescriptor;
            t.f = i ? u : function(e, t) {
                if (e = s(e), t = a(t, !0), c) try {
                    return u(e, t)
                } catch (e) {}
                if (d(e, t)) return o(!n.f.call(e, t), e[t])
            }
        }, function(e, t) {
            var r = {}.toString;
            e.exports = function(e) {
                return r.call(e).slice(8, -1)
            }
        }, function(e, t, r) {
            var i = r(42),
                n = Math.min;
            e.exports = function(e) {
                return e > 0 ? n(i(e), 9007199254740991) : 0
            }
        }, function(e, t) {
            e.exports = {}
        }, function(e, t, r) {
            var i = r(14);
            e.exports = function(e, t, r, n) {
                n && n.enumerable ? e[t] = r : i(e, t, r)
            }
        }, function(e, t, r) {
            var i = r(1),
                n = r(8),
                o = r(6)("species");
            e.exports = function(e, t) {
                var r, s = i(e).constructor;
                return void 0 === s || null == (r = i(s)[o]) ? t : n(r)
            }
        }, function(e, t, r) {
            "use strict";
            var i = r(8),
                n = function(e) {
                    var t, r;
                    this.promise = new e((function(e, i) {
                        if (void 0 !== t || void 0 !== r) throw TypeError("Bad Promise constructor");
                        t = e, r = i
                    })), this.resolve = i(t), this.reject = i(r)
                };
            e.exports.f = function(e) {
                return new n(e)
            }
        }, function(e, t, r) {
            r(128);
            var i = r(129),
                n = r(3),
                o = r(45),
                s = r(14),
                a = r(23),
                d = r(6)("toStringTag");
            for (var c in i) {
                var u = n[c],
                    l = u && u.prototype;
                l && o(l) !== d && s(l, d, c), a[c] = a.Array
            }
        }, function(e, t) {
            e.exports = function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }, e.exports.default = e.exports, e.exports.__esModule = !0
        }, function(e, t) {
            e.exports = function(e) {
                if (null == e) throw TypeError("Can't call method on " + e);
                return e
            }
        }, function(e, t, r) {
            var i = r(10);
            e.exports = function(e, t) {
                if (!i(e)) return e;
                var r, n;
                if (t && "function" == typeof(r = e.toString) && !i(n = r.call(e))) return n;
                if ("function" == typeof(r = e.valueOf) && !i(n = r.call(e))) return n;
                if (!t && "function" == typeof(r = e.toString) && !i(n = r.call(e))) return n;
                throw TypeError("Can't convert object to primitive value")
            }
        }, function(e, t, r) {
            e.exports = r(111)
        }, function(e, t, r) {
            var i = r(53),
                n = r(40),
                o = i("keys");
            e.exports = function(e) {
                return o[e] || (o[e] = n(e))
            }
        }, function(e, t) {
            var r = 0,
                i = Math.random();
            e.exports = function(e) {
                return "Symbol(" + String(void 0 === e ? "" : e) + ")_" + (++r + i).toString(36)
            }
        }, function(e, t, r) {
            var i, n = r(1),
                o = r(76),
                s = r(57),
                a = r(30),
                d = r(80),
                c = r(51),
                u = r(39)("IE_PROTO"),
                l = function() {},
                p = function(e) {
                    return "<script>" + e + "<\/script>"
                },
                f = function() {
                    try {
                        i = document.domain && new ActiveXObject("htmlfile")
                    } catch (e) {}
                    var e, t;
                    f = i ? function(e) {
                        e.write(p("")), e.close();
                        var t = e.parentWindow.Object;
                        return e = null, t
                    }(i) : ((t = c("iframe")).style.display = "none", d.appendChild(t), t.src = String("javascript:"), (e = t.contentWindow.document).open(), e.write(p("document.F=Object")), e.close(), e.F);
                    for (var r = s.length; r--;) delete f.prototype[s[r]];
                    return f()
                };
            a[u] = !0, e.exports = Object.create || function(e, t) {
                var r;
                return null !== e ? (l.prototype = n(e), r = new l, l.prototype = null, r[u] = e) : r = f(), void 0 === t ? r : o(r, t)
            }
        }, function(e, t) {
            var r = Math.ceil,
                i = Math.floor;
            e.exports = function(e) {
                return isNaN(e = +e) ? 0 : (e > 0 ? i : r)(e)
            }
        }, function(e, t, r) {
            var i, n, o = r(3),
                s = r(44),
                a = o.process,
                d = a && a.versions,
                c = d && d.v8;
            c ? n = (i = c.split("."))[0] < 4 ? 1 : i[0] + i[1] : s && (!(i = s.match(/Edge\/(\d+)/)) || i[1] >= 74) && (i = s.match(/Chrome\/(\d+)/)) && (n = i[1]), e.exports = n && +n
        }, function(e, t, r) {
            var i = r(16);
            e.exports = i("navigator", "userAgent") || ""
        }, function(e, t, r) {
            var i = r(59),
                n = r(28),
                o = r(6)("toStringTag"),
                s = "Arguments" == n(function() {
                    return arguments
                }());
            e.exports = i ? n : function(e) {
                var t, r, i;
                return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof(r = function(e, t) {
                    try {
                        return e[t]
                    } catch (e) {}
                }(t = Object(e), o)) ? r : s ? n(t) : "Object" == (i = n(t)) && "function" == typeof t.callee ? "Arguments" : i
            }
        }, function(e, t) {}, function(e, t, r) {
            var i = r(31);
            e.exports = function(e, t, r) {
                for (var n in t) r && r.unsafe && e[n] ? e[n] = t[n] : i(e, n, t[n], r);
                return e
            }
        }, function(e, t) {
            e.exports = function(e, t, r) {
                if (!(e instanceof t)) throw TypeError("Incorrect " + (r ? r + " " : "") + "invocation");
                return e
            }
        }, function(e, t) {
            e.exports = function(e) {
                try {
                    return {
                        error: !1,
                        value: e()
                    }
                } catch (e) {
                    return {
                        error: !0,
                        value: e
                    }
                }
            }
        }, function(e, t, r) {
            var i = r(30),
                n = r(10),
                o = r(13),
                s = r(15).f,
                a = r(40),
                d = r(217),
                c = a("meta"),
                u = 0,
                l = Object.isExtensible || function() {
                    return !0
                },
                p = function(e) {
                    s(e, c, {
                        value: {
                            objectID: "O" + ++u,
                            weakData: {}
                        }
                    })
                },
                f = e.exports = {
                    REQUIRED: !1,
                    fastKey: function(e, t) {
                        if (!n(e)) return "symbol" == typeof e ? e : ("string" == typeof e ? "S" : "P") + e;
                        if (!o(e, c)) {
                            if (!l(e)) return "F";
                            if (!t) return "E";
                            p(e)
                        }
                        return e[c].objectID
                    },
                    getWeakData: function(e, t) {
                        if (!o(e, c)) {
                            if (!l(e)) return !0;
                            if (!t) return !1;
                            p(e)
                        }
                        return e[c].weakData
                    },
                    onFreeze: function(e) {
                        return d && f.REQUIRED && l(e) && !o(e, c) && p(e), e
                    }
                };
            i[c] = !0
        }, function(e, t, r) {
            var i = r(3),
                n = r(10),
                o = i.document,
                s = n(o) && n(o.createElement);
            e.exports = function(e) {
                return s ? o.createElement(e) : {}
            }
        }, function(e, t, r) {
            var i = r(13),
                n = r(19),
                o = r(39),
                s = r(114),
                a = o("IE_PROTO"),
                d = Object.prototype;
            e.exports = s ? Object.getPrototypeOf : function(e) {
                return e = n(e), i(e, a) ? e[a] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? d : null
            }
        }, function(e, t, r) {
            var i = r(2),
                n = r(54);
            (e.exports = function(e, t) {
                return n[e] || (n[e] = void 0 !== t ? t : {})
            })("versions", []).push({
                version: "3.13.1",
                mode: i ? "pure" : "global",
                copyright: "© 2021 Denis Pushkarev (zloirock.ru)"
            })
        }, function(e, t, r) {
            var i = r(3),
                n = r(113),
                o = i["__core-js_shared__"] || n("__core-js_shared__", {});
            e.exports = o
        }, function(e, t, r) {
            var i = r(1),
                n = r(115);
            e.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
                var e, t = !1,
                    r = {};
                try {
                    (e = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(r, []), t = r instanceof Array
                } catch (e) {}
                return function(r, o) {
                    return i(r), n(o), t ? e.call(r, o) : r.__proto__ = o, r
                }
            }() : void 0)
        }, function(e, t, r) {
            var i = r(77),
                n = r(57);
            e.exports = Object.keys || function(e) {
                return i(e, n)
            }
        }, function(e, t) {
            e.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"]
        }, function(e, t, r) {
            var i = r(43),
                n = r(7);
            e.exports = !!Object.getOwnPropertySymbols && !n((function() {
                var e = Symbol();
                return !String(e) || !(Object(e) instanceof Symbol) || !Symbol.sham && i && i < 41
            }))
        }, function(e, t, r) {
            var i = {};
            i[r(6)("toStringTag")] = "z", e.exports = "[object z]" === String(i)
        }, function(e, t, r) {
            var i = r(28),
                n = r(3);
            e.exports = "process" == i(n.process)
        }, function(e, t, r) {
            "use strict";
            var i = r(126).charAt,
                n = r(20),
                o = r(62),
                s = n.set,
                a = n.getterFor("String Iterator");
            o(String, "String", (function(e) {
                s(this, {
                    type: "String Iterator",
                    string: String(e),
                    index: 0
                })
            }), (function() {
                var e, t = a(this),
                    r = t.string,
                    n = t.index;
                return n >= r.length ? {
                    value: void 0,
                    done: !0
                } : (e = i(r, n), t.index += e.length, {
                    value: e,
                    done: !1
                })
            }))
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(127),
                o = r(52),
                s = r(55),
                a = r(24),
                d = r(14),
                c = r(31),
                u = r(6),
                l = r(2),
                p = r(23),
                f = r(92),
                h = f.IteratorPrototype,
                m = f.BUGGY_SAFARI_ITERATORS,
                g = u("iterator"),
                v = function() {
                    return this
                };
            e.exports = function(e, t, r, u, f, y, _) {
                n(r, t, u);
                var S, b, R, w = function(e) {
                        if (e === f && I) return I;
                        if (!m && e in A) return A[e];
                        switch (e) {
                            case "keys":
                            case "values":
                            case "entries":
                                return function() {
                                    return new r(this, e)
                                }
                        }
                        return function() {
                            return new r(this)
                        }
                    },
                    T = t + " Iterator",
                    E = !1,
                    A = e.prototype,
                    O = A[g] || A["@@iterator"] || f && A[f],
                    I = !m && O || w(f),
                    x = "Array" == t && A.entries || O;
                if (x && (S = o(x.call(new e)), h !== Object.prototype && S.next && (l || o(S) === h || (s ? s(S, h) : "function" != typeof S[g] && d(S, g, v)), a(S, T, !0, !0), l && (p[T] = v))), "values" == f && O && "values" !== O.name && (E = !0, I = function() {
                        return O.call(this)
                    }), l && !_ || A[g] === I || d(A, g, I), p[t] = I, f)
                    if (b = {
                            values: w("values"),
                            keys: y ? I : w("keys"),
                            entries: w("entries")
                        }, _)
                        for (R in b)(m || E || !(R in A)) && c(A, R, b[R]);
                    else i({
                        target: t,
                        proto: !0,
                        forced: m || E
                    }, b);
                return b
            }
        }, function(e, t, r) {
            var i = r(10),
                n = r(64),
                o = r(6)("species");
            e.exports = function(e, t) {
                var r;
                return n(e) && ("function" != typeof(r = e.constructor) || r !== Array && !n(r.prototype) ? i(r) && null === (r = r[o]) && (r = void 0) : r = void 0), new(void 0 === r ? Array : r)(0 === t ? 0 : t)
            }
        }, function(e, t, r) {
            var i = r(28);
            e.exports = Array.isArray || function(e) {
                return "Array" == i(e)
            }
        }, function(e, t, r) {
            "use strict";
            var i = r(37),
                n = r(15),
                o = r(22);
            e.exports = function(e, t, r) {
                var s = i(t);
                s in e ? n.f(e, s, o(0, r)) : e[s] = r
            }
        }, function(e, t, r) {
            var i = r(7),
                n = r(6),
                o = r(43),
                s = n("species");
            e.exports = function(e) {
                return o >= 51 || !i((function() {
                    var t = [];
                    return (t.constructor = {})[s] = function() {
                        return {
                            foo: 1
                        }
                    }, 1 !== t[e](Boolean).foo
                }))
            }
        }, function(e, t, r) {
            var i = r(77),
                n = r(57).concat("length", "prototype");
            t.f = Object.getOwnPropertyNames || function(e) {
                return i(e, n)
            }
        }, function(e, t, r) {
            var i = r(6);
            t.f = i
        }, function(e, t, r) {
            "use strict";
            var i = r(7);
            e.exports = function(e, t) {
                var r = [][e];
                return !!r && i((function() {
                    r.call(null, t || function() {
                        throw 1
                    }, 1)
                }))
            }
        }, function(e, t, r) {
            "use strict";
            var i = r(1);
            e.exports = function(e, t) {
                var r, n = i(this),
                    o = arguments.length > 2 ? arguments[2] : void 0;
                if ("function" != typeof t && "function" != typeof o) throw TypeError("At least one callback required");
                return n.has(e) ? (r = n.get(e), "function" == typeof t && (r = t(r), n.set(e, r))) : "function" == typeof o && (r = o(), n.set(e, r)), r
            }
        }, function(e, t, r) {
            "use strict";
            var i = {}.propertyIsEnumerable,
                n = Object.getOwnPropertyDescriptor,
                o = n && !i.call({
                    1: 2
                }, 1);
            t.f = o ? function(e) {
                var t = n(this, e);
                return !!t && t.enumerable
            } : i
        }, function(e, t, r) {
            var i = r(7),
                n = r(28),
                o = "".split;
            e.exports = i((function() {
                return !Object("z").propertyIsEnumerable(0)
            })) ? function(e) {
                return "String" == n(e) ? o.call(e, "") : Object(e)
            } : Object
        }, function(e, t, r) {
            var i = r(11),
                n = r(7),
                o = r(51);
            e.exports = !i && !n((function() {
                return 7 != Object.defineProperty(o("div"), "a", {
                    get: function() {
                        return 7
                    }
                }).a
            }))
        }, function(e, t, r) {
            var i = r(7),
                n = /#|\.prototype\./,
                o = function(e, t) {
                    var r = a[s(e)];
                    return r == c || r != d && ("function" == typeof t ? i(t) : !!t)
                },
                s = o.normalize = function(e) {
                    return String(e).replace(n, ".").toLowerCase()
                },
                a = o.data = {},
                d = o.NATIVE = "N",
                c = o.POLYFILL = "P";
            e.exports = o
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(52),
                o = r(55),
                s = r(41),
                a = r(14),
                d = r(22),
                c = r(4),
                u = function(e, t) {
                    var r = this;
                    if (!(r instanceof u)) return new u(e, t);
                    o && (r = o(new Error(void 0), n(r))), void 0 !== t && a(r, "message", String(t));
                    var i = [];
                    return c(e, i.push, {
                        that: i
                    }), a(r, "errors", i), r
                };
            u.prototype = s(Error.prototype, {
                constructor: d(5, u),
                message: d(5, ""),
                name: d(5, "AggregateError")
            }), i({
                global: !0
            }, {
                AggregateError: u
            })
        }, function(e, t, r) {
            var i = r(11),
                n = r(15),
                o = r(1),
                s = r(56);
            e.exports = i ? Object.defineProperties : function(e, t) {
                o(e);
                for (var r, i = s(t), a = i.length, d = 0; a > d;) n.f(e, r = i[d++], t[r]);
                return e
            }
        }, function(e, t, r) {
            var i = r(13),
                n = r(18),
                o = r(78).indexOf,
                s = r(30);
            e.exports = function(e, t) {
                var r, a = n(e),
                    d = 0,
                    c = [];
                for (r in a) !i(s, r) && i(a, r) && c.push(r);
                for (; t.length > d;) i(a, r = t[d++]) && (~o(c, r) || c.push(r));
                return c
            }
        }, function(e, t, r) {
            var i = r(18),
                n = r(29),
                o = r(79),
                s = function(e) {
                    return function(t, r, s) {
                        var a, d = i(t),
                            c = n(d.length),
                            u = o(s, c);
                        if (e && r != r) {
                            for (; c > u;)
                                if ((a = d[u++]) != a) return !0
                        } else
                            for (; c > u; u++)
                                if ((e || u in d) && d[u] === r) return e || u || 0;
                        return !e && -1
                    }
                };
            e.exports = {
                includes: s(!0),
                indexOf: s(!1)
            }
        }, function(e, t, r) {
            var i = r(42),
                n = Math.max,
                o = Math.min;
            e.exports = function(e, t) {
                var r = i(e);
                return r < 0 ? n(r + t, 0) : o(r, t)
            }
        }, function(e, t, r) {
            var i = r(16);
            e.exports = i("document", "documentElement")
        }, function(e, t, r) {
            var i = r(58);
            e.exports = i && !Symbol.sham && "symbol" == typeof Symbol.iterator
        }, function(e, t, r) {
            var i = r(45),
                n = r(23),
                o = r(6)("iterator");
            e.exports = function(e) {
                if (null != e) return e[o] || e["@@iterator"] || n[i(e)]
            }
        }, function(e, t, r) {
            var i = r(3);
            e.exports = i.Promise
        }, function(e, t, r) {
            "use strict";
            var i = r(16),
                n = r(15),
                o = r(6),
                s = r(11),
                a = o("species");
            e.exports = function(e) {
                var t = i(e),
                    r = n.f;
                s && t && !t[a] && r(t, a, {
                    configurable: !0,
                    get: function() {
                        return this
                    }
                })
            }
        }, function(e, t, r) {
            var i = r(54),
                n = Function.toString;
            "function" != typeof i.inspectSource && (i.inspectSource = function(e) {
                return n.call(e)
            }), e.exports = i.inspectSource
        }, function(e, t, r) {
            var i, n, o, s = r(3),
                a = r(7),
                d = r(12),
                c = r(80),
                u = r(51),
                l = r(87),
                p = r(60),
                f = s.location,
                h = s.setImmediate,
                m = s.clearImmediate,
                g = s.process,
                v = s.MessageChannel,
                y = s.Dispatch,
                _ = 0,
                S = {},
                b = function(e) {
                    if (S.hasOwnProperty(e)) {
                        var t = S[e];
                        delete S[e], t()
                    }
                },
                R = function(e) {
                    return function() {
                        b(e)
                    }
                },
                w = function(e) {
                    b(e.data)
                },
                T = function(e) {
                    s.postMessage(e + "", f.protocol + "//" + f.host)
                };
            h && m || (h = function(e) {
                for (var t = [], r = 1; arguments.length > r;) t.push(arguments[r++]);
                return S[++_] = function() {
                    ("function" == typeof e ? e : Function(e)).apply(void 0, t)
                }, i(_), _
            }, m = function(e) {
                delete S[e]
            }, p ? i = function(e) {
                g.nextTick(R(e))
            } : y && y.now ? i = function(e) {
                y.now(R(e))
            } : v && !l ? (o = (n = new v).port2, n.port1.onmessage = w, i = d(o.postMessage, o, 1)) : s.addEventListener && "function" == typeof postMessage && !s.importScripts && f && "file:" !== f.protocol && !a(T) ? (i = T, s.addEventListener("message", w, !1)) : i = "onreadystatechange" in u("script") ? function(e) {
                c.appendChild(u("script")).onreadystatechange = function() {
                    c.removeChild(this), b(e)
                }
            } : function(e) {
                setTimeout(R(e), 0)
            }), e.exports = {
                set: h,
                clear: m
            }
        }, function(e, t, r) {
            var i = r(44);
            e.exports = /(?:iphone|ipod|ipad).*applewebkit/i.test(i)
        }, function(e, t, r) {
            var i = r(1),
                n = r(10),
                o = r(33);
            e.exports = function(e, t) {
                if (i(e), n(t) && t.constructor === e) return t;
                var r = o.f(e);
                return (0, r.resolve)(t), r.promise
            }
        }, function(e, t, r) {
            var i = r(3),
                n = r(85),
                o = i.WeakMap;
            e.exports = "function" == typeof o && /native code/.test(n(o))
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(8),
                o = r(33),
                s = r(49),
                a = r(4);
            i({
                target: "Promise",
                stat: !0
            }, {
                allSettled: function(e) {
                    var t = this,
                        r = o.f(t),
                        i = r.resolve,
                        d = r.reject,
                        c = s((function() {
                            var r = n(t.resolve),
                                o = [],
                                s = 0,
                                d = 1;
                            a(e, (function(e) {
                                var n = s++,
                                    a = !1;
                                o.push(void 0), d++, r.call(t, e).then((function(e) {
                                    a || (a = !0, o[n] = {
                                        status: "fulfilled",
                                        value: e
                                    }, --d || i(o))
                                }), (function(e) {
                                    a || (a = !0, o[n] = {
                                        status: "rejected",
                                        reason: e
                                    }, --d || i(o))
                                }))
                            })), --d || i(o)
                        }));
                    return c.error && d(c.value), r.promise
                }
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(8),
                o = r(16),
                s = r(33),
                a = r(49),
                d = r(4);
            i({
                target: "Promise",
                stat: !0
            }, {
                any: function(e) {
                    var t = this,
                        r = s.f(t),
                        i = r.resolve,
                        c = r.reject,
                        u = a((function() {
                            var r = n(t.resolve),
                                s = [],
                                a = 0,
                                u = 1,
                                l = !1;
                            d(e, (function(e) {
                                var n = a++,
                                    d = !1;
                                s.push(void 0), u++, r.call(t, e).then((function(e) {
                                    d || l || (l = !0, i(e))
                                }), (function(e) {
                                    d || l || (d = !0, s[n] = e, --u || c(new(o("AggregateError"))(s, "No one promise resolved")))
                                }))
                            })), --u || c(new(o("AggregateError"))(s, "No one promise resolved"))
                        }));
                    return u.error && c(u.value), r.promise
                }
            })
        }, function(e, t, r) {
            "use strict";
            var i, n, o, s = r(7),
                a = r(52),
                d = r(14),
                c = r(13),
                u = r(6),
                l = r(2),
                p = u("iterator"),
                f = !1;
            [].keys && ("next" in (o = [].keys()) ? (n = a(a(o))) !== Object.prototype && (i = n) : f = !0);
            var h = null == i || s((function() {
                var e = {};
                return i[p].call(e) !== e
            }));
            h && (i = {}), l && !h || c(i, p) || d(i, p, (function() {
                return this
            })), e.exports = {
                IteratorPrototype: i,
                BUGGY_SAFARI_ITERATORS: f
            }
        }, function(e, t) {
            e.exports = function() {}
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(7),
                o = r(64),
                s = r(10),
                a = r(19),
                d = r(29),
                c = r(65),
                u = r(63),
                l = r(66),
                p = r(6),
                f = r(43),
                h = p("isConcatSpreadable"),
                m = f >= 51 || !n((function() {
                    var e = [];
                    return e[h] = !1, e.concat()[0] !== e
                })),
                g = l("concat"),
                v = function(e) {
                    if (!s(e)) return !1;
                    var t = e[h];
                    return void 0 !== t ? !!t : o(e)
                };
            i({
                target: "Array",
                proto: !0,
                forced: !m || !g
            }, {
                concat: function(e) {
                    var t, r, i, n, o, s = a(this),
                        l = u(s, 0),
                        p = 0;
                    for (t = -1, i = arguments.length; t < i; t++)
                        if (v(o = -1 === t ? s : arguments[t])) {
                            if (p + (n = d(o.length)) > 9007199254740991) throw TypeError("Maximum allowed index exceeded");
                            for (r = 0; r < n; r++, p++) r in o && c(l, p, o[r])
                        } else {
                            if (p >= 9007199254740991) throw TypeError("Maximum allowed index exceeded");
                            c(l, p++, o)
                        } return l.length = p, l
                }
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(3),
                o = r(16),
                s = r(2),
                a = r(11),
                d = r(58),
                c = r(81),
                u = r(7),
                l = r(13),
                p = r(64),
                f = r(10),
                h = r(1),
                m = r(19),
                g = r(18),
                v = r(37),
                y = r(22),
                _ = r(41),
                S = r(56),
                b = r(67),
                R = r(147),
                w = r(96),
                T = r(27),
                E = r(15),
                A = r(71),
                O = r(14),
                I = r(31),
                x = r(53),
                P = r(39),
                k = r(30),
                C = r(40),
                D = r(6),
                M = r(68),
                N = r(5),
                L = r(24),
                j = r(20),
                F = r(25).forEach,
                V = P("hidden"),
                U = D("toPrimitive"),
                B = j.set,
                H = j.getterFor("Symbol"),
                W = Object.prototype,
                $ = n.Symbol,
                z = o("JSON", "stringify"),
                q = T.f,
                G = E.f,
                J = R.f,
                Q = A.f,
                K = x("symbols"),
                Y = x("op-symbols"),
                X = x("string-to-symbol-registry"),
                Z = x("symbol-to-string-registry"),
                ee = x("wks"),
                te = n.QObject,
                re = !te || !te.prototype || !te.prototype.findChild,
                ie = a && u((function() {
                    return 7 != _(G({}, "a", {
                        get: function() {
                            return G(this, "a", {
                                value: 7
                            }).a
                        }
                    })).a
                })) ? function(e, t, r) {
                    var i = q(W, t);
                    i && delete W[t], G(e, t, r), i && e !== W && G(W, t, i)
                } : G,
                ne = function(e, t) {
                    var r = K[e] = _($.prototype);
                    return B(r, {
                        type: "Symbol",
                        tag: e,
                        description: t
                    }), a || (r.description = t), r
                },
                oe = c ? function(e) {
                    return "symbol" == typeof e
                } : function(e) {
                    return Object(e) instanceof $
                },
                se = function(e, t, r) {
                    e === W && se(Y, t, r), h(e);
                    var i = v(t, !0);
                    return h(r), l(K, i) ? (r.enumerable ? (l(e, V) && e[V][i] && (e[V][i] = !1), r = _(r, {
                        enumerable: y(0, !1)
                    })) : (l(e, V) || G(e, V, y(1, {})), e[V][i] = !0), ie(e, i, r)) : G(e, i, r)
                },
                ae = function(e, t) {
                    h(e);
                    var r = g(t),
                        i = S(r).concat(le(r));
                    return F(i, (function(t) {
                        a && !de.call(r, t) || se(e, t, r[t])
                    })), e
                },
                de = function(e) {
                    var t = v(e, !0),
                        r = Q.call(this, t);
                    return !(this === W && l(K, t) && !l(Y, t)) && (!(r || !l(this, t) || !l(K, t) || l(this, V) && this[V][t]) || r)
                },
                ce = function(e, t) {
                    var r = g(e),
                        i = v(t, !0);
                    if (r !== W || !l(K, i) || l(Y, i)) {
                        var n = q(r, i);
                        return !n || !l(K, i) || l(r, V) && r[V][i] || (n.enumerable = !0), n
                    }
                },
                ue = function(e) {
                    var t = J(g(e)),
                        r = [];
                    return F(t, (function(e) {
                        l(K, e) || l(k, e) || r.push(e)
                    })), r
                },
                le = function(e) {
                    var t = e === W,
                        r = J(t ? Y : g(e)),
                        i = [];
                    return F(r, (function(e) {
                        !l(K, e) || t && !l(W, e) || i.push(K[e])
                    })), i
                };
            d || (I(($ = function() {
                if (this instanceof $) throw TypeError("Symbol is not a constructor");
                var e = arguments.length && void 0 !== arguments[0] ? String(arguments[0]) : void 0,
                    t = C(e),
                    r = function(e) {
                        this === W && r.call(Y, e), l(this, V) && l(this[V], t) && (this[V][t] = !1), ie(this, t, y(1, e))
                    };
                return a && re && ie(W, t, {
                    configurable: !0,
                    set: r
                }), ne(t, e)
            }).prototype, "toString", (function() {
                return H(this).tag
            })), I($, "withoutSetter", (function(e) {
                return ne(C(e), e)
            })), A.f = de, E.f = se, T.f = ce, b.f = R.f = ue, w.f = le, M.f = function(e) {
                return ne(D(e), e)
            }, a && (G($.prototype, "description", {
                configurable: !0,
                get: function() {
                    return H(this).description
                }
            }), s || I(W, "propertyIsEnumerable", de, {
                unsafe: !0
            }))), i({
                global: !0,
                wrap: !0,
                forced: !d,
                sham: !d
            }, {
                Symbol: $
            }), F(S(ee), (function(e) {
                N(e)
            })), i({
                target: "Symbol",
                stat: !0,
                forced: !d
            }, {
                for: function(e) {
                    var t = String(e);
                    if (l(X, t)) return X[t];
                    var r = $(t);
                    return X[t] = r, Z[r] = t, r
                },
                keyFor: function(e) {
                    if (!oe(e)) throw TypeError(e + " is not a symbol");
                    if (l(Z, e)) return Z[e]
                },
                useSetter: function() {
                    re = !0
                },
                useSimple: function() {
                    re = !1
                }
            }), i({
                target: "Object",
                stat: !0,
                forced: !d,
                sham: !a
            }, {
                create: function(e, t) {
                    return void 0 === t ? _(e) : ae(_(e), t)
                },
                defineProperty: se,
                defineProperties: ae,
                getOwnPropertyDescriptor: ce
            }), i({
                target: "Object",
                stat: !0,
                forced: !d
            }, {
                getOwnPropertyNames: ue,
                getOwnPropertySymbols: le
            }), i({
                target: "Object",
                stat: !0,
                forced: u((function() {
                    w.f(1)
                }))
            }, {
                getOwnPropertySymbols: function(e) {
                    return w.f(m(e))
                }
            }), z && i({
                target: "JSON",
                stat: !0,
                forced: !d || u((function() {
                    var e = $();
                    return "[null]" != z([e]) || "{}" != z({
                        a: e
                    }) || "{}" != z(Object(e))
                }))
            }, {
                stringify: function(e, t, r) {
                    for (var i, n = [e], o = 1; arguments.length > o;) n.push(arguments[o++]);
                    if (i = t, (f(t) || void 0 !== e) && !oe(e)) return p(t) || (t = function(e, t) {
                        if ("function" == typeof i && (t = i.call(this, e, t)), !oe(t)) return t
                    }), n[1] = t, z.apply(null, n)
                }
            }), $.prototype[U] || O($.prototype, U, $.prototype.valueOf), L($, "Symbol"), k[V] = !0
        }, function(e, t) {
            t.f = Object.getOwnPropertySymbols
        }, function(e, t, r) {
            r(5)("iterator")
        }, function(e, t, r) {
            e.exports = r(174)
        }, function(e, t, r) {
            e.exports = r(182)
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(3),
                o = r(50),
                s = r(7),
                a = r(14),
                d = r(4),
                c = r(48),
                u = r(10),
                l = r(24),
                p = r(15).f,
                f = r(25).forEach,
                h = r(11),
                m = r(20),
                g = m.set,
                v = m.getterFor;
            e.exports = function(e, t, r) {
                var m, y = -1 !== e.indexOf("Map"),
                    _ = -1 !== e.indexOf("Weak"),
                    S = y ? "set" : "add",
                    b = n[e],
                    R = b && b.prototype,
                    w = {};
                if (h && "function" == typeof b && (_ || R.forEach && !s((function() {
                        (new b).entries().next()
                    })))) {
                    m = t((function(t, r) {
                        g(c(t, m, e), {
                            type: e,
                            collection: new b
                        }), null != r && d(r, t[S], {
                            that: t,
                            AS_ENTRIES: y
                        })
                    }));
                    var T = v(e);
                    f(["add", "clear", "delete", "forEach", "get", "has", "set", "keys", "values", "entries"], (function(e) {
                        var t = "add" == e || "set" == e;
                        !(e in R) || _ && "clear" == e || a(m.prototype, e, (function(r, i) {
                            var n = T(this).collection;
                            if (!t && _ && !u(r)) return "get" == e && void 0;
                            var o = n[e](0 === r ? 0 : r, i);
                            return t ? this : o
                        }))
                    })), _ || p(m.prototype, "size", {
                        configurable: !0,
                        get: function() {
                            return T(this).collection.size
                        }
                    })
                } else m = r.getConstructor(t, e, y, S), o.REQUIRED = !0;
                return l(m, e, !1, !0), w[e] = m, i({
                    global: !0,
                    forced: !0
                }, w), _ || r.setStrong(m, e, y), m
            }
        }, function(e, t, r) {
            "use strict";
            var i = r(8),
                n = r(12),
                o = r(4);
            e.exports = function(e) {
                var t, r, s, a, d = arguments.length,
                    c = d > 1 ? arguments[1] : void 0;
                return i(this), (t = void 0 !== c) && i(c), null == e ? new this : (r = [], t ? (s = 0, a = n(c, d > 2 ? arguments[2] : void 0, 2), o(e, (function(e) {
                    r.push(a(e, s++))
                }))) : o(e, r.push, {
                    that: r
                }), new this(r))
            }
        }, function(e, t, r) {
            "use strict";
            e.exports = function() {
                for (var e = arguments.length, t = new Array(e); e--;) t[e] = arguments[e];
                return new this(t)
            }
        }, function(e, t, r) {
            "use strict";
            var i = r(1),
                n = r(8);
            e.exports = function() {
                for (var e, t = i(this), r = n(t.delete), o = !0, s = 0, a = arguments.length; s < a; s++) e = r.call(t, arguments[s]), o = o && e;
                return !!o
            }
        }, function(e, t, r) {
            "use strict";
            var i = r(1);
            e.exports = function(e, t) {
                var r = i(this),
                    n = r.has(e) && "update" in t ? t.update(r.get(e), e, r) : t.insert(e, r);
                return r.set(e, n), n
            }
        }, function(e, t, r) {
            e.exports = r(241)
        }, function(e, t, r) {
            "use strict";
            var i = r(35),
                n = i(r(26)),
                o = i(r(38)),
                s = i(r(134)),
                a = i(r(139));
            (0, n.default)(t, "__esModule", {
                value: !0
            });
            var d = function(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                }(r(143)),
                c = function() {
                    function e(e, t, r) {
                        if (void 0 === t && (t = 864e5), this.name = e, this.expire = t, this.onError = r, this.logQueue = [], this.addTimer = -1, this.onError = r || function() {}, "undefined" == typeof indexedDB || "undefined" == typeof IDBKeyRange || "undefined" == typeof Proxy) return this.onError("not support indexeddb or Proxy"), this.get = function() {
                            return o.default.resolve([])
                        }, this.delete = function() {
                            return o.default.resolve()
                        }, void(this.log = function() {});
                        this.db = new d.default(e, t)
                    }
                    return e.prototype.get = function(e) {
                        return this.db.getLogs(e)
                    }, e.prototype.delete = function(e) {
                        return this.db.deleteLogs(e)
                    }, e.prototype.log = function(e, t, r) {
                        var i, n = this,
                            o = {
                                time: +new Date,
                                level: e,
                                type: r,
                                logStr: t
                            };
                        this.logQueue.push(o), clearTimeout(this.addTimer), this.logQueue.length > 3e3 ? this.db.save((0, s.default)(i = this.logQueue).call(i, 0)) : this.addTimer = (0, a.default)((function() {
                            var e;
                            n.db.save((0, s.default)(e = n.logQueue).call(e, 0))
                        }), 2e3)
                    }, e
                }();
            t.default = c
        }, function(e, t, r) {
            var i = r(108);
            e.exports = i
        }, function(e, t, r) {
            r(109);
            var i = r(9).Object,
                n = e.exports = function(e, t, r) {
                    return i.defineProperty(e, t, r)
                };
            i.defineProperty.sham && (n.sham = !0)
        }, function(e, t, r) {
            var i = r(0),
                n = r(11);
            i({
                target: "Object",
                stat: !0,
                forced: !n,
                sham: !n
            }, {
                defineProperty: r(15).f
            })
        }, function(e, t) {
            var r;
            r = function() {
                return this
            }();
            try {
                r = r || new Function("return this")()
            } catch (e) {
                "object" == typeof window && (r = window)
            }
            e.exports = r
        }, function(e, t, r) {
            var i = r(112);
            r(130), r(131), r(132), r(133), e.exports = i
        }, function(e, t, r) {
            r(75), r(46), r(118), r(90), r(91), r(125), r(61), r(34);
            var i = r(9);
            e.exports = i.Promise
        }, function(e, t, r) {
            var i = r(3),
                n = r(14);
            e.exports = function(e, t) {
                try {
                    n(i, e, t)
                } catch (r) {
                    i[e] = t
                }
                return t
            }
        }, function(e, t, r) {
            var i = r(7);
            e.exports = !i((function() {
                function e() {}
                return e.prototype.constructor = null, Object.getPrototypeOf(new e) !== e.prototype
            }))
        }, function(e, t, r) {
            var i = r(10);
            e.exports = function(e) {
                if (!i(e) && null !== e) throw TypeError("Can't set " + String(e) + " as a prototype");
                return e
            }
        }, function(e, t, r) {
            var i = r(6),
                n = r(23),
                o = i("iterator"),
                s = Array.prototype;
            e.exports = function(e) {
                return void 0 !== e && (n.Array === e || s[o] === e)
            }
        }, function(e, t, r) {
            var i = r(1);
            e.exports = function(e) {
                var t = e.return;
                if (void 0 !== t) return i(t.call(e)).value
            }
        }, function(e, t, r) {
            "use strict";
            var i, n, o, s, a = r(0),
                d = r(2),
                c = r(3),
                u = r(16),
                l = r(83),
                p = r(31),
                f = r(47),
                h = r(55),
                m = r(24),
                g = r(84),
                v = r(10),
                y = r(8),
                _ = r(48),
                S = r(85),
                b = r(4),
                R = r(120),
                w = r(32),
                T = r(86).set,
                E = r(121),
                A = r(88),
                O = r(123),
                I = r(33),
                x = r(49),
                P = r(20),
                k = r(74),
                C = r(6),
                D = r(124),
                M = r(60),
                N = r(43),
                L = C("species"),
                j = "Promise",
                F = P.get,
                V = P.set,
                U = P.getterFor(j),
                B = l && l.prototype,
                H = l,
                W = B,
                $ = c.TypeError,
                z = c.document,
                q = c.process,
                G = I.f,
                J = G,
                Q = !!(z && z.createEvent && c.dispatchEvent),
                K = "function" == typeof PromiseRejectionEvent,
                Y = !1,
                X = k(j, (function() {
                    var e = S(H) !== String(H);
                    if (!e && 66 === N) return !0;
                    if (d && !W.finally) return !0;
                    if (N >= 51 && /native code/.test(H)) return !1;
                    var t = new H((function(e) {
                            e(1)
                        })),
                        r = function(e) {
                            e((function() {}), (function() {}))
                        };
                    return (t.constructor = {})[L] = r, !(Y = t.then((function() {})) instanceof r) || !e && D && !K
                })),
                Z = X || !R((function(e) {
                    H.all(e).catch((function() {}))
                })),
                ee = function(e) {
                    var t;
                    return !(!v(e) || "function" != typeof(t = e.then)) && t
                },
                te = function(e, t) {
                    if (!e.notified) {
                        e.notified = !0;
                        var r = e.reactions;
                        E((function() {
                            for (var i = e.value, n = 1 == e.state, o = 0; r.length > o;) {
                                var s, a, d, c = r[o++],
                                    u = n ? c.ok : c.fail,
                                    l = c.resolve,
                                    p = c.reject,
                                    f = c.domain;
                                try {
                                    u ? (n || (2 === e.rejection && oe(e), e.rejection = 1), !0 === u ? s = i : (f && f.enter(), s = u(i), f && (f.exit(), d = !0)), s === c.promise ? p($("Promise-chain cycle")) : (a = ee(s)) ? a.call(s, l, p) : l(s)) : p(i)
                                } catch (e) {
                                    f && !d && f.exit(), p(e)
                                }
                            }
                            e.reactions = [], e.notified = !1, t && !e.rejection && ie(e)
                        }))
                    }
                },
                re = function(e, t, r) {
                    var i, n;
                    Q ? ((i = z.createEvent("Event")).promise = t, i.reason = r, i.initEvent(e, !1, !0), c.dispatchEvent(i)) : i = {
                        promise: t,
                        reason: r
                    }, !K && (n = c["on" + e]) ? n(i) : "unhandledrejection" === e && O("Unhandled promise rejection", r)
                },
                ie = function(e) {
                    T.call(c, (function() {
                        var t, r = e.facade,
                            i = e.value;
                        if (ne(e) && (t = x((function() {
                                M ? q.emit("unhandledRejection", i, r) : re("unhandledrejection", r, i)
                            })), e.rejection = M || ne(e) ? 2 : 1, t.error)) throw t.value
                    }))
                },
                ne = function(e) {
                    return 1 !== e.rejection && !e.parent
                },
                oe = function(e) {
                    T.call(c, (function() {
                        var t = e.facade;
                        M ? q.emit("rejectionHandled", t) : re("rejectionhandled", t, e.value)
                    }))
                },
                se = function(e, t, r) {
                    return function(i) {
                        e(t, i, r)
                    }
                },
                ae = function(e, t, r) {
                    e.done || (e.done = !0, r && (e = r), e.value = t, e.state = 2, te(e, !0))
                },
                de = function(e, t, r) {
                    if (!e.done) {
                        e.done = !0, r && (e = r);
                        try {
                            if (e.facade === t) throw $("Promise can't be resolved itself");
                            var i = ee(t);
                            i ? E((function() {
                                var r = {
                                    done: !1
                                };
                                try {
                                    i.call(t, se(de, r, e), se(ae, r, e))
                                } catch (t) {
                                    ae(r, t, e)
                                }
                            })) : (e.value = t, e.state = 1, te(e, !1))
                        } catch (t) {
                            ae({
                                done: !1
                            }, t, e)
                        }
                    }
                };
            if (X && (W = (H = function(e) {
                    _(this, H, j), y(e), i.call(this);
                    var t = F(this);
                    try {
                        e(se(de, t), se(ae, t))
                    } catch (e) {
                        ae(t, e)
                    }
                }).prototype, (i = function(e) {
                    V(this, {
                        type: j,
                        done: !1,
                        notified: !1,
                        parent: !1,
                        reactions: [],
                        rejection: !1,
                        state: 0,
                        value: void 0
                    })
                }).prototype = f(W, {
                    then: function(e, t) {
                        var r = U(this),
                            i = G(w(this, H));
                        return i.ok = "function" != typeof e || e, i.fail = "function" == typeof t && t, i.domain = M ? q.domain : void 0, r.parent = !0, r.reactions.push(i), 0 != r.state && te(r, !1), i.promise
                    },
                    catch: function(e) {
                        return this.then(void 0, e)
                    }
                }), n = function() {
                    var e = new i,
                        t = F(e);
                    this.promise = e, this.resolve = se(de, t), this.reject = se(ae, t)
                }, I.f = G = function(e) {
                    return e === H || e === o ? new n(e) : J(e)
                }, !d && "function" == typeof l && B !== Object.prototype)) {
                s = B.then, Y || (p(B, "then", (function(e, t) {
                    var r = this;
                    return new H((function(e, t) {
                        s.call(r, e, t)
                    })).then(e, t)
                }), {
                    unsafe: !0
                }), p(B, "catch", W.catch, {
                    unsafe: !0
                }));
                try {
                    delete B.constructor
                } catch (e) {}
                h && h(B, W)
            }
            a({
                global: !0,
                wrap: !0,
                forced: X
            }, {
                Promise: H
            }), m(H, j, !1, !0), g(j), o = u(j), a({
                target: j,
                stat: !0,
                forced: X
            }, {
                reject: function(e) {
                    var t = G(this);
                    return t.reject.call(void 0, e), t.promise
                }
            }), a({
                target: j,
                stat: !0,
                forced: d || X
            }, {
                resolve: function(e) {
                    return A(d && this === o ? H : this, e)
                }
            }), a({
                target: j,
                stat: !0,
                forced: Z
            }, {
                all: function(e) {
                    var t = this,
                        r = G(t),
                        i = r.resolve,
                        n = r.reject,
                        o = x((function() {
                            var r = y(t.resolve),
                                o = [],
                                s = 0,
                                a = 1;
                            b(e, (function(e) {
                                var d = s++,
                                    c = !1;
                                o.push(void 0), a++, r.call(t, e).then((function(e) {
                                    c || (c = !0, o[d] = e, --a || i(o))
                                }), n)
                            })), --a || i(o)
                        }));
                    return o.error && n(o.value), r.promise
                },
                race: function(e) {
                    var t = this,
                        r = G(t),
                        i = r.reject,
                        n = x((function() {
                            var n = y(t.resolve);
                            b(e, (function(e) {
                                n.call(t, e).then(r.resolve, i)
                            }))
                        }));
                    return n.error && i(n.value), r.promise
                }
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(59),
                n = r(45);
            e.exports = i ? {}.toString : function() {
                return "[object " + n(this) + "]"
            }
        }, function(e, t, r) {
            var i = r(6)("iterator"),
                n = !1;
            try {
                var o = 0,
                    s = {
                        next: function() {
                            return {
                                done: !!o++
                            }
                        },
                        return: function() {
                            n = !0
                        }
                    };
                s[i] = function() {
                    return this
                }, Array.from(s, (function() {
                    throw 2
                }))
            } catch (e) {}
            e.exports = function(e, t) {
                if (!t && !n) return !1;
                var r = !1;
                try {
                    var o = {};
                    o[i] = function() {
                        return {
                            next: function() {
                                return {
                                    done: r = !0
                                }
                            }
                        }
                    }, e(o)
                } catch (e) {}
                return r
            }
        }, function(e, t, r) {
            var i, n, o, s, a, d, c, u, l = r(3),
                p = r(27).f,
                f = r(86).set,
                h = r(87),
                m = r(122),
                g = r(60),
                v = l.MutationObserver || l.WebKitMutationObserver,
                y = l.document,
                _ = l.process,
                S = l.Promise,
                b = p(l, "queueMicrotask"),
                R = b && b.value;
            R || (i = function() {
                var e, t;
                for (g && (e = _.domain) && e.exit(); n;) {
                    t = n.fn, n = n.next;
                    try {
                        t()
                    } catch (e) {
                        throw n ? s() : o = void 0, e
                    }
                }
                o = void 0, e && e.enter()
            }, h || g || m || !v || !y ? S && S.resolve ? ((c = S.resolve(void 0)).constructor = S, u = c.then, s = function() {
                u.call(c, i)
            }) : s = g ? function() {
                _.nextTick(i)
            } : function() {
                f.call(l, i)
            } : (a = !0, d = y.createTextNode(""), new v(i).observe(d, {
                characterData: !0
            }), s = function() {
                d.data = a = !a
            })), e.exports = R || function(e) {
                var t = {
                    fn: e,
                    next: void 0
                };
                o && (o.next = t), n || (n = t, s()), o = t
            }
        }, function(e, t, r) {
            var i = r(44);
            e.exports = /web0s(?!.*chrome)/i.test(i)
        }, function(e, t, r) {
            var i = r(3);
            e.exports = function(e, t) {
                var r = i.console;
                r && r.error && (1 === arguments.length ? r.error(e) : r.error(e, t))
            }
        }, function(e, t) {
            e.exports = "object" == typeof window
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(2),
                o = r(83),
                s = r(7),
                a = r(16),
                d = r(32),
                c = r(88),
                u = r(31);
            if (i({
                    target: "Promise",
                    proto: !0,
                    real: !0,
                    forced: !!o && s((function() {
                        o.prototype.finally.call({
                            then: function() {}
                        }, (function() {}))
                    }))
                }, {
                    finally: function(e) {
                        var t = d(this, a("Promise")),
                            r = "function" == typeof e;
                        return this.then(r ? function(r) {
                            return c(t, e()).then((function() {
                                return r
                            }))
                        } : e, r ? function(r) {
                            return c(t, e()).then((function() {
                                throw r
                            }))
                        } : e)
                    }
                }), !n && "function" == typeof o) {
                var l = a("Promise").prototype.finally;
                o.prototype.finally !== l && u(o.prototype, "finally", l, {
                    unsafe: !0
                })
            }
        }, function(e, t, r) {
            var i = r(42),
                n = r(36),
                o = function(e) {
                    return function(t, r) {
                        var o, s, a = String(n(t)),
                            d = i(r),
                            c = a.length;
                        return d < 0 || d >= c ? e ? "" : void 0 : (o = a.charCodeAt(d)) < 55296 || o > 56319 || d + 1 === c || (s = a.charCodeAt(d + 1)) < 56320 || s > 57343 ? e ? a.charAt(d) : o : e ? a.slice(d, d + 2) : s - 56320 + (o - 55296 << 10) + 65536
                    }
                };
            e.exports = {
                codeAt: o(!1),
                charAt: o(!0)
            }
        }, function(e, t, r) {
            "use strict";
            var i = r(92).IteratorPrototype,
                n = r(41),
                o = r(22),
                s = r(24),
                a = r(23),
                d = function() {
                    return this
                };
            e.exports = function(e, t, r) {
                var c = t + " Iterator";
                return e.prototype = n(i, {
                    next: o(1, r)
                }), s(e, c, !1, !0), a[c] = d, e
            }
        }, function(e, t, r) {
            "use strict";
            var i = r(18),
                n = r(93),
                o = r(23),
                s = r(20),
                a = r(62),
                d = s.set,
                c = s.getterFor("Array Iterator");
            e.exports = a(Array, "Array", (function(e, t) {
                d(this, {
                    type: "Array Iterator",
                    target: i(e),
                    index: 0,
                    kind: t
                })
            }), (function() {
                var e = c(this),
                    t = e.target,
                    r = e.kind,
                    i = e.index++;
                return !t || i >= t.length ? (e.target = void 0, {
                    value: void 0,
                    done: !0
                }) : "keys" == r ? {
                    value: i,
                    done: !1
                } : "values" == r ? {
                    value: t[i],
                    done: !1
                } : {
                    value: [i, t[i]],
                    done: !1
                }
            }), "values"), o.Arguments = o.Array, n("keys"), n("values"), n("entries")
        }, function(e, t) {
            e.exports = {
                CSSRuleList: 0,
                CSSStyleDeclaration: 0,
                CSSValueList: 0,
                ClientRectList: 0,
                DOMRectList: 0,
                DOMStringList: 0,
                DOMTokenList: 1,
                DataTransferItemList: 0,
                FileList: 0,
                HTMLAllCollection: 0,
                HTMLCollection: 0,
                HTMLFormElement: 0,
                HTMLSelectElement: 0,
                MediaList: 0,
                MimeTypeArray: 0,
                NamedNodeMap: 0,
                NodeList: 1,
                PaintRequestList: 0,
                Plugin: 0,
                PluginArray: 0,
                SVGLengthList: 0,
                SVGNumberList: 0,
                SVGPathSegList: 0,
                SVGPointList: 0,
                SVGStringList: 0,
                SVGTransformList: 0,
                SourceBufferList: 0,
                StyleSheetList: 0,
                TextTrackCueList: 0,
                TextTrackList: 0,
                TouchList: 0
            }
        }, function(e, t, r) {
            r(75)
        }, function(e, t, r) {
            r(90)
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(33),
                o = r(49);
            i({
                target: "Promise",
                stat: !0
            }, {
                try: function(e) {
                    var t = n.f(this),
                        r = o(e);
                    return (r.error ? t.reject : t.resolve)(r.value), t.promise
                }
            })
        }, function(e, t, r) {
            r(91)
        }, function(e, t, r) {
            e.exports = r(135)
        }, function(e, t, r) {
            var i = r(136);
            e.exports = i
        }, function(e, t, r) {
            var i = r(137),
                n = Array.prototype;
            e.exports = function(e) {
                var t = e.splice;
                return e === n || e instanceof Array && t === n.splice ? i : t
            }
        }, function(e, t, r) {
            r(138);
            var i = r(21);
            e.exports = i("Array").splice
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(79),
                o = r(42),
                s = r(29),
                a = r(19),
                d = r(63),
                c = r(65),
                u = r(66)("splice"),
                l = Math.max,
                p = Math.min;
            i({
                target: "Array",
                proto: !0,
                forced: !u
            }, {
                splice: function(e, t) {
                    var r, i, u, f, h, m, g = a(this),
                        v = s(g.length),
                        y = n(e, v),
                        _ = arguments.length;
                    if (0 === _ ? r = i = 0 : 1 === _ ? (r = 0, i = v - y) : (r = _ - 2, i = p(l(o(t), 0), v - y)), v + r - i > 9007199254740991) throw TypeError("Maximum allowed length exceeded");
                    for (u = d(g, i), f = 0; f < i; f++)(h = y + f) in g && c(u, f, g[h]);
                    if (u.length = i, r < i) {
                        for (f = y; f < v - i; f++) m = f + r, (h = f + i) in g ? g[m] = g[h] : delete g[m];
                        for (f = v; f > v - i + r; f--) delete g[f - 1]
                    } else if (r > i)
                        for (f = v - i; f > y; f--) m = f + r - 1, (h = f + i - 1) in g ? g[m] = g[h] : delete g[m];
                    for (f = 0; f < r; f++) g[f + y] = arguments[f + 2];
                    return g.length = v - i + r, u
                }
            })
        }, function(e, t, r) {
            e.exports = r(140)
        }, function(e, t, r) {
            var i = r(141);
            e.exports = i
        }, function(e, t, r) {
            r(142);
            var i = r(9);
            e.exports = i.setTimeout
        }, function(e, t, r) {
            var i = r(0),
                n = r(3),
                o = r(44),
                s = [].slice,
                a = function(e) {
                    return function(t, r) {
                        var i = arguments.length > 2,
                            n = i ? s.call(arguments, 2) : void 0;
                        return e(i ? function() {
                            ("function" == typeof t ? t : Function(t)).apply(this, n)
                        } : t, r)
                    }
                };
            i({
                global: !0,
                bind: !0,
                forced: /MSIE .\./.test(o)
            }, {
                setTimeout: a(n.setTimeout),
                setInterval: a(n.setInterval)
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(35),
                n = i(r(38)),
                o = i(r(144)),
                s = i(r(171)),
                a = i(r(26)),
                d = i(r(98)),
                c = i(r(178)),
                u = i(r(99)),
                l = function(e, t, r, i) {
                    return new(r || (r = n.default))((function(n, o) {
                        function s(e) {
                            try {
                                d(i.next(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function a(e) {
                            try {
                                d(i.throw(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function d(e) {
                            var t;
                            e.done ? n(e.value) : (t = e.value, t instanceof r ? t : new r((function(e) {
                                e(t)
                            }))).then(s, a)
                        }
                        d((i = i.apply(e, t || [])).next())
                    }))
                },
                p = function(e, t) {
                    var r, i, n, a, d = {
                        label: 0,
                        sent: function() {
                            if (1 & n[0]) throw n[1];
                            return n[1]
                        },
                        trys: [],
                        ops: []
                    };
                    return a = {
                        next: c(0),
                        throw: c(1),
                        return: c(2)
                    }, "function" == typeof o.default && (a[s.default] = function() {
                        return this
                    }), a;

                    function c(o) {
                        return function(s) {
                            return function(o) {
                                if (r) throw new TypeError("Generator is already executing.");
                                for (; d;) try {
                                    if (r = 1, i && (n = 2 & o[0] ? i.return : o[0] ? i.throw || ((n = i.return) && n.call(i), 0) : i.next) && !(n = n.call(i, o[1])).done) return n;
                                    switch (i = 0, n && (o = [2 & o[0], n.value]), o[0]) {
                                        case 0:
                                        case 1:
                                            n = o;
                                            break;
                                        case 4:
                                            return d.label++, {
                                                value: o[1],
                                                done: !1
                                            };
                                        case 5:
                                            d.label++, i = o[1], o = [0];
                                            continue;
                                        case 7:
                                            o = d.ops.pop(), d.trys.pop();
                                            continue;
                                        default:
                                            if (!((n = (n = d.trys).length > 0 && n[n.length - 1]) || 6 !== o[0] && 2 !== o[0])) {
                                                d = 0;
                                                continue
                                            }
                                            if (3 === o[0] && (!n || o[1] > n[0] && o[1] < n[3])) {
                                                d.label = o[1];
                                                break
                                            }
                                            if (6 === o[0] && d.label < n[1]) {
                                                d.label = n[1], n = o;
                                                break
                                            }
                                            if (n && d.label < n[2]) {
                                                d.label = n[2], d.ops.push(o);
                                                break
                                            }
                                            n[2] && d.ops.pop(), d.trys.pop();
                                            continue
                                    }
                                    o = t.call(e, d)
                                } catch (e) {
                                    o = [6, e], i = 0
                                } finally {
                                    r = n = 0
                                }
                                if (5 & o[0]) throw o[1];
                                return {
                                    value: o[0] ? o[1] : void 0,
                                    done: !0
                                }
                            }([o, s])
                        }
                    }
                };
            (0, a.default)(t, "__esModule", {
                value: !0
            });
            var f = r(188),
                h = function() {
                    function e(e, t) {
                        void 0 === t && (t = 86400), this.name = e, this.expire = t, this.dbVersion = 2, this.name = e, this.expire = t, this.dbPromise = this.initDB()
                    }
                    return e.prototype.initDB = function() {
                        return f.openDB(this.name, this.dbVersion, {
                            upgrade: function(e, t, r, i) {
                                if (1 === t) try {
                                    e.deleteObjectStore("log_detail")
                                } catch (e) {}
                                e.createObjectStore("log_detail", {
                                    keyPath: "id",
                                    autoIncrement: !0
                                }).createIndex("time", "time")
                            }
                        })
                    }, e.prototype.getLogs = function(e) {
                        return l(this, void 0, void 0, (function() {
                            var t, r, i, o, s, a, c, u;
                            return p(this, (function(l) {
                                switch (l.label) {
                                    case 0:
                                        return t = [], [4, this.dbPromise];
                                    case 1:
                                        return r = l.sent(), i = f.unwrap(r).transaction("log_detail", "readonly").objectStore("log_detail"), o = function(e) {
                                            var t = e.end,
                                                r = e.start,
                                                i = e.type,
                                                n = e.level,
                                                o = IDBKeyRange.bound(r || 0, t || +new Date),
                                                s = function(e) {
                                                    return !0
                                                },
                                                a = 0;
                                            switch (i && (a += 2), n && (a += 1), a) {
                                                case 1:
                                                    s = function(e) {
                                                        return e.level === n
                                                    };
                                                    break;
                                                case 2:
                                                    s = function(e) {
                                                        return e.type === i
                                                    };
                                                    break;
                                                case 3:
                                                    s = function(e) {
                                                        return e.type === i && e.level === n
                                                    }
                                            }
                                            return {
                                                indexName: "time",
                                                filter: s,
                                                keyRange: o
                                            }
                                        }(e), s = o.indexName, a = o.keyRange, c = (0, d.default)(o), u = i.index(s).openCursor(a), [2, new n.default((function(e, r) {
                                            u.onsuccess = function(r) {
                                                var i = r.target.result;
                                                i ? (c(i.value) && t.push(i.value), i.continue()) : e(t)
                                            }, u.onerror = function(e) {
                                                r(e)
                                            }
                                        }))]
                                }
                            }))
                        }))
                    }, e.prototype.deleteLogs = function(e) {
                        return l(this, void 0, void 0, (function() {
                            var t, r, i, o, s;
                            return p(this, (function(a) {
                                switch (a.label) {
                                    case 0:
                                        return [4, this.dbPromise];
                                    case 1:
                                        return t = a.sent(), r = f.unwrap(t).transaction("log_detail", "readwrite").objectStore("log_detail"), i = e.start, o = e.end, s = r.index("time").openKeyCursor(IDBKeyRange.bound(i, o)), [2, new n.default((function(e, t) {
                                            s.onsuccess = function() {
                                                var t = s.result;
                                                t ? (r.delete(t.primaryKey), t.continue()) : e(null)
                                            }, s.onerror = function(e) {
                                                t(e)
                                            }
                                        }))]
                                }
                            }))
                        }))
                    }, e.prototype.save = function(e) {
                        return l(this, void 0, void 0, (function() {
                            var t, r;
                            return p(this, (function(i) {
                                switch (i.label) {
                                    case 0:
                                        return [4, this.dbPromise];
                                    case 1:
                                        return t = i.sent(), r = [], [2, this.deleteLogs({
                                            start: 0,
                                            end: (0, c.default)() - this.expire
                                        }).then((function() {
                                            var i = t.transaction("log_detail", "readwrite").objectStore("log_detail");
                                            return (0, u.default)(e).call(e, (function(e) {
                                                r.push(i.put(e))
                                            })), n.default.all(r)
                                        }))]
                                }
                            }))
                        }))
                    }, e
                }();
            t.default = h
        }, function(e, t, r) {
            e.exports = r(145)
        }, function(e, t, r) {
            var i = r(146);
            r(164), r(165), r(166), r(167), r(168), r(169), r(170), e.exports = i
        }, function(e, t, r) {
            r(94), r(46), r(95), r(148), r(149), r(150), r(151), r(97), r(152), r(153), r(154), r(155), r(156), r(157), r(158), r(159), r(160), r(161), r(162), r(163);
            var i = r(9);
            e.exports = i.Symbol
        }, function(e, t, r) {
            var i = r(18),
                n = r(67).f,
                o = {}.toString,
                s = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
            e.exports.f = function(e) {
                return s && "[object Window]" == o.call(e) ? function(e) {
                    try {
                        return n(e)
                    } catch (e) {
                        return s.slice()
                    }
                }(e) : n(i(e))
            }
        }, function(e, t, r) {
            r(5)("asyncIterator")
        }, function(e, t) {}, function(e, t, r) {
            r(5)("hasInstance")
        }, function(e, t, r) {
            r(5)("isConcatSpreadable")
        }, function(e, t, r) {
            r(5)("match")
        }, function(e, t, r) {
            r(5)("matchAll")
        }, function(e, t, r) {
            r(5)("replace")
        }, function(e, t, r) {
            r(5)("search")
        }, function(e, t, r) {
            r(5)("species")
        }, function(e, t, r) {
            r(5)("split")
        }, function(e, t, r) {
            r(5)("toPrimitive")
        }, function(e, t, r) {
            r(5)("toStringTag")
        }, function(e, t, r) {
            r(5)("unscopables")
        }, function(e, t, r) {
            var i = r(3);
            r(24)(i.JSON, "JSON", !0)
        }, function(e, t) {}, function(e, t) {}, function(e, t, r) {
            r(5)("asyncDispose")
        }, function(e, t, r) {
            r(5)("dispose")
        }, function(e, t, r) {
            r(5)("matcher")
        }, function(e, t, r) {
            r(5)("metadata")
        }, function(e, t, r) {
            r(5)("observable")
        }, function(e, t, r) {
            r(5)("patternMatch")
        }, function(e, t, r) {
            r(5)("replaceAll")
        }, function(e, t, r) {
            e.exports = r(172)
        }, function(e, t, r) {
            var i = r(173);
            e.exports = i
        }, function(e, t, r) {
            r(97), r(61), r(34);
            var i = r(68);
            e.exports = i.f("iterator")
        }, function(e, t, r) {
            var i = r(175);
            e.exports = i
        }, function(e, t, r) {
            var i = r(176),
                n = Array.prototype;
            e.exports = function(e) {
                var t = e.filter;
                return e === n || e instanceof Array && t === n.filter ? i : t
            }
        }, function(e, t, r) {
            r(177);
            var i = r(21);
            e.exports = i("Array").filter
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(25).filter;
            i({
                target: "Array",
                proto: !0,
                forced: !r(66)("filter")
            }, {
                filter: function(e) {
                    return n(this, e, arguments.length > 1 ? arguments[1] : void 0)
                }
            })
        }, function(e, t, r) {
            e.exports = r(179)
        }, function(e, t, r) {
            var i = r(180);
            e.exports = i
        }, function(e, t, r) {
            r(181);
            var i = r(9);
            e.exports = i.Date.now
        }, function(e, t, r) {
            r(0)({
                target: "Date",
                stat: !0
            }, {
                now: function() {
                    return (new Date).getTime()
                }
            })
        }, function(e, t, r) {
            var i = r(183);
            e.exports = i
        }, function(e, t, r) {
            r(34);
            var i = r(184),
                n = r(45),
                o = Array.prototype,
                s = {
                    DOMTokenList: !0,
                    NodeList: !0
                };
            e.exports = function(e) {
                var t = e.forEach;
                return e === o || e instanceof Array && t === o.forEach || s.hasOwnProperty(n(e)) ? i : t
            }
        }, function(e, t, r) {
            var i = r(185);
            e.exports = i
        }, function(e, t, r) {
            r(186);
            var i = r(21);
            e.exports = i("Array").forEach
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(187);
            i({
                target: "Array",
                proto: !0,
                forced: [].forEach != n
            }, {
                forEach: n
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(25).forEach,
                n = r(69)("forEach");
            e.exports = n ? [].forEach : function(e) {
                return i(this, e, arguments.length > 1 ? arguments[1] : void 0)
            }
        }, function(e, t, r) {
            "use strict";
            var i = r(189),
                n = r(193),
                o = r(98),
                s = r(196),
                a = r(99),
                d = r(200),
                c = r(205),
                u = r(26),
                l = r(35);
            u(t, "__esModule", {
                value: !0
            }), t.deleteDB = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    r = t.blocked,
                    i = indexedDB.deleteDatabase(e);
                return r && i.addEventListener("blocked", (function() {
                    return r()
                })), (0, v.w)(i).then((function() {}))
            }, t.openDB = function(e, t) {
                var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                    i = r.blocked,
                    n = r.upgrade,
                    o = r.blocking,
                    s = r.terminated,
                    a = indexedDB.open(e, t),
                    d = (0, v.w)(a);
                return n && a.addEventListener("upgradeneeded", (function(e) {
                    n((0, v.w)(a.result), e.oldVersion, e.newVersion, (0, v.w)(a.transaction))
                })), i && a.addEventListener("blocked", (function() {
                    return i()
                })), d.then((function(e) {
                    s && e.addEventListener("close", (function() {
                        return s()
                    })), o && e.addEventListener("versionchange", (function() {
                        return o()
                    }))
                })).catch((function() {})), d
            }, u(t, "unwrap", {
                enumerable: !0,
                get: function() {
                    return v.u
                }
            }), u(t, "wrap", {
                enumerable: !0,
                get: function() {
                    return v.w
                }
            });
            var p = l(r(209)),
                f = l(r(211)),
                h = l(r(212)),
                m = l(r(213)),
                g = l(r(105)),
                v = r(250);

            function y(e, t) {
                var r = i(e);
                if (n) {
                    var a = n(e);
                    t && (a = o(a).call(a, (function(t) {
                        return s(e, t).enumerable
                    }))), r.push.apply(r, a)
                }
                return r
            }

            function _(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r, i = null != arguments[t] ? arguments[t] : {};
                    if (t % 2) a(r = y(Object(i), !0)).call(r, (function(t) {
                        (0, f.default)(e, t, i[t])
                    }));
                    else if (d) c(e, d(i));
                    else {
                        var n;
                        a(n = y(Object(i))).call(n, (function(t) {
                            u(e, t, s(i, t))
                        }))
                    }
                }
                return e
            }
            var S = ["get", "getKey", "getAll", "getAllKeys", "count"],
                b = ["put", "add", "delete", "clear"],
                R = new m.default;

            function w(e, t) {
                if (e instanceof IDBDatabase && !(t in e) && "string" == typeof t) {
                    if (R.get(t)) return R.get(t);
                    var r = t.replace(/FromIndex$/, ""),
                        i = t !== r,
                        n = (0, g.default)(b).call(b, r);
                    if (r in (i ? IDBIndex : IDBObjectStore).prototype && (n || (0, g.default)(S).call(S, r))) {
                        var o = function() {
                            var e = (0, h.default)(p.default.mark((function e(t) {
                                var o, s, a, d, c, u, l, f = arguments;
                                return p.default.wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            for (s = this.transaction(t, n ? "readwrite" : "readonly"), a = s.store, d = f.length, c = new Array(d > 1 ? d - 1 : 0), u = 1; u < d; u++) c[u - 1] = f[u];
                                            return i && (a = a.index(c.shift())), e.next = 6, (o = a)[r].apply(o, c);
                                        case 6:
                                            if (l = e.sent, !n) {
                                                e.next = 10;
                                                break
                                            }
                                            return e.next = 10, s.done;
                                        case 10:
                                            return e.abrupt("return", l);
                                        case 11:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })));
                            return function(t) {
                                return e.apply(this, arguments)
                            }
                        }();
                        return R.set(t, o), o
                    }
                }
            }(0, v.r)((function(e) {
                return _(_({}, e), {}, {
                    get: function(t, r, i) {
                        return w(t, r) || e.get(t, r, i)
                    },
                    has: function(t, r) {
                        return !!w(t, r) || e.has(t, r)
                    }
                })
            }))
        }, function(e, t, r) {
            e.exports = r(190)
        }, function(e, t, r) {
            var i = r(191);
            e.exports = i
        }, function(e, t, r) {
            r(192);
            var i = r(9);
            e.exports = i.Object.keys
        }, function(e, t, r) {
            var i = r(0),
                n = r(19),
                o = r(56);
            i({
                target: "Object",
                stat: !0,
                forced: r(7)((function() {
                    o(1)
                }))
            }, {
                keys: function(e) {
                    return o(n(e))
                }
            })
        }, function(e, t, r) {
            e.exports = r(194)
        }, function(e, t, r) {
            var i = r(195);
            e.exports = i
        }, function(e, t, r) {
            r(95);
            var i = r(9);
            e.exports = i.Object.getOwnPropertySymbols
        }, function(e, t, r) {
            e.exports = r(197)
        }, function(e, t, r) {
            var i = r(198);
            e.exports = i
        }, function(e, t, r) {
            r(199);
            var i = r(9).Object,
                n = e.exports = function(e, t) {
                    return i.getOwnPropertyDescriptor(e, t)
                };
            i.getOwnPropertyDescriptor.sham && (n.sham = !0)
        }, function(e, t, r) {
            var i = r(0),
                n = r(7),
                o = r(18),
                s = r(27).f,
                a = r(11),
                d = n((function() {
                    s(1)
                }));
            i({
                target: "Object",
                stat: !0,
                forced: !a || d,
                sham: !a
            }, {
                getOwnPropertyDescriptor: function(e, t) {
                    return s(o(e), t)
                }
            })
        }, function(e, t, r) {
            e.exports = r(201)
        }, function(e, t, r) {
            var i = r(202);
            e.exports = i
        }, function(e, t, r) {
            r(203);
            var i = r(9);
            e.exports = i.Object.getOwnPropertyDescriptors
        }, function(e, t, r) {
            var i = r(0),
                n = r(11),
                o = r(204),
                s = r(18),
                a = r(27),
                d = r(65);
            i({
                target: "Object",
                stat: !0,
                sham: !n
            }, {
                getOwnPropertyDescriptors: function(e) {
                    for (var t, r, i = s(e), n = a.f, c = o(i), u = {}, l = 0; c.length > l;) void 0 !== (r = n(i, t = c[l++])) && d(u, t, r);
                    return u
                }
            })
        }, function(e, t, r) {
            var i = r(16),
                n = r(67),
                o = r(96),
                s = r(1);
            e.exports = i("Reflect", "ownKeys") || function(e) {
                var t = n.f(s(e)),
                    r = o.f;
                return r ? t.concat(r(e)) : t
            }
        }, function(e, t, r) {
            e.exports = r(206)
        }, function(e, t, r) {
            var i = r(207);
            e.exports = i
        }, function(e, t, r) {
            r(208);
            var i = r(9).Object,
                n = e.exports = function(e, t) {
                    return i.defineProperties(e, t)
                };
            i.defineProperties.sham && (n.sham = !0)
        }, function(e, t, r) {
            var i = r(0),
                n = r(11);
            i({
                target: "Object",
                stat: !0,
                forced: !n,
                sham: !n
            }, {
                defineProperties: r(76)
            })
        }, function(e, t, r) {
            e.exports = r(210)
        }, function(e, t, r) {
            var i = function(e) {
                "use strict";
                var t = Object.prototype,
                    r = t.hasOwnProperty,
                    i = "function" == typeof Symbol ? Symbol : {},
                    n = i.iterator || "@@iterator",
                    o = i.asyncIterator || "@@asyncIterator",
                    s = i.toStringTag || "@@toStringTag";

                function a(e, t, r) {
                    return Object.defineProperty(e, t, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }), e[t]
                }
                try {
                    a({}, "")
                } catch (e) {
                    a = function(e, t, r) {
                        return e[t] = r
                    }
                }

                function d(e, t, r, i) {
                    var n = t && t.prototype instanceof l ? t : l,
                        o = Object.create(n.prototype),
                        s = new w(i || []);
                    return o._invoke = function(e, t, r) {
                        var i = "suspendedStart";
                        return function(n, o) {
                            if ("executing" === i) throw new Error("Generator is already running");
                            if ("completed" === i) {
                                if ("throw" === n) throw o;
                                return {
                                    value: void 0,
                                    done: !0
                                }
                            }
                            for (r.method = n, r.arg = o;;) {
                                var s = r.delegate;
                                if (s) {
                                    var a = S(s, r);
                                    if (a) {
                                        if (a === u) continue;
                                        return a
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if ("suspendedStart" === i) throw i = "completed", r.arg;
                                    r.dispatchException(r.arg)
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                i = "executing";
                                var d = c(e, t, r);
                                if ("normal" === d.type) {
                                    if (i = r.done ? "completed" : "suspendedYield", d.arg === u) continue;
                                    return {
                                        value: d.arg,
                                        done: r.done
                                    }
                                }
                                "throw" === d.type && (i = "completed", r.method = "throw", r.arg = d.arg)
                            }
                        }
                    }(e, r, s), o
                }

                function c(e, t, r) {
                    try {
                        return {
                            type: "normal",
                            arg: e.call(t, r)
                        }
                    } catch (e) {
                        return {
                            type: "throw",
                            arg: e
                        }
                    }
                }
                e.wrap = d;
                var u = {};

                function l() {}

                function p() {}

                function f() {}
                var h = {};
                h[n] = function() {
                    return this
                };
                var m = Object.getPrototypeOf,
                    g = m && m(m(T([])));
                g && g !== t && r.call(g, n) && (h = g);
                var v = f.prototype = l.prototype = Object.create(h);

                function y(e) {
                    ["next", "throw", "return"].forEach((function(t) {
                        a(e, t, (function(e) {
                            return this._invoke(t, e)
                        }))
                    }))
                }

                function _(e, t) {
                    var i;
                    this._invoke = function(n, o) {
                        function s() {
                            return new t((function(i, s) {
                                ! function i(n, o, s, a) {
                                    var d = c(e[n], e, o);
                                    if ("throw" !== d.type) {
                                        var u = d.arg,
                                            l = u.value;
                                        return l && "object" == typeof l && r.call(l, "__await") ? t.resolve(l.__await).then((function(e) {
                                            i("next", e, s, a)
                                        }), (function(e) {
                                            i("throw", e, s, a)
                                        })) : t.resolve(l).then((function(e) {
                                            u.value = e, s(u)
                                        }), (function(e) {
                                            return i("throw", e, s, a)
                                        }))
                                    }
                                    a(d.arg)
                                }(n, o, i, s)
                            }))
                        }
                        return i = i ? i.then(s, s) : s()
                    }
                }

                function S(e, t) {
                    var r = e.iterator[t.method];
                    if (void 0 === r) {
                        if (t.delegate = null, "throw" === t.method) {
                            if (e.iterator.return && (t.method = "return", t.arg = void 0, S(e, t), "throw" === t.method)) return u;
                            t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method")
                        }
                        return u
                    }
                    var i = c(r, e.iterator, t.arg);
                    if ("throw" === i.type) return t.method = "throw", t.arg = i.arg, t.delegate = null, u;
                    var n = i.arg;
                    return n ? n.done ? (t[e.resultName] = n.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, u) : n : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, u)
                }

                function b(e) {
                    var t = {
                        tryLoc: e[0]
                    };
                    1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
                }

                function R(e) {
                    var t = e.completion || {};
                    t.type = "normal", delete t.arg, e.completion = t
                }

                function w(e) {
                    this.tryEntries = [{
                        tryLoc: "root"
                    }], e.forEach(b, this), this.reset(!0)
                }

                function T(e) {
                    if (e) {
                        var t = e[n];
                        if (t) return t.call(e);
                        if ("function" == typeof e.next) return e;
                        if (!isNaN(e.length)) {
                            var i = -1,
                                o = function t() {
                                    for (; ++i < e.length;)
                                        if (r.call(e, i)) return t.value = e[i], t.done = !1, t;
                                    return t.value = void 0, t.done = !0, t
                                };
                            return o.next = o
                        }
                    }
                    return {
                        next: E
                    }
                }

                function E() {
                    return {
                        value: void 0,
                        done: !0
                    }
                }
                return p.prototype = v.constructor = f, f.constructor = p, p.displayName = a(f, s, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                    var t = "function" == typeof e && e.constructor;
                    return !!t && (t === p || "GeneratorFunction" === (t.displayName || t.name))
                }, e.mark = function(e) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(e, f) : (e.__proto__ = f, a(e, s, "GeneratorFunction")), e.prototype = Object.create(v), e
                }, e.awrap = function(e) {
                    return {
                        __await: e
                    }
                }, y(_.prototype), _.prototype[o] = function() {
                    return this
                }, e.AsyncIterator = _, e.async = function(t, r, i, n, o) {
                    void 0 === o && (o = Promise);
                    var s = new _(d(t, r, i, n), o);
                    return e.isGeneratorFunction(r) ? s : s.next().then((function(e) {
                        return e.done ? e.value : s.next()
                    }))
                }, y(v), a(v, s, "Generator"), v[n] = function() {
                    return this
                }, v.toString = function() {
                    return "[object Generator]"
                }, e.keys = function(e) {
                    var t = [];
                    for (var r in e) t.push(r);
                    return t.reverse(),
                        function r() {
                            for (; t.length;) {
                                var i = t.pop();
                                if (i in e) return r.value = i, r.done = !1, r
                            }
                            return r.done = !0, r
                        }
                }, e.values = T, w.prototype = {
                    constructor: w,
                    reset: function(e) {
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(R), !e)
                            for (var t in this) "t" === t.charAt(0) && r.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                    },
                    stop: function() {
                        this.done = !0;
                        var e = this.tryEntries[0].completion;
                        if ("throw" === e.type) throw e.arg;
                        return this.rval
                    },
                    dispatchException: function(e) {
                        if (this.done) throw e;
                        var t = this;

                        function i(r, i) {
                            return s.type = "throw", s.arg = e, t.next = r, i && (t.method = "next", t.arg = void 0), !!i
                        }
                        for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                            var o = this.tryEntries[n],
                                s = o.completion;
                            if ("root" === o.tryLoc) return i("end");
                            if (o.tryLoc <= this.prev) {
                                var a = r.call(o, "catchLoc"),
                                    d = r.call(o, "finallyLoc");
                                if (a && d) {
                                    if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
                                    if (this.prev < o.finallyLoc) return i(o.finallyLoc)
                                } else if (a) {
                                    if (this.prev < o.catchLoc) return i(o.catchLoc, !0)
                                } else {
                                    if (!d) throw new Error("try statement without catch or finally");
                                    if (this.prev < o.finallyLoc) return i(o.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(e, t) {
                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var n = this.tryEntries[i];
                            if (n.tryLoc <= this.prev && r.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
                                var o = n;
                                break
                            }
                        }
                        o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
                        var s = o ? o.completion : {};
                        return s.type = e, s.arg = t, o ? (this.method = "next", this.next = o.finallyLoc, u) : this.complete(s)
                    },
                    complete: function(e, t) {
                        if ("throw" === e.type) throw e.arg;
                        return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), u
                    },
                    finish: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var r = this.tryEntries[t];
                            if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), R(r), u
                        }
                    },
                    catch: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var r = this.tryEntries[t];
                            if (r.tryLoc === e) {
                                var i = r.completion;
                                if ("throw" === i.type) {
                                    var n = i.arg;
                                    R(r)
                                }
                                return n
                            }
                        }
                        throw new Error("illegal catch attempt")
                    },
                    delegateYield: function(e, t, r) {
                        return this.delegate = {
                            iterator: T(e),
                            resultName: t,
                            nextLoc: r
                        }, "next" === this.method && (this.arg = void 0), u
                    }
                }, e
            }(e.exports);
            try {
                regeneratorRuntime = i
            } catch (e) {
                Function("r", "regeneratorRuntime = r")(i)
            }
        }, function(e, t, r) {
            var i = r(26);
            e.exports = function(e, t, r) {
                return t in e ? i(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = r, e
            }, e.exports.default = e.exports, e.exports.__esModule = !0
        }, function(e, t, r) {
            var i = r(38);

            function n(e, t, r, n, o, s, a) {
                try {
                    var d = e[s](a),
                        c = d.value
                } catch (e) {
                    return void r(e)
                }
                d.done ? t(c) : i.resolve(c).then(n, o)
            }
            e.exports = function(e) {
                return function() {
                    var t = this,
                        r = arguments;
                    return new i((function(i, o) {
                        var s = e.apply(t, r);

                        function a(e) {
                            n(s, i, o, a, d, "next", e)
                        }

                        function d(e) {
                            n(s, i, o, a, d, "throw", e)
                        }
                        a(void 0)
                    }))
                }
            }, e.exports.default = e.exports, e.exports.__esModule = !0
        }, function(e, t, r) {
            e.exports = r(214)
        }, function(e, t, r) {
            var i = r(215);
            r(219), r(220), r(221), r(222), r(223), r(225), r(226), r(227), r(228), r(229), r(231), r(232), r(233), r(234), r(235), r(236), r(237), r(238), r(239), r(240), e.exports = i
        }, function(e, t, r) {
            r(216), r(46), r(61), r(34);
            var i = r(9);
            e.exports = i.Map
        }, function(e, t, r) {
            "use strict";
            var i = r(100),
                n = r(218);
            e.exports = i("Map", (function(e) {
                return function() {
                    return e(this, arguments.length ? arguments[0] : void 0)
                }
            }), n)
        }, function(e, t, r) {
            var i = r(7);
            e.exports = !i((function() {
                return Object.isExtensible(Object.preventExtensions({}))
            }))
        }, function(e, t, r) {
            "use strict";
            var i = r(15).f,
                n = r(41),
                o = r(47),
                s = r(12),
                a = r(48),
                d = r(4),
                c = r(62),
                u = r(84),
                l = r(11),
                p = r(50).fastKey,
                f = r(20),
                h = f.set,
                m = f.getterFor;
            e.exports = {
                getConstructor: function(e, t, r, c) {
                    var u = e((function(e, i) {
                            a(e, u, t), h(e, {
                                type: t,
                                index: n(null),
                                first: void 0,
                                last: void 0,
                                size: 0
                            }), l || (e.size = 0), null != i && d(i, e[c], {
                                that: e,
                                AS_ENTRIES: r
                            })
                        })),
                        f = m(t),
                        g = function(e, t, r) {
                            var i, n, o = f(e),
                                s = v(e, t);
                            return s ? s.value = r : (o.last = s = {
                                index: n = p(t, !0),
                                key: t,
                                value: r,
                                previous: i = o.last,
                                next: void 0,
                                removed: !1
                            }, o.first || (o.first = s), i && (i.next = s), l ? o.size++ : e.size++, "F" !== n && (o.index[n] = s)), e
                        },
                        v = function(e, t) {
                            var r, i = f(e),
                                n = p(t);
                            if ("F" !== n) return i.index[n];
                            for (r = i.first; r; r = r.next)
                                if (r.key == t) return r
                        };
                    return o(u.prototype, {
                        clear: function() {
                            for (var e = f(this), t = e.index, r = e.first; r;) r.removed = !0, r.previous && (r.previous = r.previous.next = void 0), delete t[r.index], r = r.next;
                            e.first = e.last = void 0, l ? e.size = 0 : this.size = 0
                        },
                        delete: function(e) {
                            var t = f(this),
                                r = v(this, e);
                            if (r) {
                                var i = r.next,
                                    n = r.previous;
                                delete t.index[r.index], r.removed = !0, n && (n.next = i), i && (i.previous = n), t.first == r && (t.first = i), t.last == r && (t.last = n), l ? t.size-- : this.size--
                            }
                            return !!r
                        },
                        forEach: function(e) {
                            for (var t, r = f(this), i = s(e, arguments.length > 1 ? arguments[1] : void 0, 3); t = t ? t.next : r.first;)
                                for (i(t.value, t.key, this); t && t.removed;) t = t.previous
                        },
                        has: function(e) {
                            return !!v(this, e)
                        }
                    }), o(u.prototype, r ? {
                        get: function(e) {
                            var t = v(this, e);
                            return t && t.value
                        },
                        set: function(e, t) {
                            return g(this, 0 === e ? 0 : e, t)
                        }
                    } : {
                        add: function(e) {
                            return g(this, e = 0 === e ? 0 : e, e)
                        }
                    }), l && i(u.prototype, "size", {
                        get: function() {
                            return f(this).size
                        }
                    }), u
                },
                setStrong: function(e, t, r) {
                    var i = t + " Iterator",
                        n = m(t),
                        o = m(i);
                    c(e, t, (function(e, t) {
                        h(this, {
                            type: i,
                            target: e,
                            state: n(e),
                            kind: t,
                            last: void 0
                        })
                    }), (function() {
                        for (var e = o(this), t = e.kind, r = e.last; r && r.removed;) r = r.previous;
                        return e.target && (e.last = r = r ? r.next : e.state.first) ? "keys" == t ? {
                            value: r.key,
                            done: !1
                        } : "values" == t ? {
                            value: r.value,
                            done: !1
                        } : {
                            value: [r.key, r.value],
                            done: !1
                        } : (e.target = void 0, {
                            value: void 0,
                            done: !0
                        })
                    }), r ? "entries" : "values", !r, !0), u(t)
                }
            }
        }, function(e, t, r) {
            r(0)({
                target: "Map",
                stat: !0
            }, {
                from: r(101)
            })
        }, function(e, t, r) {
            r(0)({
                target: "Map",
                stat: !0
            }, {
                of: r(102)
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(2),
                o = r(103);
            i({
                target: "Map",
                proto: !0,
                real: !0,
                forced: n
            }, {
                deleteAll: function() {
                    return o.apply(this, arguments)
                }
            })
        }, function(e, t, r) {
            "use strict";
            r(0)({
                target: "Map",
                proto: !0,
                real: !0,
                forced: r(2)
            }, {
                emplace: r(104)
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(2),
                o = r(1),
                s = r(12),
                a = r(17),
                d = r(4);
            i({
                target: "Map",
                proto: !0,
                real: !0,
                forced: n
            }, {
                every: function(e) {
                    var t = o(this),
                        r = a(t),
                        i = s(e, arguments.length > 1 ? arguments[1] : void 0, 3);
                    return !d(r, (function(e, r, n) {
                        if (!i(r, e, t)) return n()
                    }), {
                        AS_ENTRIES: !0,
                        IS_ITERATOR: !0,
                        INTERRUPTED: !0
                    }).stopped
                }
            })
        }, function(e, t, r) {
            var i = r(1),
                n = r(82);
            e.exports = function(e) {
                var t = n(e);
                if ("function" != typeof t) throw TypeError(String(e) + " is not iterable");
                return i(t.call(e))
            }
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(2),
                o = r(16),
                s = r(1),
                a = r(8),
                d = r(12),
                c = r(32),
                u = r(17),
                l = r(4);
            i({
                target: "Map",
                proto: !0,
                real: !0,
                forced: n
            }, {
                filter: function(e) {
                    var t = s(this),
                        r = u(t),
                        i = d(e, arguments.length > 1 ? arguments[1] : void 0, 3),
                        n = new(c(t, o("Map"))),
                        p = a(n.set);
                    return l(r, (function(e, r) {
                        i(r, e, t) && p.call(n, e, r)
                    }), {
                        AS_ENTRIES: !0,
                        IS_ITERATOR: !0
                    }), n
                }
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(2),
                o = r(1),
                s = r(12),
                a = r(17),
                d = r(4);
            i({
                target: "Map",
                proto: !0,
                real: !0,
                forced: n
            }, {
                find: function(e) {
                    var t = o(this),
                        r = a(t),
                        i = s(e, arguments.length > 1 ? arguments[1] : void 0, 3);
                    return d(r, (function(e, r, n) {
                        if (i(r, e, t)) return n(r)
                    }), {
                        AS_ENTRIES: !0,
                        IS_ITERATOR: !0,
                        INTERRUPTED: !0
                    }).result
                }
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(2),
                o = r(1),
                s = r(12),
                a = r(17),
                d = r(4);
            i({
                target: "Map",
                proto: !0,
                real: !0,
                forced: n
            }, {
                findKey: function(e) {
                    var t = o(this),
                        r = a(t),
                        i = s(e, arguments.length > 1 ? arguments[1] : void 0, 3);
                    return d(r, (function(e, r, n) {
                        if (i(r, e, t)) return n(e)
                    }), {
                        AS_ENTRIES: !0,
                        IS_ITERATOR: !0,
                        INTERRUPTED: !0
                    }).result
                }
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(4),
                o = r(8);
            i({
                target: "Map",
                stat: !0
            }, {
                groupBy: function(e, t) {
                    var r = new this;
                    o(t);
                    var i = o(r.has),
                        s = o(r.get),
                        a = o(r.set);
                    return n(e, (function(e) {
                        var n = t(e);
                        i.call(r, n) ? s.call(r, n).push(e) : a.call(r, n, [e])
                    })), r
                }
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(2),
                o = r(1),
                s = r(17),
                a = r(230),
                d = r(4);
            i({
                target: "Map",
                proto: !0,
                real: !0,
                forced: n
            }, {
                includes: function(e) {
                    return d(s(o(this)), (function(t, r, i) {
                        if (a(r, e)) return i()
                    }), {
                        AS_ENTRIES: !0,
                        IS_ITERATOR: !0,
                        INTERRUPTED: !0
                    }).stopped
                }
            })
        }, function(e, t) {
            e.exports = function(e, t) {
                return e === t || e != e && t != t
            }
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(4),
                o = r(8);
            i({
                target: "Map",
                stat: !0
            }, {
                keyBy: function(e, t) {
                    var r = new this;
                    o(t);
                    var i = o(r.set);
                    return n(e, (function(e) {
                        i.call(r, t(e), e)
                    })), r
                }
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(2),
                o = r(1),
                s = r(17),
                a = r(4);
            i({
                target: "Map",
                proto: !0,
                real: !0,
                forced: n
            }, {
                keyOf: function(e) {
                    return a(s(o(this)), (function(t, r, i) {
                        if (r === e) return i(t)
                    }), {
                        AS_ENTRIES: !0,
                        IS_ITERATOR: !0,
                        INTERRUPTED: !0
                    }).result
                }
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(2),
                o = r(16),
                s = r(1),
                a = r(8),
                d = r(12),
                c = r(32),
                u = r(17),
                l = r(4);
            i({
                target: "Map",
                proto: !0,
                real: !0,
                forced: n
            }, {
                mapKeys: function(e) {
                    var t = s(this),
                        r = u(t),
                        i = d(e, arguments.length > 1 ? arguments[1] : void 0, 3),
                        n = new(c(t, o("Map"))),
                        p = a(n.set);
                    return l(r, (function(e, r) {
                        p.call(n, i(r, e, t), r)
                    }), {
                        AS_ENTRIES: !0,
                        IS_ITERATOR: !0
                    }), n
                }
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(2),
                o = r(16),
                s = r(1),
                a = r(8),
                d = r(12),
                c = r(32),
                u = r(17),
                l = r(4);
            i({
                target: "Map",
                proto: !0,
                real: !0,
                forced: n
            }, {
                mapValues: function(e) {
                    var t = s(this),
                        r = u(t),
                        i = d(e, arguments.length > 1 ? arguments[1] : void 0, 3),
                        n = new(c(t, o("Map"))),
                        p = a(n.set);
                    return l(r, (function(e, r) {
                        p.call(n, e, i(r, e, t))
                    }), {
                        AS_ENTRIES: !0,
                        IS_ITERATOR: !0
                    }), n
                }
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(2),
                o = r(1),
                s = r(8),
                a = r(4);
            i({
                target: "Map",
                proto: !0,
                real: !0,
                forced: n
            }, {
                merge: function(e) {
                    for (var t = o(this), r = s(t.set), i = 0; i < arguments.length;) a(arguments[i++], r, {
                        that: t,
                        AS_ENTRIES: !0
                    });
                    return t
                }
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(2),
                o = r(1),
                s = r(8),
                a = r(17),
                d = r(4);
            i({
                target: "Map",
                proto: !0,
                real: !0,
                forced: n
            }, {
                reduce: function(e) {
                    var t = o(this),
                        r = a(t),
                        i = arguments.length < 2,
                        n = i ? void 0 : arguments[1];
                    if (s(e), d(r, (function(r, o) {
                            i ? (i = !1, n = o) : n = e(n, o, r, t)
                        }), {
                            AS_ENTRIES: !0,
                            IS_ITERATOR: !0
                        }), i) throw TypeError("Reduce of empty map with no initial value");
                    return n
                }
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(2),
                o = r(1),
                s = r(12),
                a = r(17),
                d = r(4);
            i({
                target: "Map",
                proto: !0,
                real: !0,
                forced: n
            }, {
                some: function(e) {
                    var t = o(this),
                        r = a(t),
                        i = s(e, arguments.length > 1 ? arguments[1] : void 0, 3);
                    return d(r, (function(e, r, n) {
                        if (i(r, e, t)) return n()
                    }), {
                        AS_ENTRIES: !0,
                        IS_ITERATOR: !0,
                        INTERRUPTED: !0
                    }).stopped
                }
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(2),
                o = r(1),
                s = r(8);
            i({
                target: "Map",
                proto: !0,
                real: !0,
                forced: n
            }, {
                update: function(e, t) {
                    var r = o(this),
                        i = arguments.length;
                    s(t);
                    var n = r.has(e);
                    if (!n && i < 3) throw TypeError("Updating absent value");
                    var a = n ? r.get(e) : s(i > 2 ? arguments[2] : void 0)(e, r);
                    return r.set(e, t(a, e, r)), r
                }
            })
        }, function(e, t, r) {
            "use strict";
            r(0)({
                target: "Map",
                proto: !0,
                real: !0,
                forced: r(2)
            }, {
                upsert: r(70)
            })
        }, function(e, t, r) {
            "use strict";
            r(0)({
                target: "Map",
                proto: !0,
                real: !0,
                forced: r(2)
            }, {
                updateOrInsert: r(70)
            })
        }, function(e, t, r) {
            var i = r(242);
            e.exports = i
        }, function(e, t, r) {
            var i = r(243),
                n = r(245),
                o = Array.prototype,
                s = String.prototype;
            e.exports = function(e) {
                var t = e.includes;
                return e === o || e instanceof Array && t === o.includes ? i : "string" == typeof e || e === s || e instanceof String && t === s.includes ? n : t
            }
        }, function(e, t, r) {
            r(244);
            var i = r(21);
            e.exports = i("Array").includes
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(78).includes,
                o = r(93);
            i({
                target: "Array",
                proto: !0
            }, {
                includes: function(e) {
                    return n(this, e, arguments.length > 1 ? arguments[1] : void 0)
                }
            }), o("includes")
        }, function(e, t, r) {
            r(246);
            var i = r(21);
            e.exports = i("String").includes
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(247),
                o = r(36);
            i({
                target: "String",
                proto: !0,
                forced: !r(249)("includes")
            }, {
                includes: function(e) {
                    return !!~String(o(this)).indexOf(n(e), arguments.length > 1 ? arguments[1] : void 0)
                }
            })
        }, function(e, t, r) {
            var i = r(248);
            e.exports = function(e) {
                if (i(e)) throw TypeError("The method doesn't accept regular expressions");
                return e
            }
        }, function(e, t, r) {
            var i = r(10),
                n = r(28),
                o = r(6)("match");
            e.exports = function(e) {
                var t;
                return i(e) && (void 0 !== (t = e[o]) ? !!t : "RegExp" == n(e))
            }
        }, function(e, t, r) {
            var i = r(6)("match");
            e.exports = function(e) {
                var t = /./;
                try {
                    "/./" [e](t)
                } catch (r) {
                    try {
                        return t[i] = !1, "/./" [e](t)
                    } catch (e) {}
                }
                return !1
            }
        }, function(e, t, r) {
            "use strict";
            var i = r(26),
                n = r(35);
            i(t, "__esModule", {
                value: !0
            }), t.r = function(e) {
                _ = e(_)
            }, t.w = b, t.u = t.i = t.a = void 0;
            var o, s, a = n(r(251)),
                d = n(r(256)),
                c = n(r(38)),
                u = n(r(266)),
                l = n(r(270)),
                p = n(r(105)),
                f = function(e, t) {
                    return (0, a.default)(t).call(t, (function(t) {
                        return e instanceof t
                    }))
                };
            t.i = f;
            var h = new d.default,
                m = new d.default,
                g = new d.default,
                v = new d.default,
                y = new d.default;
            t.a = y;
            var _ = {
                get: function(e, t, r) {
                    if (e instanceof IDBTransaction) {
                        if ("done" === t) return m.get(e);
                        if ("objectStoreNames" === t) return e.objectStoreNames || g.get(e);
                        if ("store" === t) return r.objectStoreNames[1] ? void 0 : r.objectStore(r.objectStoreNames[0])
                    }
                    return b(e[t])
                },
                set: function(e, t, r) {
                    return e[t] = r, !0
                },
                has: function(e, t) {
                    return e instanceof IDBTransaction && ("done" === t || "store" === t) || t in e
                }
            };

            function S(e) {
                return "function" == typeof e ? function(e) {
                    var t;
                    return e !== IDBDatabase.prototype.transaction || "objectStoreNames" in IDBTransaction.prototype ? (0, p.default)(t = s || (s = [IDBCursor.prototype.advance, IDBCursor.prototype.continue, IDBCursor.prototype.continuePrimaryKey])).call(t, e) ? function() {
                        for (var t = arguments.length, r = new Array(t), i = 0; i < t; i++) r[i] = arguments[i];
                        return e.apply(R(this), r), b(h.get(this))
                    } : function() {
                        for (var t = arguments.length, r = new Array(t), i = 0; i < t; i++) r[i] = arguments[i];
                        return b(e.apply(R(this), r))
                    } : function(t) {
                        for (var r, i = arguments.length, n = new Array(i > 1 ? i - 1 : 0), o = 1; o < i; o++) n[o - 1] = arguments[o];
                        var s = e.call.apply(e, (0, u.default)(r = [R(this), t]).call(r, n));
                        return g.set(s, (0, l.default)(t) ? (0, l.default)(t).call(t) : [t]), b(s)
                    }
                }(e) : (e instanceof IDBTransaction && function(e) {
                    if (!m.has(e)) {
                        var t = new c.default((function(t, r) {
                            var i = function() {
                                    e.removeEventListener("complete", n), e.removeEventListener("error", o), e.removeEventListener("abort", o)
                                },
                                n = function() {
                                    t(), i()
                                },
                                o = function() {
                                    r(e.error || new DOMException("AbortError", "AbortError")), i()
                                };
                            e.addEventListener("complete", n), e.addEventListener("error", o), e.addEventListener("abort", o)
                        }));
                        m.set(e, t)
                    }
                }(e), f(e, o || (o = [IDBDatabase, IDBObjectStore, IDBIndex, IDBCursor, IDBTransaction])) ? new Proxy(e, _) : e)
            }

            function b(e) {
                if (e instanceof IDBRequest) return t = e, (r = new c.default((function(e, r) {
                    var i = function() {
                            t.removeEventListener("success", n), t.removeEventListener("error", o)
                        },
                        n = function() {
                            e(b(t.result)), i()
                        },
                        o = function() {
                            r(t.error), i()
                        };
                    t.addEventListener("success", n), t.addEventListener("error", o)
                }))).then((function(e) {
                    e instanceof IDBCursor && h.set(e, t)
                })).catch((function() {})), y.set(r, t), r;
                var t, r;
                if (v.has(e)) return v.get(e);
                var i = S(e);
                return i !== e && (v.set(e, i), y.set(i, e)), i
            }
            var R = function(e) {
                return y.get(e)
            };
            t.u = R
        }, function(e, t, r) {
            e.exports = r(252)
        }, function(e, t, r) {
            var i = r(253);
            e.exports = i
        }, function(e, t, r) {
            var i = r(254),
                n = Array.prototype;
            e.exports = function(e) {
                var t = e.some;
                return e === n || e instanceof Array && t === n.some ? i : t
            }
        }, function(e, t, r) {
            r(255);
            var i = r(21);
            e.exports = i("Array").some
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(25).some;
            i({
                target: "Array",
                proto: !0,
                forced: !r(69)("some")
            }, {
                some: function(e) {
                    return n(this, e, arguments.length > 1 ? arguments[1] : void 0)
                }
            })
        }, function(e, t, r) {
            e.exports = r(257)
        }, function(e, t, r) {
            var i = r(258);
            r(261), r(262), r(263), r(264), r(265), e.exports = i
        }, function(e, t, r) {
            r(46), r(259), r(34);
            var i = r(9);
            e.exports = i.WeakMap
        }, function(e, t, r) {
            "use strict";
            var i, n = r(3),
                o = r(47),
                s = r(50),
                a = r(100),
                d = r(260),
                c = r(10),
                u = r(20).enforce,
                l = r(89),
                p = !n.ActiveXObject && "ActiveXObject" in n,
                f = Object.isExtensible,
                h = function(e) {
                    return function() {
                        return e(this, arguments.length ? arguments[0] : void 0)
                    }
                },
                m = e.exports = a("WeakMap", h, d);
            if (l && p) {
                i = d.getConstructor(h, "WeakMap", !0), s.REQUIRED = !0;
                var g = m.prototype,
                    v = g.delete,
                    y = g.has,
                    _ = g.get,
                    S = g.set;
                o(g, {
                    delete: function(e) {
                        if (c(e) && !f(e)) {
                            var t = u(this);
                            return t.frozen || (t.frozen = new i), v.call(this, e) || t.frozen.delete(e)
                        }
                        return v.call(this, e)
                    },
                    has: function(e) {
                        if (c(e) && !f(e)) {
                            var t = u(this);
                            return t.frozen || (t.frozen = new i), y.call(this, e) || t.frozen.has(e)
                        }
                        return y.call(this, e)
                    },
                    get: function(e) {
                        if (c(e) && !f(e)) {
                            var t = u(this);
                            return t.frozen || (t.frozen = new i), y.call(this, e) ? _.call(this, e) : t.frozen.get(e)
                        }
                        return _.call(this, e)
                    },
                    set: function(e, t) {
                        if (c(e) && !f(e)) {
                            var r = u(this);
                            r.frozen || (r.frozen = new i), y.call(this, e) ? S.call(this, e, t) : r.frozen.set(e, t)
                        } else S.call(this, e, t);
                        return this
                    }
                })
            }
        }, function(e, t, r) {
            "use strict";
            var i = r(47),
                n = r(50).getWeakData,
                o = r(1),
                s = r(10),
                a = r(48),
                d = r(4),
                c = r(25),
                u = r(13),
                l = r(20),
                p = l.set,
                f = l.getterFor,
                h = c.find,
                m = c.findIndex,
                g = 0,
                v = function(e) {
                    return e.frozen || (e.frozen = new y)
                },
                y = function() {
                    this.entries = []
                },
                _ = function(e, t) {
                    return h(e.entries, (function(e) {
                        return e[0] === t
                    }))
                };
            y.prototype = {
                get: function(e) {
                    var t = _(this, e);
                    if (t) return t[1]
                },
                has: function(e) {
                    return !!_(this, e)
                },
                set: function(e, t) {
                    var r = _(this, e);
                    r ? r[1] = t : this.entries.push([e, t])
                },
                delete: function(e) {
                    var t = m(this.entries, (function(t) {
                        return t[0] === e
                    }));
                    return ~t && this.entries.splice(t, 1), !!~t
                }
            }, e.exports = {
                getConstructor: function(e, t, r, c) {
                    var l = e((function(e, i) {
                            a(e, l, t), p(e, {
                                type: t,
                                id: g++,
                                frozen: void 0
                            }), null != i && d(i, e[c], {
                                that: e,
                                AS_ENTRIES: r
                            })
                        })),
                        h = f(t),
                        m = function(e, t, r) {
                            var i = h(e),
                                s = n(o(t), !0);
                            return !0 === s ? v(i).set(t, r) : s[i.id] = r, e
                        };
                    return i(l.prototype, {
                        delete: function(e) {
                            var t = h(this);
                            if (!s(e)) return !1;
                            var r = n(e);
                            return !0 === r ? v(t).delete(e) : r && u(r, t.id) && delete r[t.id]
                        },
                        has: function(e) {
                            var t = h(this);
                            if (!s(e)) return !1;
                            var r = n(e);
                            return !0 === r ? v(t).has(e) : r && u(r, t.id)
                        }
                    }), i(l.prototype, r ? {
                        get: function(e) {
                            var t = h(this);
                            if (s(e)) {
                                var r = n(e);
                                return !0 === r ? v(t).get(e) : r ? r[t.id] : void 0
                            }
                        },
                        set: function(e, t) {
                            return m(this, e, t)
                        }
                    } : {
                        add: function(e) {
                            return m(this, e, !0)
                        }
                    }), l
                }
            }
        }, function(e, t, r) {
            "use strict";
            r(0)({
                target: "WeakMap",
                proto: !0,
                real: !0,
                forced: r(2)
            }, {
                emplace: r(104)
            })
        }, function(e, t, r) {
            r(0)({
                target: "WeakMap",
                stat: !0
            }, {
                from: r(101)
            })
        }, function(e, t, r) {
            r(0)({
                target: "WeakMap",
                stat: !0
            }, {
                of: r(102)
            })
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(2),
                o = r(103);
            i({
                target: "WeakMap",
                proto: !0,
                real: !0,
                forced: n
            }, {
                deleteAll: function() {
                    return o.apply(this, arguments)
                }
            })
        }, function(e, t, r) {
            "use strict";
            r(0)({
                target: "WeakMap",
                proto: !0,
                real: !0,
                forced: r(2)
            }, {
                upsert: r(70)
            })
        }, function(e, t, r) {
            e.exports = r(267)
        }, function(e, t, r) {
            var i = r(268);
            e.exports = i
        }, function(e, t, r) {
            var i = r(269),
                n = Array.prototype;
            e.exports = function(e) {
                var t = e.concat;
                return e === n || e instanceof Array && t === n.concat ? i : t
            }
        }, function(e, t, r) {
            r(94);
            var i = r(21);
            e.exports = i("Array").concat
        }, function(e, t, r) {
            e.exports = r(271)
        }, function(e, t, r) {
            var i = r(272);
            e.exports = i
        }, function(e, t, r) {
            var i = r(273),
                n = Array.prototype;
            e.exports = function(e) {
                var t = e.sort;
                return e === n || e instanceof Array && t === n.sort ? i : t
            }
        }, function(e, t, r) {
            r(274);
            var i = r(21);
            e.exports = i("Array").sort
        }, function(e, t, r) {
            "use strict";
            var i = r(0),
                n = r(8),
                o = r(19),
                s = r(7),
                a = r(69),
                d = [],
                c = d.sort,
                u = s((function() {
                    d.sort(void 0)
                })),
                l = s((function() {
                    d.sort(null)
                })),
                p = a("sort");
            i({
                target: "Array",
                proto: !0,
                forced: u || !l || !p
            }, {
                sort: function(e) {
                    return void 0 === e ? c.call(o(this)) : c.call(o(this), n(e))
                }
            })
        }]).default
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Uploader = void 0;
        const n = i(r(37));
        let o = window.localStorage;
        o && "function" == typeof o.getItem && "function" == typeof o.setItem && "function" == typeof o.removeItem || (o = {
            privateObj: {},
            setItem: function(e, t) {
                o.privateObj[e] = t
            },
            getItem: function(e) {
                return o.privateObj[e]
            },
            removeItem: function(e) {
                delete o.privateObj[e]
            }
        }), t.Uploader = function(e) {
            const t = {
                    urlDns: "https://wanproxy-web.127.net",
                    retryCount: 2,
                    timeout: 5e4,
                    onError: function(e) {
                        console.log(e)
                    },
                    onProgress: function(e) {
                        console.log(e.status), console.log(e.progress)
                    }
                },
                r = Object.assign({}, t, e),
                i = {
                    version: "1.0",
                    uploadFile: null,
                    edgeNodeList: null,
                    dnsRetryCount: 0,
                    uTRetryCount: r.retryCount,
                    gORetryCount: r.retryCount,
                    gDRetryCount: r.retryCount,
                    createAjax: function() {
                        return new XMLHttpRequest
                    },
                    clearStorage: function(e, t, r) {
                        o.removeItem(r + "_progress"), o.removeItem(r + "_" + e + "_" + t + "_context")
                    },
                    addFile: function(e, t) {
                        if (e) {
                            var r, s = n.default(e.name + ":" + e.size);
                            r = {
                                fileKey: s,
                                file: e,
                                fileName: e.name,
                                status: 0,
                                progress: o.getItem(s + "_progress") || 0
                            }, i.uploadFile && (i.uploadFile = null), i.uploadFile = Object.assign({}, r), t && t(r)
                        }
                    },
                    getFile: function(e) {
                        var t;
                        return i.uploadFile.fileKey === e && (t = i.uploadFile), t
                    },
                    getDNS: function(e, t) {
                        if (null != e && "" !== e || (e = ""), i.edgeNodeList) t(i.edgeNodeList);
                        else {
                            let e = ["https://wanproxy-web.127.net"];
                            i.edgeNodeList = e, t(e, r.urlDns)
                        }
                    },
                    getOffset: function(e, t) {
                        var n;
                        if (!(n = o.getItem(e.fileKey + "_" + e.bucketName + "_" + e.objectName + "_context"))) return t(0);
                        fetch(e.serveIp + "/" + e.bucketName + "/" + encodeURIComponent(e.objectName) + "?uploadContext&" + new URLSearchParams({
                            version: i.version,
                            context: n
                        }), {
                            headers: {
                                "x-nos-token": e.token
                            }
                        }).then(n => {
                            if (n.ok) return n.json().then(e => {
                                e.errCode ? r.onError({
                                    errCode: e.errCode,
                                    errMsg: e.errMsg
                                }) : t(e.offset)
                            });
                            n.status.toString().match(/^5/) && i.gORetryCount > 0 && i.gORetryCount < r.retryCount + 1 ? (i.getOffset(e, t), i.gORetryCount--) : (r.onError(n.statusText), i.gORetryCount = r.retryCount, 404 === n.status && i.clearStorage(e.bucketName, e.objectName, e.fileKey))
                        })
                    },
                    uploadTrunk: function(e, t, n) {
                        var s, a, d, c, u = File.prototype.slice;
                        d = i.getFile(t.fileKey), c = o.getItem(t.fileKey + "_" + e.bucketName + "_" + e.objectName + "_context"), d.xhr ? s = d.xhr : (s = i.createAjax(), d.xhr = s), s.upload.onprogress = function(e) {
                            var i = 0;
                            e.lengthComputable ? (i = (t.offset + e.loaded) / t.file.size, d.progress = (100 * i).toFixed(2), i > 0 && i < 1 ? d.status = 1 : 1 === i && (d.status = 2), o.setItem(t.fileKey + "_progress", d.progress), r.onProgress(d)) : r.onError({
                                errMsg: "浏览器不支持进度事件"
                            })
                        }, s.onreadystatechange = function() {
                            if (4 === s.readyState) {
                                var a;
                                try {
                                    a = JSON.parse(s.responseText)
                                } catch (e) {
                                    a = {
                                        errMsg: "未知错误"
                                    }
                                }
                                if (200 === s.status) 0 === d.file.size && (d.status = 2, d.progress = 100, r.onProgress(d)), o.setItem(t.fileKey + "_" + e.bucketName + "_" + e.objectName + "_context", a.context), a.offset < t.file.size ? i.uploadTrunk(e, Object.assign({}, t, {
                                    offset: a.offset,
                                    trunkEnd: a.offset + t.trunkSize,
                                    context: c || a.context
                                }), n) : n(t);
                                else if (s.status.toString().match(/^5/))
                                    if (i.uTRetryCount < r.retryCount + 1 && i.uTRetryCount > 0) i.getOffset({
                                        serveIp: e.serveIp,
                                        bucketName: e.bucketName,
                                        objectName: e.objectName,
                                        token: e.token,
                                        fileKey: t.fileKey
                                    }, (function(r) {
                                        i.uploadTrunk(e, Object.assign({}, t, {
                                            offset: r,
                                            trunkEnd: r + t.trunkSize,
                                            context: o.getItem(t.fileKey + "_" + e.bucketName + "_" + e.objectName + "_context") || ""
                                        }), n)
                                    })), i.uTRetryCount--;
                                    else if (i.dnsRetryCount < i.edgeNodeList.length - 1) {
                                    i.uTRetryCount = r.retryCount, i.dnsRetryCount++;
                                    var u = Object.assign({}, e, {
                                        serveIp: i.edgeNodeList[i.dnsRetryCount]
                                    });
                                    i.getOffset({
                                        serveIp: u.serveIp,
                                        bucketName: u.bucketName,
                                        objectName: u.objectName,
                                        token: u.token,
                                        fileKey: t.fileKey
                                    }, (function(r) {
                                        i.uploadTrunk(u, Object.assign({}, t, {
                                            offset: r,
                                            trunkEnd: r + t.trunkSize,
                                            context: o.getItem(t.fileKey + "_" + e.bucketName + "_" + e.objectName + "_context") || ""
                                        }), n)
                                    }))
                                } else i.dnsRetryCount = 0, r.onError({
                                    errCode: a.errCode,
                                    errMsg: a.errMsg
                                }), i.clearStorage(e.bucketName, e.objectName, t.fileKey);
                                else s.status ? (i.clearStorage(e.bucketName, e.objectName, t.fileKey), r.onError({
                                    errCode: a.errCode,
                                    errMsg: a.errMsg
                                })) : console.log("上传已暂停")
                            }
                        }, a = "?offset=" + t.offset + "&complete=" + (t.trunkEnd >= t.file.size) + "&context=" + (c || t.context) + "&version=" + i.version, s.open("post", e.serveIp + "/" + e.bucketName + "/" + encodeURIComponent(e.objectName) + a), s.setRequestHeader("x-nos-token", e.token), s.timeout = r.timeout, s.send(u.call(t.file, t.offset, t.trunkEnd))
                    },
                    upload: function(e, t) {
                        if (e.bucketName || 0 === e.bucketName)
                            if (e.objectName || 0 === e.objectName)
                                if (e.token)
                                    if (e.trunkSize ? "[object String]" === Object.prototype.toString.call(e.trunkSize) && (e.trunkSize = parseInt(e.trunkSize)) : e.trunkSize = 131072, i.uploadFile) {
                                        var n = i.uploadFile;
                                        i.getDNS(e.bucketName, (function(o, s) {
                                            0 !== o.length ? i.getOffset({
                                                serveIp: o[0],
                                                bucketName: e.bucketName,
                                                objectName: e.objectName,
                                                fileKey: n.fileKey,
                                                token: e.token
                                            }, (function(r) {
                                                i.uploadTrunk({
                                                    serveIp: o[0],
                                                    bucketName: e.bucketName,
                                                    objectName: e.objectName,
                                                    token: e.token
                                                }, {
                                                    file: n.file,
                                                    fileKey: n.fileKey,
                                                    offset: r || 0,
                                                    trunkSize: e.trunkSize,
                                                    trunkEnd: (r || 0) + e.trunkSize,
                                                    context: ""
                                                }, (function(r) {
                                                    i.clearStorage(e.bucketName, e.objectName, r.fileKey), t && t(n)
                                                }))
                                            })) : r.onError({
                                                errMsg: "暂无边缘节点"
                                            })
                                        }))
                                    } else r.onError({
                                        errMsg: "未选择需上传的文件"
                                    });
                        else r.onError({
                            errMsg: "上传凭证不能为空"
                        });
                        else r.onError({
                            errMsg: "对象名不能为空"
                        });
                        else r.onError({
                            errMsg: "桶名不能为空"
                        })
                    }
                };
            return i
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.serverError = t.clientNotYetPublished = t.STREAM_HAS_NO_MEDIA_ATTRIBUTES = t.clientNotYetUninitialized = t.invalidArguments = t.ok = void 0, t.ok = {
            name: "OK",
            code: 200,
            desc: "success"
        }, t.invalidArguments = {
            name: "invalid arguments",
            code: 1,
            desc: "请检查参数的有效性"
        }, t.clientNotYetUninitialized = {
            name: "client not yet uninitialized",
            code: 2,
            desc: "请先调用createClient创建Client"
        }, t.STREAM_HAS_NO_MEDIA_ATTRIBUTES = {
            name: "STREAM_HAS_NO_MEDIA_ATTRIBUTES",
            code: 10,
            desc: "stream不合法，没有audio、video或者screen属性"
        }, t.clientNotYetPublished = {
            name: "client not yet published",
            code: 11,
            desc: "请先publish"
        }, t.serverError = {
            name: "server error code",
            code: 414,
            desc: ""
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.LIVE_STREAM_AUDIO_CODEC_PROFILE = t.LIVE_STREAM_AUDIO_SAMPLE_RATE = void 0, t.LIVE_STREAM_AUDIO_SAMPLE_RATE = {
            SAMPLE_RATE_32000: 32e3,
            SAMPLE_RATE_44100: 44100,
            SAMPLE_RATE_48000: 48e3
        }, t.LIVE_STREAM_AUDIO_CODEC_PROFILE = {
            LC_AAC: 0,
            HE_AAC: 1
        }
    }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.NETWORK_STATUS = void 0, t.NETWORK_STATUS = {
            0: "UNKNOWN",
            1: "EXCELLENT",
            2: "GOOD",
            3: "POOR",
            4: "BAD",
            5: "VERYBAD",
            6: "DOWN"
        }
    }, function(e, t, r) {
        "use strict";
        var i = this && this.__createBinding || (Object.create ? function(e, t, r, i) {
                void 0 === i && (i = r), Object.defineProperty(e, i, {
                    enumerable: !0,
                    get: function() {
                        return t[r]
                    }
                })
            } : function(e, t, r, i) {
                void 0 === i && (i = r), e[i] = t[r]
            }),
            n = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                Object.defineProperty(e, "default", {
                    enumerable: !0,
                    value: t
                })
            } : function(e, t) {
                e.default = t
            }),
            o = this && this.__importStar || function(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                return n(t, e), t
            };
        Object.defineProperty(t, "__esModule", {
            value: !0
        });
        const s = o(r(252)),
            a = r(77);
        sessionStorage.setItem("uploadLogEnabled", "0");
        const d = {
            setLogLevel(e) {
                s.info("NERTC LogLevel was set to: " + e), s.setLevel(e)
            },
            enableLogUpload() {
                Number(sessionStorage.getItem("uploadLogEnabled")) || (s.info("enable upload log"), a.logController.init(), sessionStorage.setItem("uploadLogEnabled", "1"))
            },
            disableLogUpload() {
                Number(sessionStorage.getItem("uploadLogEnabled")) && (s.info("disable upload log"), sessionStorage.setItem("uploadLogEnabled", "0"))
            }
        };
        d.disableLogUpload(), s.setLevel("INFO"), t.default = d
    }, function(e, t, r) {
        var i, n;
        ! function(o, s) {
            "use strict";
            void 0 === (n = "function" == typeof(i = function() {
                var e = function() {},
                    t = "undefined" != typeof window && void 0 !== window.navigator && /Trident\/|MSIE /.test(window.navigator.userAgent),
                    r = ["trace", "debug", "info", "warn", "error"];

                function i(e, t) {
                    var r = e[t];
                    if ("function" == typeof r.bind) return r.bind(e);
                    try {
                        return Function.prototype.bind.call(r, e)
                    } catch (t) {
                        return function() {
                            return Function.prototype.apply.apply(r, [e, arguments])
                        }
                    }
                }

                function n() {
                    console.log && (console.log.apply ? console.log.apply(console, arguments) : Function.prototype.apply.apply(console.log, [console, arguments])), console.trace && console.trace()
                }

                function o(r) {
                    return "debug" === r && (r = "log"), "undefined" != typeof console && ("trace" === r && t ? n : void 0 !== console[r] ? i(console, r) : void 0 !== console.log ? i(console, "log") : e)
                }

                function s(t, i) {
                    for (var n = 0; n < r.length; n++) {
                        var o = r[n];
                        this[o] = n < t ? e : this.methodFactory(o, t, i)
                    }
                    this.log = this.debug
                }

                function a(e, t, r) {
                    return function() {
                        "undefined" != typeof console && (s.call(this, t, r), this[e].apply(this, arguments))
                    }
                }

                function d(e, t, r) {
                    return o(e) || a.apply(this, arguments)
                }

                function c(e, t, i) {
                    var n, o = this,
                        a = "loglevel";

                    function c() {
                        var e;
                        if ("undefined" != typeof window && a) {
                            try {
                                e = window.localStorage[a]
                            } catch (e) {}
                            if (void 0 === e) try {
                                var t = window.document.cookie,
                                    r = t.indexOf(encodeURIComponent(a) + "="); - 1 !== r && (e = /^([^;]+)/.exec(t.slice(r))[1])
                            } catch (e) {}
                            return void 0 === o.levels[e] && (e = void 0), e
                        }
                    }
                    "string" == typeof e ? a += ":" + e : "symbol" == typeof e && (a = void 0), o.name = e, o.levels = {
                        TRACE: 0,
                        DEBUG: 1,
                        INFO: 2,
                        WARN: 3,
                        ERROR: 4,
                        SILENT: 5
                    }, o.methodFactory = i || d, o.getLevel = function() {
                        return n
                    }, o.setLevel = function(t, i) {
                        if ("string" == typeof t && void 0 !== o.levels[t.toUpperCase()] && (t = o.levels[t.toUpperCase()]), !("number" == typeof t && t >= 0 && t <= o.levels.SILENT)) throw "log.setLevel() called with invalid level: " + t;
                        if (n = t, !1 !== i && function(e) {
                                var t = (r[e] || "silent").toUpperCase();
                                if ("undefined" != typeof window && a) {
                                    try {
                                        return void(window.localStorage[a] = t)
                                    } catch (e) {}
                                    try {
                                        window.document.cookie = encodeURIComponent(a) + "=" + t + ";"
                                    } catch (e) {}
                                }
                            }(t), s.call(o, t, e), "undefined" == typeof console && t < o.levels.SILENT) return "No console available for logging"
                    }, o.setDefaultLevel = function(e) {
                        c() || o.setLevel(e, !1)
                    }, o.enableAll = function(e) {
                        o.setLevel(o.levels.TRACE, e)
                    }, o.disableAll = function(e) {
                        o.setLevel(o.levels.SILENT, e)
                    };
                    var u = c();
                    null == u && (u = null == t ? "WARN" : t), o.setLevel(u, !1)
                }
                var u = new c,
                    l = {};
                u.getLogger = function(e) {
                    if ("symbol" != typeof e && "string" != typeof e || "" === e) throw new TypeError("You must supply a name when creating a logger.");
                    var t = l[e];
                    return t || (t = l[e] = new c(e, u.getLevel(), u.methodFactory)), t
                };
                var p = "undefined" != typeof window ? window.log : void 0;
                return u.noConflict = function() {
                    return "undefined" != typeof window && window.log === u && (window.log = p), u
                }, u.getLoggers = function() {
                    return l
                }, u.default = u, u
            }) ? i.call(t, r, t, e) : i) || (e.exports = n)
        }()
    }])
}));